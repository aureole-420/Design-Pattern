<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:UMLLabProfile="http:///schemas/UMLLabProfile/NS/0" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http:///schemas/UMLLabProfile/NS/0 pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile">
  <uml:Model xmi:id="_H-6mEKbYEeefQ6YhjiYj2A" name="HW05">
    <eAnnotations xmi:id="_Ig0ZQKbYEeefQ6YhjiYj2A" source="http://ns.yatta.de/umllab">
      <contents xmi:type="ecore:EAnnotation" xmi:id="_IhYZ8KbYEeefQ6YhjiYj2A" source="codegen">
        <details xmi:id="_IhYZ8abYEeefQ6YhjiYj2A" key="codegenDirectory" value="/HW05/src"/>
        <details xmi:id="_LpI1EKbYEeefQ6YhjiYj2A" key="AssociatedSourceCode" value="/HW05/src/controller/BallWorldController.java;1653800713/1;/HW05/src/model/BallModel.java;1957149821/1;/HW05/src/model/IBallCmd.java;149123728/1;/HW05/src/model/IInteractStrategy.java;2489237941/1;/HW05/src/model/IModel2ViewAdapter.java;1488006733/1;/HW05/src/model/IPaintStrategy.java;3793615740/1;/HW05/src/model/IPaintStrategyFac.java;2597168517/1;/HW05/src/model/IShapeFactory.java;323275379/1;/HW05/src/model/IStrategyFac.java;855749176/1;/HW05/src/model/IUpdateStrategy.java;2126167114/1;/HW05/src/model/MultiInteractStrategy.java;450146279/1;/HW05/src/model/MultiStrategy.java;2809419179/1;/HW05/src/model/ball/Ball.java;1678583628/1;/HW05/src/model/paint/ADecoratorPaintStrategy.java;1772693954/1;/HW05/src/model/paint/APaintStrategy.java;564506569/1;/HW05/src/model/paint/AnimatePaintStrategy.java;1065196625/1;/HW05/src/model/paint/ImagePaintStrategy.java;2375082338/1;/HW05/src/model/paint/MultiPaintStrategy.java;3765114881/1;/HW05/src/model/paint/ShapePaintStrategy.java;469362402/1;/HW05/src/model/paint/UprightImagePaintStrategy.java;1874311560/1;/HW05/src/model/paint/shape/EllipseShapeFactory.java;3629908115/1;/HW05/src/model/paint/shape/Fish1PolygonFactory.java;432457806/1;/HW05/src/model/paint/shape/Fish2PolygonFactory.java;3348838271/1;/HW05/src/model/paint/shape/PolygonFactory.java;3513848407/1;/HW05/src/model/paint/shape/RectangleShapeFactory.java;1352732011/1;/HW05/src/model/paint/strategy/BallPaintStrategy.java;3184123764/1;/HW05/src/model/paint/strategy/BirdSheepImagePaintStrategy.java;388521737/1;/HW05/src/model/paint/strategy/EllipsePaintStrategy.java;541613678/1;/HW05/src/model/paint/strategy/Fish1PaintStrategy.java;1103520138/1;/HW05/src/model/paint/strategy/Fish2PaintStrategy.java;1022453552/1;/HW05/src/model/paint/strategy/FixedColorDecoratorPaintStrategy.java;3775035336/1;/HW05/src/model/paint/strategy/GhostImagePaintStrategy.java;1674220235/1;/HW05/src/model/paint/strategy/NiceFishPaintStrategy.java;166367135/1;/HW05/src/model/paint/strategy/RectanglePaintStrategy.java;1023547895/1;/HW05/src/model/paint/strategy/SquarePaintStrategy.java;1652492685/1;/HW05/src/model/paint/strategy/SwimFishPaintStrategy.java;2740289531/1;/HW05/src/model/updateStrategy/AccelerateStrategy.java;3421091154/1;/HW05/src/model/updateStrategy/AssimilateStrategy.java;4292987867/1;/HW05/src/model/updateStrategy/BrownianStrategy.java;1726288323/1;/HW05/src/model/updateStrategy/Collide2Strategy.java;525507939/1;/HW05/src/model/updateStrategy/CollideStrategy.java;726367938/1;/HW05/src/model/updateStrategy/ColorStrategy.java;3305091996/1;/HW05/src/model/updateStrategy/CurvingStrategy.java;2402221849/1;/HW05/src/model/updateStrategy/DrunkenStrategy.java;56238123/1;/HW05/src/model/updateStrategy/EnlargeStrategy.java;2630185562/1;/HW05/src/model/updateStrategy/FadeOutStrategy.java;1243781071/1;/HW05/src/model/updateStrategy/FrictionStrategy.java;1826255200/1;/HW05/src/model/updateStrategy/InfectStrategy.java;1859391220/1;/HW05/src/model/updateStrategy/KillStrategy.java;196394844/1;/HW05/src/model/updateStrategy/NinjaStrategy.java;1173182377/1;/HW05/src/model/updateStrategy/OverlapStrategy.java;3973872446/1;/HW05/src/model/updateStrategy/RealmStrategy.java;4001535029/1;/HW05/src/model/updateStrategy/SpawnStrategy.java;3629004353/1;/HW05/src/model/updateStrategy/StraightStrategy.java;500105233/1;/HW05/src/model/updateStrategy/SwitcherStrategy.java;3985518760/1;/HW05/src/util/ACollectionDispatcher.java;2173156276/1;/HW05/src/util/ASetDispatcher.java;646520667/1;/HW05/src/util/IDispatcher.java;1352832453/1;/HW05/src/util/ILambda.java;2175358240/1;/HW05/src/util/IObserver.java;867180987/1;/HW05/src/util/IRandomizer.java;4221394398/1;/HW05/src/util/NoOpLambda.java;2147475530/1;/HW05/src/util/Randomizer.java;3597183739/1;/HW05/src/util/SetDispatcherParallel.java;1922070401/1;/HW05/src/util/SetDispatcherSequential.java;3116307159/1;/HW05/src/util/SineMaker.java;1422538444/1;/HW05/src/view/BallGUI.java;1642730673/1;/HW05/src/view/IView2ModelControlAdapter.java;1953031208/1;/HW05/src/view/IView2ModelPaintAdapter.java;999931390/1;"/>
      </contents>
    </eAnnotations>
    <elementImport xmi:id="_KYGD8KbYEeefQ6YhjiYj2A">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
    </elementImport>
    <elementImport xmi:id="_KYGrAKbYEeefQ6YhjiYj2A">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
    </elementImport>
    <elementImport xmi:id="_KYGrAabYEeefQ6YhjiYj2A">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
    </elementImport>
    <elementImport xmi:id="_KYGrAqbYEeefQ6YhjiYj2A">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
    </elementImport>
    <elementImport xmi:id="_KYHSEKbYEeefQ6YhjiYj2A">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
    </elementImport>
    <elementImport xmi:id="_KYHSEabYEeefQ6YhjiYj2A">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </elementImport>
    <elementImport xmi:id="_KYHSEqbYEeefQ6YhjiYj2A">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
    </elementImport>
    <elementImport xmi:id="_KYH5IKbYEeefQ6YhjiYj2A">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#short"/>
    </elementImport>
    <elementImport xmi:id="_KYIgMKbYEeefQ6YhjiYj2A">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </elementImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_KYdQUKbYEeefQ6YhjiYj2A" name="java">
      <packagedElement xmi:type="uml:Package" xmi:id="_KYd3YKbYEeefQ6YhjiYj2A" name="awt">
        <packagedElement xmi:type="uml:Package" xmi:id="_KYyAcKbYEeefQ6YhjiYj2A" name="event">
          <packagedElement xmi:type="uml:Class" xmi:id="_Kr37kabYEeefQ6YhjiYj2A" name="ActionEvent"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_Kr4ioabYEeefQ6YhjiYj2A" name="ActionListener"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_KaQAEKbYEeefQ6YhjiYj2A" name="geom">
          <packagedElement xmi:type="uml:Class" xmi:id="_KtP0kKbYEeefQ6YhjiYj2A" name="AffineTransform"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_Ktz1QKbYEeefQ6YhjiYj2A" name="Ellipse2D"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_Kt8_MKbYEeefQ6YhjiYj2A" name="Rectangle2D"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_Kui1EKbYEeefQ6YhjiYj2A" name="Point2D"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_Kahs4KbYEeefQ6YhjiYj2A" name="image">
          <packagedElement xmi:type="uml:Interface" xmi:id="_KthhYKbYEeefQ6YhjiYj2A" name="ImageObserver"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_Krv_wKbYEeefQ6YhjiYj2A" name="Component"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_Kr0RMKbYEeefQ6YhjiYj2A" name="EventQueue"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_Kr1fUabYEeefQ6YhjiYj2A" name="Graphics"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_Kr5JsabYEeefQ6YhjiYj2A" name="Rectangle"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_Kr6X0abYEeefQ6YhjiYj2A" name="Point"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_Kr6-4abYEeefQ6YhjiYj2A" name="Color"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_KsauIKbYEeefQ6YhjiYj2A" name="Shape"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_KtdP8KbYEeefQ6YhjiYj2A" name="Graphics2D"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_Ktd3AabYEeefQ6YhjiYj2A" name="Image"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_KtfFIabYEeefQ6YhjiYj2A" name="MediaTracker"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_KtgTQabYEeefQ6YhjiYj2A" name="Toolkit"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_Kt5U0abYEeefQ6YhjiYj2A" name="Polygon"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_KwkOUKbYEeefQ6YhjiYj2A" name="BorderLayout"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_Kwn4sabYEeefQ6YhjiYj2A" name="GridLayout"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_KwqU8abYEeefQ6YhjiYj2A" name="Font"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_KyQ3cKbYEeefQ6YhjiYj2A" name="Dimension"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_Kcs3IKbYEeefQ6YhjiYj2A" name="util">
        <packagedElement xmi:type="uml:Package" xmi:id="_KcwhgKbYEeefQ6YhjiYj2A" name="concurrent">
          <packagedElement xmi:type="uml:Class" xmi:id="_KwUWsKbYEeefQ6YhjiYj2A" name="CopyOnWriteArraySet"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_KwNpAKbYEeefQ6YhjiYj2A" name="Collection"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_KyNNEKbYEeefQ6YhjiYj2A" name="lang">
        <packagedElement xmi:type="uml:Class" xmi:id="_KyNNEabYEeefQ6YhjiYj2A" name="Object"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_KYfFgKbYEeefQ6YhjiYj2A" name="model">
      <packagedElement xmi:type="uml:Package" xmi:id="_KYyngKbYEeefQ6YhjiYj2A" name="ball">
        <packagedElement xmi:type="uml:Class" xmi:id="_Kg724KbYEeefQ6YhjiYj2A" name="Ball">
          <ownedComment xmi:id="_K18dmqbYEeefQ6YhjiYj2A">
            <body>The class of ball object which behaves using a strategy object.
@author Yuhui Tong, Haoyuan Yue
@version 1.0</body>
          </ownedComment>
          <ownedAttribute xmi:id="_KzEvwKbYEeefQ6YhjiYj2A" name="location" visibility="protected" type="_Kr6X0abYEeefQ6YhjiYj2A" association="_K2wV4abYEeefQ6YhjiYj2A"/>
          <ownedAttribute xmi:id="_KzFW0KbYEeefQ6YhjiYj2A" name="radius" visibility="protected">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_KzF94abYEeefQ6YhjiYj2A" name="velocity" visibility="protected" type="_Kr6X0abYEeefQ6YhjiYj2A" association="_K2w88abYEeefQ6YhjiYj2A"/>
          <ownedAttribute xmi:id="_KzHMAKbYEeefQ6YhjiYj2A" name="color" visibility="protected" type="_Kr6-4abYEeefQ6YhjiYj2A" association="_K2xkAabYEeefQ6YhjiYj2A"/>
          <ownedAttribute xmi:id="_KzIaIKbYEeefQ6YhjiYj2A" name="canvas" visibility="protected" type="_Krv_wKbYEeefQ6YhjiYj2A" association="_K2yyIabYEeefQ6YhjiYj2A"/>
          <ownedAttribute xmi:id="_KzJoQKbYEeefQ6YhjiYj2A" name="strategy" visibility="protected" type="_Kgt0cKbYEeefQ6YhjiYj2A" association="_K2zZMabYEeefQ6YhjiYj2A"/>
          <ownedAttribute xmi:id="_KzMEgabYEeefQ6YhjiYj2A" name="paintStrategy" visibility="protected" type="_KgdVwKbYEeefQ6YhjiYj2A" association="_K20AQabYEeefQ6YhjiYj2A"/>
          <ownedAttribute xmi:id="_KzMrkabYEeefQ6YhjiYj2A" name="interactStrategy" visibility="protected" type="_KgWoEKbYEeefQ6YhjiYj2A" association="_K20nUabYEeefQ6YhjiYj2A">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_KzMrkqbYEeefQ6YhjiYj2A" value="IInteractStrategy.NULL_STRATEGY"/>
          </ownedAttribute>
          <interfaceRealization xmi:id="_Ks-u0KbYEeefQ6YhjiYj2A" client="_Kg724KbYEeefQ6YhjiYj2A" supplier="_KlC60KbYEeefQ6YhjiYj2A" contract="_KlC60KbYEeefQ6YhjiYj2A"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K0r5UKbYEeefQ6YhjiYj2A" name="Ball" specification="_KxPjwKbYEeefQ6YhjiYj2A">
            <ownedParameter xmi:id="_K0r5UabYEeefQ6YhjiYj2A" name="initialLocation" type="_Kr6X0abYEeefQ6YhjiYj2A"/>
            <ownedParameter xmi:id="_K0r5UqbYEeefQ6YhjiYj2A" name="initialRadius">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_K0r5U6bYEeefQ6YhjiYj2A" name="initialVelocity" type="_Kr6X0abYEeefQ6YhjiYj2A"/>
            <ownedParameter xmi:id="_K0r5VKbYEeefQ6YhjiYj2A" name="initialColor" type="_Kr6-4abYEeefQ6YhjiYj2A"/>
            <ownedParameter xmi:id="_K0r5VabYEeefQ6YhjiYj2A" name="theCanvas" type="_Krv_wKbYEeefQ6YhjiYj2A"/>
            <ownedParameter xmi:id="_K0r5VqbYEeefQ6YhjiYj2A" name="strategy" type="_Kgt0cKbYEeefQ6YhjiYj2A"/>
            <ownedParameter xmi:id="_K0r5V6bYEeefQ6YhjiYj2A" name="paintStrategy" type="_KgdVwKbYEeefQ6YhjiYj2A"/>
            <ownedParameter xmi:id="_K0r5WKbYEeefQ6YhjiYj2A" type="_Kg724KbYEeefQ6YhjiYj2A" direction="return">
              <name xsi:nil="true"/>
            </ownedParameter>
            <language>java</language>
            <body>this.location = initialLocation;
		this.radius = initialRadius;
		this.velocity = initialVelocity;
		this.color = initialColor;
		this.canvas = theCanvas;
		setUpdateStrategy(strategy);
		setPaintStrategy(paintStrategy);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K0sgYKbYEeefQ6YhjiYj2A" name="interactWith" specification="_KtBLEKbYEeefQ6YhjiYj2A">
            <ownedParameter xmi:id="_K0sgYabYEeefQ6YhjiYj2A" name="target" type="_Kg724KbYEeefQ6YhjiYj2A"/>
            <ownedParameter xmi:id="_K0sgYqbYEeefQ6YhjiYj2A" name="dispatcher" type="_Kk8NIKbYEeefQ6YhjiYj2A"/>
            <language>java</language>
            <body>interactStrategy.interact(this, target, dispatcher);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K0sgY6bYEeefQ6YhjiYj2A" name="update" specification="_KtDAQabYEeefQ6YhjiYj2A">
            <ownedParameter xmi:id="_K0sgZKbYEeefQ6YhjiYj2A" name="dispatcher" type="_Kk8NIKbYEeefQ6YhjiYj2A"/>
            <ownedParameter xmi:id="_K0sgZabYEeefQ6YhjiYj2A" name="msg" type="_KgUL0KbYEeefQ6YhjiYj2A"/>
            <language>java</language>
            <body>msg.apply(this, dispatcher);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K0tHcKbYEeefQ6YhjiYj2A" name="updateState" specification="_KtE1cKbYEeefQ6YhjiYj2A">
            <ownedParameter xmi:id="_K0tHcabYEeefQ6YhjiYj2A" name="disp" type="_Kk8NIKbYEeefQ6YhjiYj2A"/>
            <language>java</language>
            <body>strategy.updateState(this, disp);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K0tHcqbYEeefQ6YhjiYj2A" name="paint" specification="_KxSAAKbYEeefQ6YhjiYj2A">
            <ownedParameter xmi:id="_K0tHc6bYEeefQ6YhjiYj2A" name="g" type="_Kr1fUabYEeefQ6YhjiYj2A"/>
            <language>java</language>
            <body>//g.setColor(color);
		//g.fillOval(location.x - radius, location.y - radius, 2 * radius, 2 * radius);
		paintStrategy.paint(g, this);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K0tugKbYEeefQ6YhjiYj2A" name="move" specification="_KhB9gKbYEeefQ6YhjiYj2A">
            <language>java</language>
            <body>location.x += velocity.x;
		location.y += velocity.y;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K0tugabYEeefQ6YhjiYj2A" name="bounce" specification="_KhCkkKbYEeefQ6YhjiYj2A">
            <language>java</language>
            <body>// bounced by the left wall
		if (location.x - radius &lt; 0) {
			location.x = 2 * radius - location.x;
			velocity.x = -velocity.x;
		}

		// bounced by the right wall
		if (location.x + radius > canvas.getWidth()) {
			location.x = 2 * (canvas.getWidth() - radius) - location.x;
			velocity.x = -velocity.x;
		}

		// bounced by the bottom wall
		if (location.y - radius &lt; 0) {
			velocity.y = -velocity.y;
			location.y = 2 * radius - location.y;
		}

		// bounced by the upper wall
		if (location.y + radius > canvas.getHeight()) {
			velocity.y = -velocity.y;
			location.y = 2 * (canvas.getHeight() - radius) - location.y;
		}
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K0tugqbYEeefQ6YhjiYj2A" name="setLocation" specification="_KxSnEKbYEeefQ6YhjiYj2A">
            <ownedParameter xmi:id="_K0tug6bYEeefQ6YhjiYj2A" name="p" type="_Kr6X0abYEeefQ6YhjiYj2A"/>
            <language>java</language>
            <body>location = p;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K0tuhKbYEeefQ6YhjiYj2A" name="getLocation" specification="_KhDLoKbYEeefQ6YhjiYj2A">
            <ownedParameter xmi:id="_K0tuhabYEeefQ6YhjiYj2A" type="_Kr6X0abYEeefQ6YhjiYj2A" direction="return">
              <name xsi:nil="true"/>
            </ownedParameter>
            <language>java</language>
            <body>return location;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K0uVkKbYEeefQ6YhjiYj2A" name="setRadius" specification="_KhEZwKbYEeefQ6YhjiYj2A">
            <ownedParameter xmi:id="_K0uVkabYEeefQ6YhjiYj2A" name="r">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>radius = r;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K0uVkqbYEeefQ6YhjiYj2A" name="getRadius" specification="_KhFA0KbYEeefQ6YhjiYj2A">
            <ownedParameter xmi:id="_K0uVk6bYEeefQ6YhjiYj2A" direction="return">
              <name xsi:nil="true"/>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>return radius;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K0uVlKbYEeefQ6YhjiYj2A" name="setVelocity" specification="_KxT1MKbYEeefQ6YhjiYj2A">
            <ownedParameter xmi:id="_K0uVlabYEeefQ6YhjiYj2A" name="v" type="_Kr6X0abYEeefQ6YhjiYj2A"/>
            <language>java</language>
            <body>velocity = v;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K0uVlqbYEeefQ6YhjiYj2A" name="getVelocity" specification="_KhFn4KbYEeefQ6YhjiYj2A">
            <ownedParameter xmi:id="_K0uVl6bYEeefQ6YhjiYj2A" type="_Kr6X0abYEeefQ6YhjiYj2A" direction="return">
              <name xsi:nil="true"/>
            </ownedParameter>
            <language>java</language>
            <body>return velocity;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K0u8oKbYEeefQ6YhjiYj2A" name="setColor" specification="_KxUcQabYEeefQ6YhjiYj2A">
            <ownedParameter xmi:id="_K0u8oabYEeefQ6YhjiYj2A" name="c" type="_Kr6-4abYEeefQ6YhjiYj2A"/>
            <language>java</language>
            <body>color = c;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K0u8oqbYEeefQ6YhjiYj2A" name="getColor" specification="_KhGO8KbYEeefQ6YhjiYj2A">
            <ownedParameter xmi:id="_K0u8o6bYEeefQ6YhjiYj2A" type="_Kr6-4abYEeefQ6YhjiYj2A" direction="return">
              <name xsi:nil="true"/>
            </ownedParameter>
            <language>java</language>
            <body>return color;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K0u8pKbYEeefQ6YhjiYj2A" name="setUpdateStrategy" specification="_KtGqoKbYEeefQ6YhjiYj2A">
            <ownedParameter xmi:id="_K0u8pabYEeefQ6YhjiYj2A" name="updateStrategy" type="_Kgt0cKbYEeefQ6YhjiYj2A"/>
            <language>java</language>
            <body>strategy = updateStrategy;
		updateStrategy.init(this); // initialize the interactStrategy
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K0vjsKbYEeefQ6YhjiYj2A" name="getStrategy" specification="_KhG2AKbYEeefQ6YhjiYj2A">
            <ownedParameter xmi:id="_K0vjsabYEeefQ6YhjiYj2A" type="_Kgt0cKbYEeefQ6YhjiYj2A" direction="return">
              <name xsi:nil="true"/>
            </ownedParameter>
            <language>java</language>
            <body>return strategy;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K0vjsqbYEeefQ6YhjiYj2A" name="getCanvas" specification="_KhIrMKbYEeefQ6YhjiYj2A">
            <ownedParameter xmi:id="_K0vjs6bYEeefQ6YhjiYj2A" type="_Krv_wKbYEeefQ6YhjiYj2A" direction="return">
              <name xsi:nil="true"/>
            </ownedParameter>
            <language>java</language>
            <body>return canvas;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K0vjtKbYEeefQ6YhjiYj2A" name="setPaintStrategy" specification="_KtIf0KbYEeefQ6YhjiYj2A">
            <ownedParameter xmi:id="_K0vjtabYEeefQ6YhjiYj2A" name="paintStrategy" type="_KgdVwKbYEeefQ6YhjiYj2A"/>
            <language>java</language>
            <body>this.paintStrategy = paintStrategy;
		this.paintStrategy.init(this);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K0vjtqbYEeefQ6YhjiYj2A" name="getPaintStrategy" specification="_KhJ5UKbYEeefQ6YhjiYj2A">
            <ownedParameter xmi:id="_K0vjt6bYEeefQ6YhjiYj2A" type="_KgdVwKbYEeefQ6YhjiYj2A" direction="return">
              <name xsi:nil="true"/>
            </ownedParameter>
            <language>java</language>
            <body>return paintStrategy;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K0wKwKbYEeefQ6YhjiYj2A" name="setInteractStrategy" specification="_KtJG4KbYEeefQ6YhjiYj2A">
            <ownedParameter xmi:id="_K0wKwabYEeefQ6YhjiYj2A" name="interactStrategy" type="_KgWoEKbYEeefQ6YhjiYj2A"/>
            <language>java</language>
            <body>this.interactStrategy = interactStrategy;

	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K0wKwqbYEeefQ6YhjiYj2A" name="getInteractStrategy" specification="_KhKgYKbYEeefQ6YhjiYj2A">
            <ownedParameter xmi:id="_K0wKw6bYEeefQ6YhjiYj2A" type="_KgWoEKbYEeefQ6YhjiYj2A" direction="return">
              <name xsi:nil="true"/>
            </ownedParameter>
            <language>java</language>
            <body>return this.interactStrategy;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_KhB9gKbYEeefQ6YhjiYj2A" name="move" method="_K0tugKbYEeefQ6YhjiYj2A">
            <ownedComment xmi:id="_K19Eo6bYEeefQ6YhjiYj2A">
              <body>Default method that simulate the movement of the ball</body>
            </ownedComment>
          </ownedOperation>
          <ownedOperation xmi:id="_KhCkkKbYEeefQ6YhjiYj2A" name="bounce" method="_K0tugabYEeefQ6YhjiYj2A">
            <ownedComment xmi:id="_K19EpKbYEeefQ6YhjiYj2A">
              <body>This method simulate the bouncing behavior of the ball</body>
            </ownedComment>
          </ownedOperation>
          <ownedOperation xmi:id="_KhDLoKbYEeefQ6YhjiYj2A" name="getLocation" method="_K0tuhKbYEeefQ6YhjiYj2A">
            <ownedComment xmi:id="_K19EpqbYEeefQ6YhjiYj2A">
              <body>Location getter
	 * @return The location of ball</body>
            </ownedComment>
            <ownedParameter xmi:id="_KxTOIKbYEeefQ6YhjiYj2A" type="_Kr6X0abYEeefQ6YhjiYj2A" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_KhEZwKbYEeefQ6YhjiYj2A" name="setRadius" method="_K0uVkKbYEeefQ6YhjiYj2A">
            <ownedComment xmi:id="_K19Ep6bYEeefQ6YhjiYj2A">
              <body>Radius setter
	 * @param r The radius of ball</body>
            </ownedComment>
            <ownedParameter xmi:id="_KhEZwabYEeefQ6YhjiYj2A" name="r">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_KhFA0KbYEeefQ6YhjiYj2A" name="getRadius" method="_K0uVkqbYEeefQ6YhjiYj2A">
            <ownedComment xmi:id="_K19EqKbYEeefQ6YhjiYj2A">
              <body>Radius getter
	 * @return The radius of ball</body>
            </ownedComment>
            <ownedParameter xmi:id="_KhFA0abYEeefQ6YhjiYj2A" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_KhFn4KbYEeefQ6YhjiYj2A" name="getVelocity" method="_K0uVlqbYEeefQ6YhjiYj2A">
            <ownedComment xmi:id="_K19EqqbYEeefQ6YhjiYj2A">
              <body>Velocity getter
	 * @return The velocity of ball.</body>
            </ownedComment>
            <ownedParameter xmi:id="_KxUcQKbYEeefQ6YhjiYj2A" type="_Kr6X0abYEeefQ6YhjiYj2A" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_KhGO8KbYEeefQ6YhjiYj2A" name="getColor" method="_K0u8oqbYEeefQ6YhjiYj2A">
            <ownedComment xmi:id="_K19ErKbYEeefQ6YhjiYj2A">
              <body>Color getter
	 * @return The color of ball.</body>
            </ownedComment>
            <ownedParameter xmi:id="_KxVDUabYEeefQ6YhjiYj2A" type="_Kr6-4abYEeefQ6YhjiYj2A" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_KhG2AKbYEeefQ6YhjiYj2A" name="getStrategy" method="_K0vjsKbYEeefQ6YhjiYj2A">
            <ownedComment xmi:id="_K19ErqbYEeefQ6YhjiYj2A">
              <body>Strategy getter
	 * @return The strategy that ball takes.</body>
            </ownedComment>
            <ownedParameter xmi:id="_KtH4wabYEeefQ6YhjiYj2A" type="_Kgt0cKbYEeefQ6YhjiYj2A" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_KhIrMKbYEeefQ6YhjiYj2A" name="getCanvas" method="_K0vjsqbYEeefQ6YhjiYj2A">
            <ownedComment xmi:id="_K19Er6bYEeefQ6YhjiYj2A">
              <body>Canvas getter
	 * @return The JComponent that ball is paint on.</body>
            </ownedComment>
            <ownedParameter xmi:id="_KxVqYKbYEeefQ6YhjiYj2A" type="_Krv_wKbYEeefQ6YhjiYj2A" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_KhJ5UKbYEeefQ6YhjiYj2A" name="getPaintStrategy" method="_K0vjtqbYEeefQ6YhjiYj2A">
            <ownedComment xmi:id="_K19rsKbYEeefQ6YhjiYj2A">
              <body>Paint Strategy getter
	 * @return The paint strategy</body>
            </ownedComment>
            <ownedParameter xmi:id="_KtIf0qbYEeefQ6YhjiYj2A" type="_KgdVwKbYEeefQ6YhjiYj2A" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_KhKgYKbYEeefQ6YhjiYj2A" name="getInteractStrategy" method="_K0wKwqbYEeefQ6YhjiYj2A">
            <ownedComment xmi:id="_K19rsqbYEeefQ6YhjiYj2A">
              <body>InteractStrategy getter
	 * @return The interactStrategy that the Ball takes.</body>
            </ownedComment>
            <ownedParameter xmi:id="_KtJG4qbYEeefQ6YhjiYj2A" type="_KgWoEKbYEeefQ6YhjiYj2A" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_KtBLEKbYEeefQ6YhjiYj2A" name="interactWith" method="_K0sgYKbYEeefQ6YhjiYj2A">
            <ownedComment xmi:id="_K18dnKbYEeefQ6YhjiYj2A">
              <body>Post-contact interaction behavior of THIS ball on a target ball.
	 * @param target The Target ball to be interacted with.
	 * @param dispatcher The observable.</body>
            </ownedComment>
            <ownedParameter xmi:id="_KtBLEabYEeefQ6YhjiYj2A" name="target" type="_Kg724KbYEeefQ6YhjiYj2A"/>
            <ownedParameter xmi:id="_KtBLEqbYEeefQ6YhjiYj2A" name="dispatcher" type="_Kk8NIKbYEeefQ6YhjiYj2A"/>
          </ownedOperation>
          <ownedOperation xmi:id="_KtDAQabYEeefQ6YhjiYj2A" name="update" method="_K0sgY6bYEeefQ6YhjiYj2A">
            <ownedComment xmi:id="_K19EoKbYEeefQ6YhjiYj2A">
              <body>receive message (command) from this dispatcher</body>
            </ownedComment>
            <ownedParameter xmi:id="_KtDnUKbYEeefQ6YhjiYj2A" name="dispatcher" type="_Kk8NIKbYEeefQ6YhjiYj2A"/>
            <ownedParameter xmi:id="_KtDnUabYEeefQ6YhjiYj2A" name="msg" type="_KgUL0KbYEeefQ6YhjiYj2A"/>
          </ownedOperation>
          <ownedOperation xmi:id="_KtE1cKbYEeefQ6YhjiYj2A" name="updateState" method="_K0tHcKbYEeefQ6YhjiYj2A">
            <ownedComment xmi:id="_K19EoabYEeefQ6YhjiYj2A">
              <body>Update the dstate of the ball.
	 * @param disp The dispatcher to use if necessary.</body>
            </ownedComment>
            <ownedParameter xmi:id="_KtE1cabYEeefQ6YhjiYj2A" name="disp" type="_Kk8NIKbYEeefQ6YhjiYj2A"/>
          </ownedOperation>
          <ownedOperation xmi:id="_KtGqoKbYEeefQ6YhjiYj2A" name="setUpdateStrategy" method="_K0u8pKbYEeefQ6YhjiYj2A">
            <ownedComment xmi:id="_K19ErabYEeefQ6YhjiYj2A">
              <body>Strategy setter
	 * @param updateStrategy The strategy that ball takes</body>
            </ownedComment>
            <ownedParameter xmi:id="_KtGqoabYEeefQ6YhjiYj2A" name="updateStrategy" type="_Kgt0cKbYEeefQ6YhjiYj2A"/>
          </ownedOperation>
          <ownedOperation xmi:id="_KtIf0KbYEeefQ6YhjiYj2A" name="setPaintStrategy" method="_K0vjtKbYEeefQ6YhjiYj2A">
            <ownedComment xmi:id="_K19EsKbYEeefQ6YhjiYj2A">
              <body>Paint Strategy setter
	 * @param paintStrategy The paintStrategy for a ball to take.</body>
            </ownedComment>
            <ownedParameter xmi:id="_KtIf0abYEeefQ6YhjiYj2A" name="paintStrategy" type="_KgdVwKbYEeefQ6YhjiYj2A"/>
          </ownedOperation>
          <ownedOperation xmi:id="_KtJG4KbYEeefQ6YhjiYj2A" name="setInteractStrategy" method="_K0wKwKbYEeefQ6YhjiYj2A">
            <ownedComment xmi:id="_K19rsabYEeefQ6YhjiYj2A">
              <body>interactStrategy setter
	 * @param interactStrategy The interactStrategy for a ball to take.</body>
            </ownedComment>
            <ownedParameter xmi:id="_KtJG4abYEeefQ6YhjiYj2A" name="interactStrategy" type="_KgWoEKbYEeefQ6YhjiYj2A"/>
          </ownedOperation>
          <ownedOperation xmi:id="_KxPjwKbYEeefQ6YhjiYj2A" name="Ball" method="_K0r5UKbYEeefQ6YhjiYj2A">
            <eAnnotations xmi:id="_KxQK1KbYEeefQ6YhjiYj2A" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_KxQK1abYEeefQ6YhjiYj2A" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_K18dm6bYEeefQ6YhjiYj2A">
              <body>Constructor of ABall
	 * @param initialLocation Initial location of the ball
	 * @param initialRadius Initial radius of the ball
	 * @param initialVelocity Initial velocity of the ball
	 * @param initialColor Initial color of the ball
	 * @param theCanvas The canvas jpanel object
	 * @param strategy The strategy that ball behaves
	 * @param paintStrategy The paintStrategy that ball uses</body>
            </ownedComment>
            <ownedParameter xmi:id="_KxPjwabYEeefQ6YhjiYj2A" name="initialLocation" type="_Kr6X0abYEeefQ6YhjiYj2A"/>
            <ownedParameter xmi:id="_KxPjwqbYEeefQ6YhjiYj2A" name="initialRadius">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_KxPjw6bYEeefQ6YhjiYj2A" name="initialVelocity" type="_Kr6X0abYEeefQ6YhjiYj2A"/>
            <ownedParameter xmi:id="_KxQK0KbYEeefQ6YhjiYj2A" name="initialColor" type="_Kr6-4abYEeefQ6YhjiYj2A"/>
            <ownedParameter xmi:id="_KxQK0abYEeefQ6YhjiYj2A" name="theCanvas" type="_Krv_wKbYEeefQ6YhjiYj2A"/>
            <ownedParameter xmi:id="_KxQK0qbYEeefQ6YhjiYj2A" name="strategy" type="_Kgt0cKbYEeefQ6YhjiYj2A"/>
            <ownedParameter xmi:id="_KxQK06bYEeefQ6YhjiYj2A" name="paintStrategy" type="_KgdVwKbYEeefQ6YhjiYj2A"/>
            <ownedParameter xmi:id="_KxQK1qbYEeefQ6YhjiYj2A" type="_Kg724KbYEeefQ6YhjiYj2A" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_KxSAAKbYEeefQ6YhjiYj2A" name="paint" method="_K0tHcqbYEeefQ6YhjiYj2A">
            <ownedComment xmi:id="_K19EoqbYEeefQ6YhjiYj2A">
              <body>This method paints the ball
	 * @param g The graphics object</body>
            </ownedComment>
            <ownedParameter xmi:id="_KxSAAabYEeefQ6YhjiYj2A" name="g" type="_Kr1fUabYEeefQ6YhjiYj2A"/>
          </ownedOperation>
          <ownedOperation xmi:id="_KxSnEKbYEeefQ6YhjiYj2A" name="setLocation" method="_K0tugqbYEeefQ6YhjiYj2A">
            <ownedComment xmi:id="_K19EpabYEeefQ6YhjiYj2A">
              <body>Location setter
	 * @param p the location of ball</body>
            </ownedComment>
            <ownedParameter xmi:id="_KxSnEabYEeefQ6YhjiYj2A" name="p" type="_Kr6X0abYEeefQ6YhjiYj2A"/>
          </ownedOperation>
          <ownedOperation xmi:id="_KxT1MKbYEeefQ6YhjiYj2A" name="setVelocity" method="_K0uVlKbYEeefQ6YhjiYj2A">
            <ownedComment xmi:id="_K19EqabYEeefQ6YhjiYj2A">
              <body>Velocity setter
	 * @param v The velocity of ball</body>
            </ownedComment>
            <ownedParameter xmi:id="_KxT1MabYEeefQ6YhjiYj2A" name="v" type="_Kr6X0abYEeefQ6YhjiYj2A"/>
          </ownedOperation>
          <ownedOperation xmi:id="_KxUcQabYEeefQ6YhjiYj2A" name="setColor" method="_K0u8oKbYEeefQ6YhjiYj2A">
            <ownedComment xmi:id="_K19Eq6bYEeefQ6YhjiYj2A">
              <body>Color setter
	 * @param c The color of ball.</body>
            </ownedComment>
            <ownedParameter xmi:id="_KxVDUKbYEeefQ6YhjiYj2A" name="c" type="_Kr6-4abYEeefQ6YhjiYj2A"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_K2wV4abYEeefQ6YhjiYj2A" name="" memberEnd="_K2wV4qbYEeefQ6YhjiYj2A _KzEvwKbYEeefQ6YhjiYj2A">
          <ownedEnd xmi:id="_K2wV4qbYEeefQ6YhjiYj2A" name="" type="_Kg724KbYEeefQ6YhjiYj2A" association="_K2wV4abYEeefQ6YhjiYj2A"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_K2w88abYEeefQ6YhjiYj2A" name="" memberEnd="_K2w88qbYEeefQ6YhjiYj2A _KzF94abYEeefQ6YhjiYj2A">
          <ownedEnd xmi:id="_K2w88qbYEeefQ6YhjiYj2A" name="" type="_Kg724KbYEeefQ6YhjiYj2A" association="_K2w88abYEeefQ6YhjiYj2A"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_K2xkAabYEeefQ6YhjiYj2A" name="" memberEnd="_K2xkAqbYEeefQ6YhjiYj2A _KzHMAKbYEeefQ6YhjiYj2A">
          <ownedEnd xmi:id="_K2xkAqbYEeefQ6YhjiYj2A" name="" type="_Kg724KbYEeefQ6YhjiYj2A" association="_K2xkAabYEeefQ6YhjiYj2A"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_K2yyIabYEeefQ6YhjiYj2A" name="" memberEnd="_K2yyIqbYEeefQ6YhjiYj2A _KzIaIKbYEeefQ6YhjiYj2A">
          <ownedEnd xmi:id="_K2yyIqbYEeefQ6YhjiYj2A" name="" type="_Kg724KbYEeefQ6YhjiYj2A" association="_K2yyIabYEeefQ6YhjiYj2A"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_K2zZMabYEeefQ6YhjiYj2A" name="" memberEnd="_K2zZMqbYEeefQ6YhjiYj2A _KzJoQKbYEeefQ6YhjiYj2A">
          <ownedEnd xmi:id="_K2zZMqbYEeefQ6YhjiYj2A" name="" type="_Kg724KbYEeefQ6YhjiYj2A" association="_K2zZMabYEeefQ6YhjiYj2A"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_K20AQabYEeefQ6YhjiYj2A" name="" memberEnd="_K20AQqbYEeefQ6YhjiYj2A _KzMEgabYEeefQ6YhjiYj2A">
          <ownedEnd xmi:id="_K20AQqbYEeefQ6YhjiYj2A" name="" type="_Kg724KbYEeefQ6YhjiYj2A" association="_K20AQabYEeefQ6YhjiYj2A"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_K20nUabYEeefQ6YhjiYj2A" name="" memberEnd="_K20nUqbYEeefQ6YhjiYj2A _KzMrkabYEeefQ6YhjiYj2A">
          <ownedEnd xmi:id="_K20nUqbYEeefQ6YhjiYj2A" name="" type="_Kg724KbYEeefQ6YhjiYj2A" association="_K20nUabYEeefQ6YhjiYj2A"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_KYzOkKbYEeefQ6YhjiYj2A" name="updateStrategy">
        <packagedElement xmi:type="uml:Class" xmi:id="_KjFL8KbYEeefQ6YhjiYj2A" name="AccelerateStrategy">
          <ownedComment xmi:id="_K1_g5KbYEeefQ6YhjiYj2A">
            <body>(exerting acceleration on other balls) implemented purely as an interaction strategy.   
Combine with Overlap/Collide to see slowing other balls.
@author yuhui
 *
@param &lt;TDispMsg> The message dispatched by dispatcher.</body>
          </ownedComment>
          <ownedAttribute xmi:id="_KzdxUKbYEeefQ6YhjiYj2A" name="AccelerationRatio" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_KzdxUabYEeefQ6YhjiYj2A" value="2"/>
          </ownedAttribute>
          <interfaceRealization xmi:id="_KuQhMKbYEeefQ6YhjiYj2A" client="_KjFL8KbYEeefQ6YhjiYj2A" supplier="_Kgt0cKbYEeefQ6YhjiYj2A" contract="_Kgt0cKbYEeefQ6YhjiYj2A"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K1CeoKbYEeefQ6YhjiYj2A" name="init" specification="_KuRvUKbYEeefQ6YhjiYj2A">
            <ownedParameter xmi:id="_K1CeoabYEeefQ6YhjiYj2A" name="context" type="_Kg724KbYEeefQ6YhjiYj2A"/>
            <language>java</language>
            <body>// System.out.println(&quot;KILLING INIT!!!!!!!!!!!!!!!!!!!!!!!!!!!&quot;);
		context.setInteractStrategy(new MultiInteractStrategy(context.getInteractStrategy(), new IInteractStrategy() {
			public void interact(Ball context, Ball target, IDispatcher&lt;IBallCmd> disp) {
				if (context == target) {
					return; // do nothing to context ifself
				}

				// accelerate velocity by 10% every tick
				Point vel = target.getVelocity();
				if (vel.x * vel.x + vel.y * vel.y > 1000) {
					return;
				}
				target.setVelocity(new Point((int) Math.round(AccelerationRatio * target.getVelocity().getX()),
						(int) Math.round(AccelerationRatio * target.getVelocity().getY())));
				//target.setVelocity(new Point(0, 0));
			}
		}));
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_KuRvUKbYEeefQ6YhjiYj2A" name="init" method="_K1CeoKbYEeefQ6YhjiYj2A">
            <ownedComment xmi:id="_K1_g5abYEeefQ6YhjiYj2A">
              <body>{@inheritDoc}&lt;br/>
	 * Initialize a pure interaction strategy that accelerate target balls.</body>
            </ownedComment>
            <ownedParameter xmi:id="_KuRvUabYEeefQ6YhjiYj2A" name="context" type="_Kg724KbYEeefQ6YhjiYj2A"/>
          </ownedOperation>
          <ownedOperation xmi:id="_KuSWYKbYEeefQ6YhjiYj2A" name="updateState">
            <ownedParameter xmi:id="_KuSWYabYEeefQ6YhjiYj2A" name="context" type="_Kg724KbYEeefQ6YhjiYj2A"/>
            <ownedParameter xmi:id="_KuSWYqbYEeefQ6YhjiYj2A" name="disp" type="_Kk8NIKbYEeefQ6YhjiYj2A"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_KjKEcKbYEeefQ6YhjiYj2A" name="AssimilateStrategy">
          <ownedComment xmi:id="_K2AH8KbYEeefQ6YhjiYj2A">
            <body>Assimilation implemented purely as an interaction strategy.   
Combine with Overlap/Collide to see slowing other balls.
Note: the ball will assimilate other balls interms of COLOR/RADIUS/PaintStrategy;
@author Yuhui Tong
 *
@param &lt;TDispMsg> The message dispatched by dispatcher.</body>
          </ownedComment>
          <interfaceRealization xmi:id="_KuVZsKbYEeefQ6YhjiYj2A" client="_KjKEcKbYEeefQ6YhjiYj2A" supplier="_Kgt0cKbYEeefQ6YhjiYj2A" contract="_Kgt0cKbYEeefQ6YhjiYj2A"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K1CeoqbYEeefQ6YhjiYj2A" name="init" specification="_KuWn0abYEeefQ6YhjiYj2A">
            <ownedParameter xmi:id="_K1Ceo6bYEeefQ6YhjiYj2A" name="context" type="_Kg724KbYEeefQ6YhjiYj2A"/>
            <language>java</language>
            <body>// System.out.println(&quot;KILLING INIT!!!!!!!!!!!!!!!!!!!!!!!!!!!&quot;);
		context.setInteractStrategy(new MultiInteractStrategy(context.getInteractStrategy(), new IInteractStrategy() {
			public void interact(Ball context, Ball target, IDispatcher&lt;IBallCmd> disp) {
				if (context == target) {
					return; // do nothing to context ifself
				}

				target.setColor(context.getColor());
				target.setRadius(context.getRadius());
				target.setPaintStrategy(context.getPaintStrategy());
			}
		}));
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_KuWn0abYEeefQ6YhjiYj2A" name="init" method="_K1CeoqbYEeefQ6YhjiYj2A">
            <ownedParameter xmi:id="_KuWn0qbYEeefQ6YhjiYj2A" name="context" type="_Kg724KbYEeefQ6YhjiYj2A"/>
          </ownedOperation>
          <ownedOperation xmi:id="_KuYdAKbYEeefQ6YhjiYj2A" name="updateState">
            <ownedParameter xmi:id="_KuYdAabYEeefQ6YhjiYj2A" name="context" type="_Kg724KbYEeefQ6YhjiYj2A"/>
            <ownedParameter xmi:id="_KuYdAqbYEeefQ6YhjiYj2A" name="disp" type="_Kk8NIKbYEeefQ6YhjiYj2A"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_KjNu0KbYEeefQ6YhjiYj2A" name="BrownianStrategy">
          <ownedComment xmi:id="_K2AH8abYEeefQ6YhjiYj2A">
            <body>A concrete strategy class that implements IUpdateStategy.
Ball taking this strategy will make brownian motion (random walk).
@author Yuhui Tong,  Haoyuan Yue
@param &lt;TDispMsg> The message dispatched by dispatcher.
@version 1.0</body>
          </ownedComment>
          <ownedAttribute xmi:id="_KzeYYabYEeefQ6YhjiYj2A" name="count" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_Kze_cKbYEeefQ6YhjiYj2A" value="0"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_KzfmgKbYEeefQ6YhjiYj2A" name="steps" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_KzfmgabYEeefQ6YhjiYj2A" value="Randomizer.Singleton.randomInt(1, 5)"/>
          </ownedAttribute>
          <interfaceRealization xmi:id="_KubgUKbYEeefQ6YhjiYj2A" client="_KjNu0KbYEeefQ6YhjiYj2A" supplier="_Kgt0cKbYEeefQ6YhjiYj2A" contract="_Kgt0cKbYEeefQ6YhjiYj2A"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K1DFsKbYEeefQ6YhjiYj2A" name="updateState" specification="_KudVgKbYEeefQ6YhjiYj2A">
            <ownedParameter xmi:id="_K1DFsabYEeefQ6YhjiYj2A" name="context" type="_Kg724KbYEeefQ6YhjiYj2A"/>
            <ownedParameter xmi:id="_K1DFsqbYEeefQ6YhjiYj2A" name="disp" type="_Kk8NIKbYEeefQ6YhjiYj2A"/>
            <language>java</language>
            <body>if (count &lt; steps)
			count++;
		else {
			count = 0; // reset the count;
			steps = Randomizer.Singleton.randomInt(1, 5);
			context.setVelocity(Randomizer.Singleton.randomVel(new Rectangle(0, 0, 30, 30)));
		}
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_KudVgKbYEeefQ6YhjiYj2A" name="updateState" method="_K1DFsKbYEeefQ6YhjiYj2A">
            <ownedParameter xmi:id="_KudVgabYEeefQ6YhjiYj2A" name="context" type="_Kg724KbYEeefQ6YhjiYj2A"/>
            <ownedParameter xmi:id="_KudVgqbYEeefQ6YhjiYj2A" name="disp" type="_Kk8NIKbYEeefQ6YhjiYj2A"/>
          </ownedOperation>
          <ownedOperation xmi:id="_KufxwKbYEeefQ6YhjiYj2A" name="init">
            <ownedParameter xmi:id="_KufxwabYEeefQ6YhjiYj2A" name="context" type="_Kg724KbYEeefQ6YhjiYj2A"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_KjSAQKbYEeefQ6YhjiYj2A" name="Collide2Strategy">
          <ownedComment xmi:id="_K2AH8qbYEeefQ6YhjiYj2A">
            <body>elastic collision implemented purely as an interaction strategy.   
Combine with Overlap to see bouncing balls.
@author Yuhui Tong
 *
@param &lt;TDispMsg> The message dispatched by dispatcher</body>
          </ownedComment>
          <ownedAttribute xmi:id="_Kzg0oKbYEeefQ6YhjiYj2A" name="Nudge" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_Kzg0oabYEeefQ6YhjiYj2A" value="1.1"/>
          </ownedAttribute>
          <interfaceRealization xmi:id="_KujcIabYEeefQ6YhjiYj2A" client="_KjSAQKbYEeefQ6YhjiYj2A" supplier="_Kgt0cKbYEeefQ6YhjiYj2A" contract="_Kgt0cKbYEeefQ6YhjiYj2A"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K1DswKbYEeefQ6YhjiYj2A" name="init" specification="_Kul4YKbYEeefQ6YhjiYj2A">
            <ownedParameter xmi:id="_K1DswabYEeefQ6YhjiYj2A" name="context" type="_Kg724KbYEeefQ6YhjiYj2A"/>
            <language>java</language>
            <body>context.setInteractStrategy(new MultiInteractStrategy(context.getInteractStrategy(), new IInteractStrategy() {

			/**
			 * {@inheritDoc}&lt;br/>
			 */
			@Override
			public void interact(Ball context, Ball target, IDispatcher&lt;IBallCmd> disp) {
				double reduced_mass = reducedMass(context.getRadius() * context.getRadius(),
						target.getRadius() * target.getRadius());
				double distance = context.getLocation().distance(target.getLocation());
				double deltaR = context.getRadius() + target.getRadius() - distance;
				Point2D.Double imp = impulse(context.getLocation(), context.getVelocity(), target.getLocation(),
						target.getVelocity(), reduced_mass, distance, deltaR);
				// update Collision for source
				updateCollision(context, target, imp.getX(), imp.getY(), disp);
				// update Collision for target
				updateCollision(target, context, -imp.getX(), -imp.getY(), disp);

			}

		}));

	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K1DswqbYEeefQ6YhjiYj2A" name="reducedMass" specification="_KjVqoKbYEeefQ6YhjiYj2A">
            <ownedParameter xmi:id="_K1Dsw6bYEeefQ6YhjiYj2A" name="mSource">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_K1DsxKbYEeefQ6YhjiYj2A" name="mTarget">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_K1DsxabYEeefQ6YhjiYj2A" direction="return">
              <name xsi:nil="true"/>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <language>java</language>
            <body>if (mSource == Double.POSITIVE_INFINITY)
			return mTarget;
		if (mTarget == Double.POSITIVE_INFINITY)
			return mSource;
		else
			return (mSource * mTarget) / (mSource + mTarget);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K1ET0KbYEeefQ6YhjiYj2A" name="impulse" specification="_KyC1AKbYEeefQ6YhjiYj2A">
            <ownedParameter xmi:id="_K1ET0abYEeefQ6YhjiYj2A" name="lSource" type="_Kr6X0abYEeefQ6YhjiYj2A"/>
            <ownedParameter xmi:id="_K1ET0qbYEeefQ6YhjiYj2A" name="vSource" type="_Kr6X0abYEeefQ6YhjiYj2A"/>
            <ownedParameter xmi:id="_K1ET06bYEeefQ6YhjiYj2A" name="lTarget" type="_Kr6X0abYEeefQ6YhjiYj2A"/>
            <ownedParameter xmi:id="_K1ET1KbYEeefQ6YhjiYj2A" name="vTarget" type="_Kr6X0abYEeefQ6YhjiYj2A"/>
            <ownedParameter xmi:id="_K1ET1abYEeefQ6YhjiYj2A" name="reducedMass">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_K1ET1qbYEeefQ6YhjiYj2A" name="distance">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_K1ET16bYEeefQ6YhjiYj2A" name="deltaR">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_K1ET2KbYEeefQ6YhjiYj2A" type="_Kut0MKbYEeefQ6YhjiYj2A" direction="return">
              <name xsi:nil="true"/>
            </ownedParameter>
            <language>java</language>
            <body>// Calculate the normal vector, from source to target

		double nx = ((double) (lTarget.x - lSource.x)) / distance;
		double ny = ((double) (lTarget.y - lSource.y)) / distance;
		// delta velocity (speed, actually) in normal direction, source to
		// target
		double dvn = (vTarget.x - vSource.x) * nx + (vTarget.y - vSource.y) * ny;

		// move the source ball beyond collision range of the target ball, along
		// the normal direction.
		lSource.translate((int) Math.ceil(-nx * (Nudge * deltaR)), (int) Math.ceil(-ny * (Nudge * deltaR)));

		return new Point2D.Double(2.0 * reducedMass * dvn * nx, 2.0 * reducedMass * dvn * ny);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K1ET2abYEeefQ6YhjiYj2A" name="updateCollision" specification="_KuvpYKbYEeefQ6YhjiYj2A">
            <ownedParameter xmi:id="_K1ET2qbYEeefQ6YhjiYj2A" name="context" type="_Kg724KbYEeefQ6YhjiYj2A"/>
            <ownedParameter xmi:id="_K1ET26bYEeefQ6YhjiYj2A" name="target" type="_Kg724KbYEeefQ6YhjiYj2A"/>
            <ownedParameter xmi:id="_K1ET3KbYEeefQ6YhjiYj2A" name="impX">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_K1ET3abYEeefQ6YhjiYj2A" name="impY">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_K1ET3qbYEeefQ6YhjiYj2A" name="dispatcher" type="_Kk8NIKbYEeefQ6YhjiYj2A"/>
            <language>java</language>
            <body>int mContext = context.getRadius() * context.getRadius();
		context.getVelocity().translate((int) Math.round(impX / mContext), (int) Math.round(impY / mContext));
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_KjVqoKbYEeefQ6YhjiYj2A" name="reducedMass" visibility="protected" method="_K1DswqbYEeefQ6YhjiYj2A">
            <ownedComment xmi:id="_K2AH86bYEeefQ6YhjiYj2A">
              <body>Returns the reduced mass of the two balls (m1*m2)/(m1+m2) Gives correct
	* result if one of the balls has infinite mass.
	*
	* @param mSource Mass of the source ball
	* @param mTarget Mass of the target ball</body>
            </ownedComment>
            <ownedParameter xmi:id="_KjVqoabYEeefQ6YhjiYj2A" name="mSource">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_KjVqoqbYEeefQ6YhjiYj2A" name="mTarget">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_KjWRsKbYEeefQ6YhjiYj2A" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_Kul4YKbYEeefQ6YhjiYj2A" name="init" method="_K1DswKbYEeefQ6YhjiYj2A">
            <ownedParameter xmi:id="_KumfcKbYEeefQ6YhjiYj2A" name="context" type="_Kg724KbYEeefQ6YhjiYj2A"/>
          </ownedOperation>
          <ownedOperation xmi:id="_Kuo7sKbYEeefQ6YhjiYj2A" name="updateState">
            <ownedParameter xmi:id="_Kuo7sabYEeefQ6YhjiYj2A" name="context" type="_Kg724KbYEeefQ6YhjiYj2A"/>
            <ownedParameter xmi:id="_KupiwKbYEeefQ6YhjiYj2A" name="disp" type="_Kk8NIKbYEeefQ6YhjiYj2A"/>
          </ownedOperation>
          <ownedOperation xmi:id="_KuvpYKbYEeefQ6YhjiYj2A" name="updateCollision" visibility="protected" method="_K1ET2abYEeefQ6YhjiYj2A">
            <ownedComment xmi:id="_r0H5YKbZEeefQ6YhjiYj2A">
              <body>Updates the velocity of the source ball, given an impulse, then uses the
	 * context's interactWith method to determine the post collision behavior, from the context
	 * ball's perspective. The change in velocity is the impulse divided by the (source) ball's mass. To change
	 * the velocity of the target ball, switch the source and target input
	 * parameters and negate the impulse values.   This will also run the post collision behavior from
	 * the other perspective.
	 *
	 * @param context
	 *            The ball to update
	 * @param target
	 *            The ball being collided with
	 * @param impX
	 *            x-coordinate of the impulse
	 * @param impY
	 *            y-coordinate of the impulse</body>
            </ownedComment>
            <ownedParameter xmi:id="_KuvpYabYEeefQ6YhjiYj2A" name="context" type="_Kg724KbYEeefQ6YhjiYj2A"/>
            <ownedParameter xmi:id="_KuwQcKbYEeefQ6YhjiYj2A" name="target" type="_Kg724KbYEeefQ6YhjiYj2A"/>
            <ownedParameter xmi:id="_KuwQcabYEeefQ6YhjiYj2A" name="impX">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_KuwQcqbYEeefQ6YhjiYj2A" name="impY">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_KuwQc6bYEeefQ6YhjiYj2A" name="dispatcher" type="_Kk8NIKbYEeefQ6YhjiYj2A"/>
          </ownedOperation>
          <ownedOperation xmi:id="_KyC1AKbYEeefQ6YhjiYj2A" name="impulse" visibility="protected" method="_K1ET0KbYEeefQ6YhjiYj2A">
            <ownedComment xmi:id="_K2AH9KbYEeefQ6YhjiYj2A">
              <body>Calculates the impulse (change in momentum) of the collision in the
	 * direction from the source to the target This method calculates the
	 * impulse on the source ball. The impulse on the target ball is the
	 * negative of the result. Also moves source ball out of collision range
	 * along normal direction. The change in velocity of the source ball is the
	 * impulse divided by the source's mass The change in velocity of the target
	 * ball is the negative of the impulse divided by the target's mass
	 *
	 * Operational note: Even though theoretically, the difference in velocities
	 * of two balls should be co-linear with the normal line between them, the
	 * discrete nature of animations means that the point where collision is
	 * detected may not be at the same point as the theoretical contact point.
	 * This method calculates the rebound directions as if the two balls were
	 * the appropriate radii such that they had just contacted
	 * _at_the_point_of_collision_detection_. This may give slightly different
	 * rebound direction than one would calculate if they contacted at the
	 * theoretical point given by their actual radii.
	 *
	 * @param lSource
	 *            Location of the source ball
	 * @param vSource
	 *            Velocity of the source ball
	 * @param lTarget
	 *            Location of the target ball
	 * @param vTarget
	 *            Velocity of the target ball
	 * @param reducedMass
	 *            Reduced mass of the two balls
	 * @param distance
	 *            Distance between the two balls.
	 * @param deltaR
	 *            The minimum allowed separation(sum of the ball radii) minus the actual separation(distance between ball centers). Should be a
	 *            positive value.  This is the amount of overlap of the balls as measured along the line between their centers
	 * @return</body>
            </ownedComment>
            <ownedParameter xmi:id="_KyC1AabYEeefQ6YhjiYj2A" name="lSource" type="_Kr6X0abYEeefQ6YhjiYj2A"/>
            <ownedParameter xmi:id="_KyC1AqbYEeefQ6YhjiYj2A" name="vSource" type="_Kr6X0abYEeefQ6YhjiYj2A"/>
            <ownedParameter xmi:id="_KyC1A6bYEeefQ6YhjiYj2A" name="lTarget" type="_Kr6X0abYEeefQ6YhjiYj2A"/>
            <ownedParameter xmi:id="_KyDcEKbYEeefQ6YhjiYj2A" name="vTarget" type="_Kr6X0abYEeefQ6YhjiYj2A"/>
            <ownedParameter xmi:id="_KyDcEabYEeefQ6YhjiYj2A" name="reducedMass">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_KyDcEqbYEeefQ6YhjiYj2A" name="distance">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_KyDcE6bYEeefQ6YhjiYj2A" name="deltaR">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_KyEDIKbYEeefQ6YhjiYj2A" type="_Kut0MKbYEeefQ6YhjiYj2A" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_KjZ8EKbYEeefQ6YhjiYj2A" name="CollideStrategy">
          <ownedComment xmi:id="_K2AH9qbYEeefQ6YhjiYj2A">
            <body>An UpdateStrategy that enables balls to collide/bounce and interact.
@author Yuhui Tong
 *
@param &lt;TDispMsg> The message dispatched by dispatcher.</body>
          </ownedComment>
          <ownedAttribute xmi:id="_KziCwKbYEeefQ6YhjiYj2A" name="Nudge" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_KziCwabYEeefQ6YhjiYj2A" value="1.1"/>
          </ownedAttribute>
          <interfaceRealization xmi:id="_KuzTwKbYEeefQ6YhjiYj2A" client="_KjZ8EKbYEeefQ6YhjiYj2A" supplier="_Kgt0cKbYEeefQ6YhjiYj2A" contract="_Kgt0cKbYEeefQ6YhjiYj2A"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K1E64KbYEeefQ6YhjiYj2A" name="updateState" specification="_Ku1I8KbYEeefQ6YhjiYj2A">
            <ownedParameter xmi:id="_K1E64abYEeefQ6YhjiYj2A" name="context" type="_Kg724KbYEeefQ6YhjiYj2A"/>
            <ownedParameter xmi:id="_K1E64qbYEeefQ6YhjiYj2A" name="dispatcher" type="_Kk8NIKbYEeefQ6YhjiYj2A"/>
            <language>java</language>
            <body>dispatcher.dispatch(new IBallCmd() {
			/**
			 * {@inheritDoc}&lt;br/>
			 * bounce balls when context overlaps target.
			 */
			public void apply(Ball target, IDispatcher&lt;IBallCmd> disp) {
				if (target == context) {
					return;
				}
				if ((context.getRadius() + target.getRadius()) > context.getLocation().distance(target.getLocation())) {
					//calculate impulse, translate source a little bit
					double reduced_mass = reducedMass(context.getRadius() * context.getRadius(),
							target.getRadius() * target.getRadius());
					double distance = context.getLocation().distance(target.getLocation());
					double deltaR = context.getRadius() + target.getRadius() - distance;
					Point2D.Double imp = impulse(context.getLocation(), context.getVelocity(), target.getLocation(),
							target.getVelocity(), reduced_mass, distance, deltaR);
					// update Collision for source
					updateCollision(context, target, imp.getX(), imp.getY(), disp);
					// update Collision for target
					updateCollision(target, context, -imp.getX(), -imp.getY(), disp);
				}
			}
		});
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K1E646bYEeefQ6YhjiYj2A" name="reducedMass" specification="_Kjc_YKbYEeefQ6YhjiYj2A">
            <ownedParameter xmi:id="_K1E65KbYEeefQ6YhjiYj2A" name="mSource">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_K1E65abYEeefQ6YhjiYj2A" name="mTarget">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_K1E65qbYEeefQ6YhjiYj2A" direction="return">
              <name xsi:nil="true"/>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <language>java</language>
            <body>if (mSource == Double.POSITIVE_INFINITY)
			return mTarget;
		if (mTarget == Double.POSITIVE_INFINITY)
			return mSource;
		else
			return (mSource * mTarget) / (mSource + mTarget);

	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K1Fh8KbYEeefQ6YhjiYj2A" name="impulse" specification="_KyFRQKbYEeefQ6YhjiYj2A">
            <ownedParameter xmi:id="_K1Fh8abYEeefQ6YhjiYj2A" name="lSource" type="_Kr6X0abYEeefQ6YhjiYj2A"/>
            <ownedParameter xmi:id="_K1Fh8qbYEeefQ6YhjiYj2A" name="vSource" type="_Kr6X0abYEeefQ6YhjiYj2A"/>
            <ownedParameter xmi:id="_K1Fh86bYEeefQ6YhjiYj2A" name="lTarget" type="_Kr6X0abYEeefQ6YhjiYj2A"/>
            <ownedParameter xmi:id="_K1Fh9KbYEeefQ6YhjiYj2A" name="vTarget" type="_Kr6X0abYEeefQ6YhjiYj2A"/>
            <ownedParameter xmi:id="_K1Fh9abYEeefQ6YhjiYj2A" name="reducedMass">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_K1Fh9qbYEeefQ6YhjiYj2A" name="distance">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_K1Fh96bYEeefQ6YhjiYj2A" name="deltaR">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_K1Fh-KbYEeefQ6YhjiYj2A" type="_Kut0MKbYEeefQ6YhjiYj2A" direction="return">
              <name xsi:nil="true"/>
            </ownedParameter>
            <language>java</language>
            <body>// Calculate the normal vector, from source to target

		double nx = ((double) (lTarget.x - lSource.x)) / distance;
		double ny = ((double) (lTarget.y - lSource.y)) / distance;
		// delta velocity (speed, actually) in normal direction, source to
		// target
		double dvn = (vTarget.x - vSource.x) * nx + (vTarget.y - vSource.y) * ny;

		// move the source ball beyond collision range of the target ball, along
		// the normal direction.
		lSource.translate((int) Math.ceil(-nx * (Nudge * deltaR)), (int) Math.ceil(-ny * (Nudge * deltaR)));

		return new Point2D.Double(2.0 * reducedMass * dvn * nx, 2.0 * reducedMass * dvn * ny);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K1Fh-abYEeefQ6YhjiYj2A" name="updateCollision" specification="_Ku4zUKbYEeefQ6YhjiYj2A">
            <ownedParameter xmi:id="_K1Fh-qbYEeefQ6YhjiYj2A" name="context" type="_Kg724KbYEeefQ6YhjiYj2A"/>
            <ownedParameter xmi:id="_K1Fh-6bYEeefQ6YhjiYj2A" name="target" type="_Kg724KbYEeefQ6YhjiYj2A"/>
            <ownedParameter xmi:id="_K1Fh_KbYEeefQ6YhjiYj2A" name="impX">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_K1Fh_abYEeefQ6YhjiYj2A" name="impY">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_K1Fh_qbYEeefQ6YhjiYj2A" name="dispatcher" type="_Kk8NIKbYEeefQ6YhjiYj2A"/>
            <language>java</language>
            <body>int mContext = context.getRadius() * context.getRadius();
		context.getVelocity().translate((int) Math.round(impX / mContext), (int) Math.round(impY / mContext));
		context.interactWith(target, dispatcher);
		//dispatcher.deleteObserver(target);
		//System.out.println(&quot;update collision&quot;);
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_Kjc_YKbYEeefQ6YhjiYj2A" name="reducedMass" visibility="protected" method="_K1E646bYEeefQ6YhjiYj2A">
            <ownedComment xmi:id="_K2AH96bYEeefQ6YhjiYj2A">
              <body>Returns the reduced mass of the two balls (m1*m2)/(m1+m2) Gives correct
	* result if one of the balls has infinite mass.
	*
	* @param mSource Mass of the source ball
	* @param mTarget Mass of the target ball</body>
            </ownedComment>
            <ownedParameter xmi:id="_Kjc_YabYEeefQ6YhjiYj2A" name="mSource">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Kjc_YqbYEeefQ6YhjiYj2A" name="mTarget">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Kjc_Y6bYEeefQ6YhjiYj2A" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_Ku1I8KbYEeefQ6YhjiYj2A" name="updateState" method="_K1E64KbYEeefQ6YhjiYj2A">
            <ownedParameter xmi:id="_Ku1I8abYEeefQ6YhjiYj2A" name="context" type="_Kg724KbYEeefQ6YhjiYj2A"/>
            <ownedParameter xmi:id="_Ku1wAKbYEeefQ6YhjiYj2A" name="dispatcher" type="_Kk8NIKbYEeefQ6YhjiYj2A"/>
          </ownedOperation>
          <ownedOperation xmi:id="_Ku4zUKbYEeefQ6YhjiYj2A" name="updateCollision" visibility="protected" method="_K1Fh-abYEeefQ6YhjiYj2A">
            <ownedComment xmi:id="_r0IgcKbZEeefQ6YhjiYj2A">
              <body>Updates the velocity of the source ball, given an impulse, then uses the
	 * context's interactWith method to determine the post collision behavior, from the context
	 * ball's perspective. The change in velocity is the impulse divided by the (source) ball's mass. To change
	 * the velocity of the target ball, switch the source and target input
	 * parameters and negate the impulse values.   This will also run the post collision behavior from
	 * the other perspective.
	 *
	 * @param context
	 *            The ball to update
	 * @param target
	 *            The ball being collided with
	 * @param impX
	 *            x-coordinate of the impulse
	 * @param impY
	 *            y-coordinate of the impulse</body>
            </ownedComment>
            <ownedParameter xmi:id="_Ku5aYKbYEeefQ6YhjiYj2A" name="context" type="_Kg724KbYEeefQ6YhjiYj2A"/>
            <ownedParameter xmi:id="_Ku5aYabYEeefQ6YhjiYj2A" name="target" type="_Kg724KbYEeefQ6YhjiYj2A"/>
            <ownedParameter xmi:id="_Ku6BcKbYEeefQ6YhjiYj2A" name="impX">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Ku6BcabYEeefQ6YhjiYj2A" name="impY">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Ku6BcqbYEeefQ6YhjiYj2A" name="dispatcher" type="_Kk8NIKbYEeefQ6YhjiYj2A"/>
          </ownedOperation>
          <ownedOperation xmi:id="_Ku72oKbYEeefQ6YhjiYj2A" name="init">
            <ownedParameter xmi:id="_Ku72oabYEeefQ6YhjiYj2A" name="context" type="_Kg724KbYEeefQ6YhjiYj2A"/>
          </ownedOperation>
          <ownedOperation xmi:id="_KyFRQKbYEeefQ6YhjiYj2A" name="impulse" visibility="protected" method="_K1Fh8KbYEeefQ6YhjiYj2A">
            <ownedComment xmi:id="_K2AH-KbYEeefQ6YhjiYj2A">
              <body>Calculates the impulse (change in momentum) of the collision in the
	 * direction from the source to the target This method calculates the
	 * impulse on the source ball. The impulse on the target ball is the
	 * negative of the result. Also moves source ball out of collision range
	 * along normal direction. The change in velocity of the source ball is the
	 * impulse divided by the source's mass The change in velocity of the target
	 * ball is the negative of the impulse divided by the target's mass
	 *
	 * Operational note: Even though theoretically, the difference in velocities
	 * of two balls should be co-linear with the normal line between them, the
	 * discrete nature of animations means that the point where collision is
	 * detected may not be at the same point as the theoretical contact point.
	 * This method calculates the rebound directions as if the two balls were
	 * the appropriate radii such that they had just contacted
	 * _at_the_point_of_collision_detection_. This may give slightly different
	 * rebound direction than one would calculate if they contacted at the
	 * theoretical point given by their actual radii.
	 *
	 * @param lSource
	 *            Location of the source ball
	 * @param vSource
	 *            Velocity of the source ball
	 * @param lTarget
	 *            Location of the target ball
	 * @param vTarget
	 *            Velocity of the target ball
	 * @param reducedMass
	 *            Reduced mass of the two balls
	 * @param distance
	 *            Distance between the two balls.
	 * @param deltaR
	 *            The minimum allowed separation(sum of the ball radii) minus the actual separation(distance between ball centers). Should be a
	 *            positive value.  This is the amount of overlap of the balls as measured along the line between their centers
	 * @return</body>
            </ownedComment>
            <ownedParameter xmi:id="_KyFRQabYEeefQ6YhjiYj2A" name="lSource" type="_Kr6X0abYEeefQ6YhjiYj2A"/>
            <ownedParameter xmi:id="_KyFRQqbYEeefQ6YhjiYj2A" name="vSource" type="_Kr6X0abYEeefQ6YhjiYj2A"/>
            <ownedParameter xmi:id="_KyFRQ6bYEeefQ6YhjiYj2A" name="lTarget" type="_Kr6X0abYEeefQ6YhjiYj2A"/>
            <ownedParameter xmi:id="_KyF4UKbYEeefQ6YhjiYj2A" name="vTarget" type="_Kr6X0abYEeefQ6YhjiYj2A"/>
            <ownedParameter xmi:id="_KyF4UabYEeefQ6YhjiYj2A" name="reducedMass">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_KyF4UqbYEeefQ6YhjiYj2A" name="distance">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_KyF4U6bYEeefQ6YhjiYj2A" name="deltaR">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_KyF4VKbYEeefQ6YhjiYj2A" type="_Kut0MKbYEeefQ6YhjiYj2A" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_Kjie8KbYEeefQ6YhjiYj2A" name="ColorStrategy">
          <ownedComment xmi:id="_K2AH-qbYEeefQ6YhjiYj2A">
            <body>A concrete strategy class that implements IUpdateStategy.
The ball taking this strategy changes its color every 30 ticks.
@author Yuhui Tong,  Haoyuan Yue
@param &lt;TDispMsg> The message dispatched by dispatcher.
@version 1.0</body>
          </ownedComment>
          <ownedAttribute xmi:id="_KzjQ4KbYEeefQ6YhjiYj2A" name="count" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_Kzj38KbYEeefQ6YhjiYj2A" value="30"/>
          </ownedAttribute>
          <interfaceRealization xmi:id="_Ku-58KbYEeefQ6YhjiYj2A" client="_Kjie8KbYEeefQ6YhjiYj2A" supplier="_Kgt0cKbYEeefQ6YhjiYj2A" contract="_Kgt0cKbYEeefQ6YhjiYj2A"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K1GJAKbYEeefQ6YhjiYj2A" name="updateState" specification="_KvAIEKbYEeefQ6YhjiYj2A">
            <ownedParameter xmi:id="_K1GJAabYEeefQ6YhjiYj2A" name="context" type="_Kg724KbYEeefQ6YhjiYj2A"/>
            <ownedParameter xmi:id="_K1GJAqbYEeefQ6YhjiYj2A" name="disp" type="_Kk8NIKbYEeefQ6YhjiYj2A"/>
            <language>java</language>
            <body>count--;
		if (count == 0) {
			context.setColor(Randomizer.Singleton.randomColor());
			count = 30;
		}
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_KvAIEKbYEeefQ6YhjiYj2A" name="updateState" method="_K1GJAKbYEeefQ6YhjiYj2A">
            <ownedParameter xmi:id="_KvAIEabYEeefQ6YhjiYj2A" name="context" type="_Kg724KbYEeefQ6YhjiYj2A"/>
            <ownedParameter xmi:id="_KvAvIKbYEeefQ6YhjiYj2A" name="disp" type="_Kk8NIKbYEeefQ6YhjiYj2A"/>
          </ownedOperation>
          <ownedOperation xmi:id="_KvCkUqbYEeefQ6YhjiYj2A" name="init">
            <ownedParameter xmi:id="_KvCkU6bYEeefQ6YhjiYj2A" name="context" type="_Kg724KbYEeefQ6YhjiYj2A"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_KjmwYKbYEeefQ6YhjiYj2A" name="CurvingStrategy">
          <ownedComment xmi:id="_K2AH-6bYEeefQ6YhjiYj2A">
            <body>A concrete strategy class that implements IUpdateStategy.
A ball rotates if taking this strategy.
@author Yuhui Tong, Haoyuan Yue
@version 1.0</body>
          </ownedComment>
          <ownedAttribute xmi:id="_KzkfAKbYEeefQ6YhjiYj2A" name="theta" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_KzkfAabYEeefQ6YhjiYj2A" value="Math.PI / 15"/>
          </ownedAttribute>
          <interfaceRealization xmi:id="_KvEZgKbYEeefQ6YhjiYj2A" client="_KjmwYKbYEeefQ6YhjiYj2A" supplier="_Kgt0cKbYEeefQ6YhjiYj2A" contract="_Kgt0cKbYEeefQ6YhjiYj2A"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K1GwEKbYEeefQ6YhjiYj2A" name="updateState" specification="_KvG1wKbYEeefQ6YhjiYj2A">
            <ownedParameter xmi:id="_K1GwEabYEeefQ6YhjiYj2A" name="context" type="_Kg724KbYEeefQ6YhjiYj2A"/>
            <ownedParameter xmi:id="_K1GwEqbYEeefQ6YhjiYj2A" name="disp" type="_Kk8NIKbYEeefQ6YhjiYj2A"/>
            <language>java</language>
            <body>Point v = context.getVelocity();
		int vx = v.x, vy = v.y;
		context.setVelocity(new Point((int) Math.round(vx * Math.cos(theta) - vy * Math.sin(theta)),
				(int) Math.round(vy * Math.cos(theta) + vx * Math.sin(theta))));

	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_KvG1wKbYEeefQ6YhjiYj2A" name="updateState" method="_K1GwEKbYEeefQ6YhjiYj2A">
            <ownedParameter xmi:id="_KvG1wabYEeefQ6YhjiYj2A" name="context" type="_Kg724KbYEeefQ6YhjiYj2A"/>
            <ownedParameter xmi:id="_KvG1wqbYEeefQ6YhjiYj2A" name="disp" type="_Kk8NIKbYEeefQ6YhjiYj2A"/>
          </ownedOperation>
          <ownedOperation xmi:id="_KvIq8qbYEeefQ6YhjiYj2A" name="init">
            <ownedParameter xmi:id="_KvJSAKbYEeefQ6YhjiYj2A" name="context" type="_Kg724KbYEeefQ6YhjiYj2A"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_KjrB0KbYEeefQ6YhjiYj2A" name="DrunkenStrategy">
          <ownedComment xmi:id="_K2AvAKbYEeefQ6YhjiYj2A">
            <body>A concrete strategy class that implements IUpdateStategy.
A ball changes velocity every several STEPS if taking this strategy.
@author Yuhui Tong, Haoyuan Yue
@param &lt;TDispMsg> The message dispatched by dispatcher.
@version 1.0</body>
          </ownedComment>
          <ownedAttribute xmi:id="_KzltIKbYEeefQ6YhjiYj2A" name="count" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_KzltIabYEeefQ6YhjiYj2A" value="0"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_KzmUMabYEeefQ6YhjiYj2A" name="STEPS" visibility="private" isLeaf="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_Kzm7QKbYEeefQ6YhjiYj2A" value="25"/>
          </ownedAttribute>
          <interfaceRealization xmi:id="_KvKgIKbYEeefQ6YhjiYj2A" client="_KjrB0KbYEeefQ6YhjiYj2A" supplier="_Kgt0cKbYEeefQ6YhjiYj2A" contract="_Kgt0cKbYEeefQ6YhjiYj2A"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K1HXIKbYEeefQ6YhjiYj2A" name="updateState" specification="_KvLuQKbYEeefQ6YhjiYj2A">
            <ownedParameter xmi:id="_K1HXIabYEeefQ6YhjiYj2A" name="context" type="_Kg724KbYEeefQ6YhjiYj2A"/>
            <ownedParameter xmi:id="_K1HXIqbYEeefQ6YhjiYj2A" name="disp" type="_Kk8NIKbYEeefQ6YhjiYj2A"/>
            <language>java</language>
            <body>if (count &lt; STEPS)
			count++;
		else {
			count = 0; // reset the count;
			context.setVelocity(Randomizer.Singleton.randomVel(new Rectangle(0, 0, 5, 15)));
		}
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_KvLuQKbYEeefQ6YhjiYj2A" name="updateState" method="_K1HXIKbYEeefQ6YhjiYj2A">
            <ownedParameter xmi:id="_KvLuQabYEeefQ6YhjiYj2A" name="context" type="_Kg724KbYEeefQ6YhjiYj2A"/>
            <ownedParameter xmi:id="_KvMVUKbYEeefQ6YhjiYj2A" name="disp" type="_Kk8NIKbYEeefQ6YhjiYj2A"/>
          </ownedOperation>
          <ownedOperation xmi:id="_KvOxkqbYEeefQ6YhjiYj2A" name="init">
            <ownedParameter xmi:id="_KvOxk6bYEeefQ6YhjiYj2A" name="context" type="_Kg724KbYEeefQ6YhjiYj2A"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_KjwhYKbYEeefQ6YhjiYj2A" name="EnlargeStrategy">
          <ownedComment xmi:id="_K2B9IKbYEeefQ6YhjiYj2A">
            <body>(Enlarge the size of the target ball) implemented purely as an interaction strategy.   
Combine with Overlap/Collide to see slowing other balls.
@author yuhui
 *
@param &lt;TDispMsg> The message dispatched by dispatcher.</body>
          </ownedComment>
          <ownedAttribute xmi:id="_KzniUKbYEeefQ6YhjiYj2A" name="EnlargeRatio" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_KzniUabYEeefQ6YhjiYj2A" value="1.1"/>
          </ownedAttribute>
          <interfaceRealization xmi:id="_KvQmwKbYEeefQ6YhjiYj2A" client="_KjwhYKbYEeefQ6YhjiYj2A" supplier="_Kgt0cKbYEeefQ6YhjiYj2A" contract="_Kgt0cKbYEeefQ6YhjiYj2A"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K1HXI6bYEeefQ6YhjiYj2A" name="init" specification="_KvR04KbYEeefQ6YhjiYj2A">
            <ownedParameter xmi:id="_K1HXJKbYEeefQ6YhjiYj2A" name="context" type="_Kg724KbYEeefQ6YhjiYj2A"/>
            <language>java</language>
            <body>// System.out.println(&quot;KILLING INIT!!!!!!!!!!!!!!!!!!!!!!!!!!!&quot;);
		context.setInteractStrategy(new MultiInteractStrategy(context.getInteractStrategy(), new IInteractStrategy() {
			public void interact(Ball context, Ball target, IDispatcher&lt;IBallCmd> disp) {
				if (context == target) {
					return; // do nothing to context ifself
				}
				if (target.getRadius() > 35) {
					return;
				}
				target.setRadius((int) Math.round(EnlargeRatio * target.getRadius()));

			}
		}));
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_KvR04KbYEeefQ6YhjiYj2A" name="init" method="_K1HXI6bYEeefQ6YhjiYj2A">
            <ownedComment xmi:id="_K2CkMKbYEeefQ6YhjiYj2A">
              <body>{@inheritDoc}&lt;br/>
	 * Initialize a pure interactStrategy that enlarges target balls.</body>
            </ownedComment>
            <ownedParameter xmi:id="_KvR04abYEeefQ6YhjiYj2A" name="context" type="_Kg724KbYEeefQ6YhjiYj2A"/>
          </ownedOperation>
          <ownedOperation xmi:id="_KvSb8KbYEeefQ6YhjiYj2A" name="updateState">
            <ownedParameter xmi:id="_KvSb8abYEeefQ6YhjiYj2A" name="context" type="_Kg724KbYEeefQ6YhjiYj2A"/>
            <ownedParameter xmi:id="_KvSb8qbYEeefQ6YhjiYj2A" name="disp" type="_Kk8NIKbYEeefQ6YhjiYj2A"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_Kj0y0KbYEeefQ6YhjiYj2A" name="FadeOutStrategy">
          <ownedComment xmi:id="_K2CkMabYEeefQ6YhjiYj2A">
            <body>A concrete strategy class that implements IUpdateStategy.
Ball color Fades out after a random period and then return back. 
@author Yuhui Tong, Haoyuan Yue
@param &lt;TDispMsg> The message dispatched by dispatcher.
@version 1.0</body>
          </ownedComment>
          <ownedAttribute xmi:id="_KzoJYabYEeefQ6YhjiYj2A" name="interval" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_KzoJYqbYEeefQ6YhjiYj2A" value="Randomizer.Singleton.randomInt(5, 15)"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_KzowcabYEeefQ6YhjiYj2A" name="count" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_KzowcqbYEeefQ6YhjiYj2A" value="interval"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_KzpXgabYEeefQ6YhjiYj2A" name="ALPHA" visibility="private" isLeaf="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_Kzp-kKbYEeefQ6YhjiYj2A" value="255"/>
          </ownedAttribute>
          <interfaceRealization xmi:id="_KvVfQKbYEeefQ6YhjiYj2A" client="_Kj0y0KbYEeefQ6YhjiYj2A" supplier="_Kgt0cKbYEeefQ6YhjiYj2A" contract="_Kgt0cKbYEeefQ6YhjiYj2A"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K1IlQKbYEeefQ6YhjiYj2A" name="updateState" specification="_KvWtYabYEeefQ6YhjiYj2A">
            <ownedParameter xmi:id="_K1IlQabYEeefQ6YhjiYj2A" name="context" type="_Kg724KbYEeefQ6YhjiYj2A"/>
            <ownedParameter xmi:id="_K1IlQqbYEeefQ6YhjiYj2A" name="disp" type="_Kk8NIKbYEeefQ6YhjiYj2A"/>
            <language>java</language>
            <body>Color color = context.getColor();
		int red = color.getRed();
		int green = color.getGreen();
		int blue = color.getBlue();

		count--;
		Color currentColor = new Color(red, green, blue, (int) (ALPHA * count / interval));
		context.setColor(currentColor);
		if (count == 0)
			count = interval;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_KvWtYabYEeefQ6YhjiYj2A" name="updateState" method="_K1IlQKbYEeefQ6YhjiYj2A">
            <ownedParameter xmi:id="_KvXUcKbYEeefQ6YhjiYj2A" name="context" type="_Kg724KbYEeefQ6YhjiYj2A"/>
            <ownedParameter xmi:id="_KvXUcabYEeefQ6YhjiYj2A" name="disp" type="_Kk8NIKbYEeefQ6YhjiYj2A"/>
          </ownedOperation>
          <ownedOperation xmi:id="_KvZJoKbYEeefQ6YhjiYj2A" name="init">
            <ownedParameter xmi:id="_KvZJoabYEeefQ6YhjiYj2A" name="context" type="_Kg724KbYEeefQ6YhjiYj2A"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_Kj6SYKbYEeefQ6YhjiYj2A" name="FrictionStrategy">
          <ownedComment xmi:id="_K2CkMqbYEeefQ6YhjiYj2A">
            <body>(exerting friction on other balls) implemented purely as an interaction strategy.   
Combine with Overlap/Collide to see slowing other balls.
@author Yuhui Tong
 *
@param &lt;TDispMsg> The message dispatched by dispatcher.</body>
          </ownedComment>
          <ownedAttribute xmi:id="_KzqloKbYEeefQ6YhjiYj2A" name="FrictionRatio" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_KzqloabYEeefQ6YhjiYj2A" value="0.50"/>
          </ownedAttribute>
          <interfaceRealization xmi:id="_Kvbl4KbYEeefQ6YhjiYj2A" client="_Kj6SYKbYEeefQ6YhjiYj2A" supplier="_Kgt0cKbYEeefQ6YhjiYj2A" contract="_Kgt0cKbYEeefQ6YhjiYj2A"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K1JMUKbYEeefQ6YhjiYj2A" name="init" specification="_KvdbEKbYEeefQ6YhjiYj2A">
            <ownedParameter xmi:id="_K1JMUabYEeefQ6YhjiYj2A" name="context" type="_Kg724KbYEeefQ6YhjiYj2A"/>
            <language>java</language>
            <body>// System.out.println(&quot;KILLING INIT!!!!!!!!!!!!!!!!!!!!!!!!!!!&quot;);
		context.setInteractStrategy(new MultiInteractStrategy(context.getInteractStrategy(), new IInteractStrategy() {
			public void interact(Ball context, Ball target, IDispatcher&lt;IBallCmd> disp) {
				if (context == target) {
					return; // do nothing to context ifself
				}
				// reducing velocity by 5% every ticker
				Point vel = target.getVelocity();
				if (vel.x * vel.x + vel.y * vel.y &lt; 2) {
					return;
				}
				target.setVelocity(new Point((int) Math.round((FrictionRatio * target.getVelocity().getX())),
						(int) Math.round((FrictionRatio * target.getVelocity().getY()))));

			}
		}));
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_KvdbEKbYEeefQ6YhjiYj2A" name="init" method="_K1JMUKbYEeefQ6YhjiYj2A">
            <ownedComment xmi:id="_K2CkM6bYEeefQ6YhjiYj2A">
              <body>{@inheritDoc}&lt;br/>
	 * Initialize an interact strategy that slows down target balls.</body>
            </ownedComment>
            <ownedParameter xmi:id="_KvdbEabYEeefQ6YhjiYj2A" name="context" type="_Kg724KbYEeefQ6YhjiYj2A"/>
          </ownedOperation>
          <ownedOperation xmi:id="_KveCIKbYEeefQ6YhjiYj2A" name="updateState">
            <ownedParameter xmi:id="_KveCIabYEeefQ6YhjiYj2A" name="context" type="_Kg724KbYEeefQ6YhjiYj2A"/>
            <ownedParameter xmi:id="_KveCIqbYEeefQ6YhjiYj2A" name="disp" type="_Kk8NIKbYEeefQ6YhjiYj2A"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_Kj-j0KbYEeefQ6YhjiYj2A" name="InfectStrategy">
          <ownedComment xmi:id="_K2CkNKbYEeefQ6YhjiYj2A">
            <body>An IUpdateStrategy that enables &quot;sick&quot; ball to &quot;infect&quot; other balls.
Note: a sick ball is BLACK, whereas a healthy ball is GREEN.
@author Yuhui Tong
 *
@param &lt;TDispMsg> The message dispatched by dispatcher.</body>
          </ownedComment>
          <ownedAttribute xmi:id="_KzrMsabYEeefQ6YhjiYj2A" name="INFECTED" visibility="private" isLeaf="true" type="_Kr6-4abYEeefQ6YhjiYj2A" isReadOnly="true" association="_K3ANgabYEeefQ6YhjiYj2A">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_KzrzwKbYEeefQ6YhjiYj2A" value="Color.BLACK"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_Kzsa0KbYEeefQ6YhjiYj2A" name="HEALTHY" visibility="private" isLeaf="true" type="_Kr6-4abYEeefQ6YhjiYj2A" isReadOnly="true" association="_K3A0kKbYEeefQ6YhjiYj2A">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_Kzsa0abYEeefQ6YhjiYj2A" value="Color.GREEN"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_KztB4KbYEeefQ6YhjiYj2A" name="count" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_KztB4abYEeefQ6YhjiYj2A" value="-1"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_Kzto8KbYEeefQ6YhjiYj2A" name="timespan" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_Kzto8abYEeefQ6YhjiYj2A" value="100"/>
          </ownedAttribute>
          <interfaceRealization xmi:id="_KvhsgKbYEeefQ6YhjiYj2A" client="_Kj-j0KbYEeefQ6YhjiYj2A" supplier="_Kgt0cKbYEeefQ6YhjiYj2A" contract="_Kgt0cKbYEeefQ6YhjiYj2A"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K1JMUqbYEeefQ6YhjiYj2A" name="updateState" specification="_Kvi6oKbYEeefQ6YhjiYj2A">
            <ownedParameter xmi:id="_K1JMU6bYEeefQ6YhjiYj2A" name="context" type="_Kg724KbYEeefQ6YhjiYj2A"/>
            <ownedParameter xmi:id="_K1JMVKbYEeefQ6YhjiYj2A" name="dispatcher" type="_Kk8NIKbYEeefQ6YhjiYj2A"/>
            <language>java</language>
            <body>if (count &lt; 0) {
			context.setColor(INFECTED);
			count = 0;
		}
		if (context.getColor() == HEALTHY) { // ball context is cured
			return;
		}
		if (count >= timespan) { // ball context is cured
			context.setColor(HEALTHY);
			count = 0;
			return;
		}
		if (count++ &lt; timespan) { // ball context can infect other balls!
			dispatcher.dispatch(new IBallCmd() {
				public void apply(Ball other, IDispatcher&lt;IBallCmd> disp) {
					if (context != other) {
						// if overlapped
						boolean isOverlapped = (context.getRadius() + other.getRadius()) > context.getLocation()
								.distance(other.getLocation());
						if (isOverlapped) {
							if (other.getColor() == HEALTHY) {
								other.setColor(INFECTED);
							}
						}
					}
				}
			});
		}

	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_Kvi6oKbYEeefQ6YhjiYj2A" name="updateState" method="_K1JMUqbYEeefQ6YhjiYj2A">
            <ownedParameter xmi:id="_Kvi6oabYEeefQ6YhjiYj2A" name="context" type="_Kg724KbYEeefQ6YhjiYj2A"/>
            <ownedParameter xmi:id="_KvjhsKbYEeefQ6YhjiYj2A" name="dispatcher" type="_Kk8NIKbYEeefQ6YhjiYj2A"/>
          </ownedOperation>
          <ownedOperation xmi:id="_KvlW4qbYEeefQ6YhjiYj2A" name="init">
            <ownedParameter xmi:id="_Kvl98KbYEeefQ6YhjiYj2A" name="context" type="_Kg724KbYEeefQ6YhjiYj2A"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_KkEDYKbYEeefQ6YhjiYj2A" name="KillStrategy">
          <ownedComment xmi:id="_K2CkNabYEeefQ6YhjiYj2A">
            <body>kill/removing behavior implemented purely as an interaction strategy.   
Combine with Overlap/Collide to see killing balls.
@author Yuhui Tong, Zhenwei Feng
 *
@param &lt;TDispMsg> The message dispatched by dispatcher.</body>
          </ownedComment>
          <interfaceRealization xmi:id="_KvnzIKbYEeefQ6YhjiYj2A" client="_KkEDYKbYEeefQ6YhjiYj2A" supplier="_Kgt0cKbYEeefQ6YhjiYj2A" contract="_Kgt0cKbYEeefQ6YhjiYj2A"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K1JMVabYEeefQ6YhjiYj2A" name="init" specification="_KvoaMabYEeefQ6YhjiYj2A">
            <ownedParameter xmi:id="_K1JMVqbYEeefQ6YhjiYj2A" name="context" type="_Kg724KbYEeefQ6YhjiYj2A"/>
            <language>java</language>
            <body>// System.out.println(&quot;KILLING INIT!!!!!!!!!!!!!!!!!!!!!!!!!!!&quot;);
		context.setInteractStrategy(new MultiInteractStrategy(context.getInteractStrategy(), new IInteractStrategy() {
			public void interact(Ball context, Ball target, IDispatcher&lt;IBallCmd> disp) {
				if (context == target) {
					return;
				}
				//System.out.println(&quot;I am killing!&quot;);
				disp.deleteObserver(target);
			}
		}));
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K1JzYKbYEeefQ6YhjiYj2A" name="updateState" specification="_KvpBQabYEeefQ6YhjiYj2A">
            <ownedParameter xmi:id="_K1JzYabYEeefQ6YhjiYj2A" name="context" type="_Kg724KbYEeefQ6YhjiYj2A"/>
            <ownedParameter xmi:id="_K1JzYqbYEeefQ6YhjiYj2A" name="disp" type="_Kk8NIKbYEeefQ6YhjiYj2A"/>
            <language>java</language>
            <body>//no-op
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_KvoaMabYEeefQ6YhjiYj2A" name="init" method="_K1JMVabYEeefQ6YhjiYj2A">
            <ownedParameter xmi:id="_KvpBQKbYEeefQ6YhjiYj2A" name="context" type="_Kg724KbYEeefQ6YhjiYj2A"/>
          </ownedOperation>
          <ownedOperation xmi:id="_KvpBQabYEeefQ6YhjiYj2A" name="updateState" method="_K1JzYKbYEeefQ6YhjiYj2A">
            <ownedParameter xmi:id="_KvpoUKbYEeefQ6YhjiYj2A" name="context" type="_Kg724KbYEeefQ6YhjiYj2A"/>
            <ownedParameter xmi:id="_KvpoUabYEeefQ6YhjiYj2A" name="disp" type="_Kk8NIKbYEeefQ6YhjiYj2A"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_KkIU0KbYEeefQ6YhjiYj2A" name="NinjaStrategy">
          <ownedComment xmi:id="_K2CkNqbYEeefQ6YhjiYj2A">
            <body>A concrete strategy class that implements IUpdateStategy.
A ball will disappear every several ticks if takng this strategy.
@author Yuhui Tong, Haoyuan Yue
@version 1.0
@param &lt;TDispMsg> The message dispatched by dispatcher.</body>
          </ownedComment>
          <ownedAttribute xmi:id="_KzuQAabYEeefQ6YhjiYj2A" name="originalColor" visibility="private" type="_Kr6-4abYEeefQ6YhjiYj2A" association="_K3A0k6bYEeefQ6YhjiYj2A">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_Kzu3EKbYEeefQ6YhjiYj2A" value="Color.BLACK"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_KzveIKbYEeefQ6YhjiYj2A" name="backgroundColor" visibility="private" isLeaf="true" type="_Kr6-4abYEeefQ6YhjiYj2A" isReadOnly="true" association="_K3BboabYEeefQ6YhjiYj2A">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_KzveIabYEeefQ6YhjiYj2A" value="Color.LIGHT_GRAY"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_KzwFMabYEeefQ6YhjiYj2A" name="count" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_KzwFMqbYEeefQ6YhjiYj2A" value="0"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_KzwsQabYEeefQ6YhjiYj2A" name="timespan1" visibility="private" isLeaf="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_KzxTUKbYEeefQ6YhjiYj2A" value="15"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_Kzx6YabYEeefQ6YhjiYj2A" name="timespan2" visibility="private" isLeaf="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_KzyhcKbYEeefQ6YhjiYj2A" value="10"/>
          </ownedAttribute>
          <interfaceRealization xmi:id="_KvqPYabYEeefQ6YhjiYj2A" client="_KkIU0KbYEeefQ6YhjiYj2A" supplier="_Kgt0cKbYEeefQ6YhjiYj2A" contract="_Kgt0cKbYEeefQ6YhjiYj2A"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K1JzY6bYEeefQ6YhjiYj2A" name="updateState" specification="_KvrdgKbYEeefQ6YhjiYj2A">
            <ownedParameter xmi:id="_K1JzZKbYEeefQ6YhjiYj2A" name="context" type="_Kg724KbYEeefQ6YhjiYj2A"/>
            <ownedParameter xmi:id="_K1JzZabYEeefQ6YhjiYj2A" name="disp" type="_Kk8NIKbYEeefQ6YhjiYj2A"/>
            <language>java</language>
            <body>if (count &lt; timespan1)
			count++;
		else if (count == timespan1) {
			originalColor = context.getColor();
			context.setColor(backgroundColor);
			count++;
		} else if (count &lt; timespan1 + timespan2) {
			count++;
		} else {
			count = 0; // reset the count;
			context.setColor(originalColor);
			;
		}

	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_KvrdgKbYEeefQ6YhjiYj2A" name="updateState" method="_K1JzY6bYEeefQ6YhjiYj2A">
            <ownedParameter xmi:id="_KvrdgabYEeefQ6YhjiYj2A" name="context" type="_Kg724KbYEeefQ6YhjiYj2A"/>
            <ownedParameter xmi:id="_KvrdgqbYEeefQ6YhjiYj2A" name="disp" type="_Kk8NIKbYEeefQ6YhjiYj2A"/>
          </ownedOperation>
          <ownedOperation xmi:id="_KvtSsqbYEeefQ6YhjiYj2A" name="init">
            <ownedParameter xmi:id="_KvtSs6bYEeefQ6YhjiYj2A" name="context" type="_Kg724KbYEeefQ6YhjiYj2A"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_KkQQoKbYEeefQ6YhjiYj2A" name="OverlapStrategy">
          <ownedComment xmi:id="_K2CkN6bYEeefQ6YhjiYj2A">
            <body>Detects if the ball overlaps/collides with any other balls.
@author Yuhui Tong, Zhenwei Feng
@param &lt;TDispMsg> The message dispatched by dispatcher.</body>
          </ownedComment>
          <interfaceRealization xmi:id="_Kvvu8KbYEeefQ6YhjiYj2A" client="_KkQQoKbYEeefQ6YhjiYj2A" supplier="_Kgt0cKbYEeefQ6YhjiYj2A" contract="_Kgt0cKbYEeefQ6YhjiYj2A"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K1JzZqbYEeefQ6YhjiYj2A" name="updateState" specification="_KvzZUKbYEeefQ6YhjiYj2A">
            <ownedParameter xmi:id="_K1JzZ6bYEeefQ6YhjiYj2A" name="context" type="_Kg724KbYEeefQ6YhjiYj2A"/>
            <ownedParameter xmi:id="_K1JzaKbYEeefQ6YhjiYj2A" name="dispatcher" type="_Kk8NIKbYEeefQ6YhjiYj2A"/>
            <language>java</language>
            <body>dispatcher.dispatch(new IBallCmd() {

			/**
			 * {@inheritDoc}&lt;br/>
			 */
			@Override
			public void apply(Ball target, IDispatcher&lt;IBallCmd> disp) {
				if (context == target) {
					return; // do nothing to itself!
				}
				if ((context.getRadius() + target.getRadius()) > context.getLocation().distance(target.getLocation())) {
					context.interactWith(target, disp);
				}
			}
		});
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_KvxkIKbYEeefQ6YhjiYj2A" name="init">
            <ownedParameter xmi:id="_KvxkIabYEeefQ6YhjiYj2A" name="context" type="_Kg724KbYEeefQ6YhjiYj2A"/>
          </ownedOperation>
          <ownedOperation xmi:id="_KvzZUKbYEeefQ6YhjiYj2A" name="updateState" method="_K1JzZqbYEeefQ6YhjiYj2A">
            <ownedParameter xmi:id="_KvzZUabYEeefQ6YhjiYj2A" name="context" type="_Kg724KbYEeefQ6YhjiYj2A"/>
            <ownedParameter xmi:id="_KvzZUqbYEeefQ6YhjiYj2A" name="dispatcher" type="_Kk8NIKbYEeefQ6YhjiYj2A"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_KkUiEKbYEeefQ6YhjiYj2A" name="RealmStrategy">
          <ownedComment xmi:id="_K2DLQKbYEeefQ6YhjiYj2A">
            <body>Detects if any other balls enters the realm of the context ball.
Note1: the realm is within around the context ball.
Note2: this is a Strategy that just detect an interaction and 
invoke the interaction strategies of the interacting balls.

@author yuhui
 *
@param &lt;TDispMsg> The message dispatched by the dispatcher</body>
          </ownedComment>
          <ownedAttribute xmi:id="_KzzIgKbYEeefQ6YhjiYj2A" name="RealmRadius" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_KzzvkKbYEeefQ6YhjiYj2A" value="150.0"/>
          </ownedAttribute>
          <interfaceRealization xmi:id="_Kv11kKbYEeefQ6YhjiYj2A" client="_KkUiEKbYEeefQ6YhjiYj2A" supplier="_Kgt0cKbYEeefQ6YhjiYj2A" contract="_Kgt0cKbYEeefQ6YhjiYj2A"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K1r-4KbYEeefQ6YhjiYj2A" name="updateState" specification="_Kv3qwqbYEeefQ6YhjiYj2A">
            <ownedParameter xmi:id="_K1r-4abYEeefQ6YhjiYj2A" name="context" type="_Kg724KbYEeefQ6YhjiYj2A"/>
            <ownedParameter xmi:id="_K1r-4qbYEeefQ6YhjiYj2A" name="dispatcher" type="_Kk8NIKbYEeefQ6YhjiYj2A"/>
            <language>java</language>
            <body>dispatcher.dispatch(new IBallCmd() {

			/**
			 * {@inheritDoc}&lt;br/>
			 */
			@Override
			public void apply(Ball target, IDispatcher&lt;IBallCmd> disp) {
				if (context.getLocation().distance(target.getLocation()) &lt;= context.getRadius() + RealmRadius) {
					context.interactWith(target, disp);
				}
			}

		});
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_Kv2coabYEeefQ6YhjiYj2A" name="init">
            <ownedParameter xmi:id="_Kv3DsKbYEeefQ6YhjiYj2A" name="context" type="_Kg724KbYEeefQ6YhjiYj2A"/>
          </ownedOperation>
          <ownedOperation xmi:id="_Kv3qwqbYEeefQ6YhjiYj2A" name="updateState" method="_K1r-4KbYEeefQ6YhjiYj2A">
            <ownedParameter xmi:id="_Kv3qw6bYEeefQ6YhjiYj2A" name="context" type="_Kg724KbYEeefQ6YhjiYj2A"/>
            <ownedParameter xmi:id="_Kv3qxKbYEeefQ6YhjiYj2A" name="dispatcher" type="_Kk8NIKbYEeefQ6YhjiYj2A"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_KkYMcKbYEeefQ6YhjiYj2A" name="SpawnStrategy">
          <ownedAttribute xmi:id="_Kz0WoKbYEeefQ6YhjiYj2A" name="count" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_Kz0WoabYEeefQ6YhjiYj2A" value="0"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_Kz09sabYEeefQ6YhjiYj2A" name="delay" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_Kz09sqbYEeefQ6YhjiYj2A" value="100"/>
          </ownedAttribute>
          <interfaceRealization xmi:id="_Kv6HAKbYEeefQ6YhjiYj2A" client="_KkYMcKbYEeefQ6YhjiYj2A" supplier="_Kgt0cKbYEeefQ6YhjiYj2A" contract="_Kgt0cKbYEeefQ6YhjiYj2A"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K1sl8KbYEeefQ6YhjiYj2A" name="updateState" specification="_Kv7VIKbYEeefQ6YhjiYj2A">
            <ownedParameter xmi:id="_K1sl8abYEeefQ6YhjiYj2A" name="context" type="_Kg724KbYEeefQ6YhjiYj2A"/>
            <ownedParameter xmi:id="_K1sl8qbYEeefQ6YhjiYj2A" name="dispatcher" type="_Kk8NIKbYEeefQ6YhjiYj2A"/>
            <language>java</language>
            <body>if (delay &lt; count++) {
			dispatcher.dispatch(new IBallCmd() {

				@Override
				public void apply(Ball other, IDispatcher&lt;IBallCmd> disp) {
					if (count != 0 &amp;&amp; context != other) {
						if ((context.getRadius() + other.getRadius()) > context.getLocation()
								.distance(other.getLocation())) {
							disp.addObserver(new Ball(new Point(context.getLocation()), context.getRadius(),
									new Point(-context.getVelocity().x + 1, -context.getVelocity().y + 1),
									context.getColor(), context.getCanvas(), new SpawnStrategy&lt;TDispMsg>(),
									context.getPaintStrategy()));
							count = 0;
							delay *= 5;
						}

					}

				}
			});
		}
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_Kv7VIKbYEeefQ6YhjiYj2A" name="updateState" method="_K1sl8KbYEeefQ6YhjiYj2A">
            <ownedParameter xmi:id="_Kv78MKbYEeefQ6YhjiYj2A" name="context" type="_Kg724KbYEeefQ6YhjiYj2A"/>
            <ownedParameter xmi:id="_Kv78MabYEeefQ6YhjiYj2A" name="dispatcher" type="_Kk8NIKbYEeefQ6YhjiYj2A"/>
          </ownedOperation>
          <ownedOperation xmi:id="_Kv9xYqbYEeefQ6YhjiYj2A" name="init">
            <ownedParameter xmi:id="_Kv9xY6bYEeefQ6YhjiYj2A" name="context" type="_Kg724KbYEeefQ6YhjiYj2A"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_KkdsAKbYEeefQ6YhjiYj2A" name="StraightStrategy">
          <ownedComment xmi:id="_K2DLQabYEeefQ6YhjiYj2A">
            <body>A concrete strategy class that implements IUpdateStategy.
The ball go straight before hitting the wall if taking this strategy.
@author Yuhui Tong, Haoyuan Yue
@version 1.0
@param &lt;TDispMsg> The message dispatched by dispatcher.</body>
          </ownedComment>
          <interfaceRealization xmi:id="_Kv_mkKbYEeefQ6YhjiYj2A" client="_KkdsAKbYEeefQ6YhjiYj2A" supplier="_Kgt0cKbYEeefQ6YhjiYj2A" contract="_Kgt0cKbYEeefQ6YhjiYj2A"/>
          <ownedOperation xmi:id="_KwANoabYEeefQ6YhjiYj2A" name="updateState">
            <ownedParameter xmi:id="_KwA0sKbYEeefQ6YhjiYj2A" name="context" type="_Kg724KbYEeefQ6YhjiYj2A"/>
            <ownedParameter xmi:id="_KwA0sabYEeefQ6YhjiYj2A" name="disp" type="_Kk8NIKbYEeefQ6YhjiYj2A"/>
          </ownedOperation>
          <ownedOperation xmi:id="_KwCp4qbYEeefQ6YhjiYj2A" name="init">
            <ownedParameter xmi:id="_KwCp46bYEeefQ6YhjiYj2A" name="context" type="_Kg724KbYEeefQ6YhjiYj2A"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_KkjLkKbYEeefQ6YhjiYj2A" name="SwitcherStrategy">
          <ownedComment xmi:id="_K2DLQqbYEeefQ6YhjiYj2A">
            <body>A concrete strategy class that implements IUpdateStategy.
The ball taking this strategy can take different strategies during runtime!
@author Yuhui Tong, Haoyuan Yue
@version 1.0
@param &lt;TDispMsg> The message dispatched by dispatcher.</body>
          </ownedComment>
          <ownedAttribute xmi:id="_Kz1kwKbYEeefQ6YhjiYj2A" name="strategy" visibility="private" type="_Kgt0cKbYEeefQ6YhjiYj2A" association="_K3FGAabYEeefQ6YhjiYj2A"/>
          <interfaceRealization xmi:id="_KwGUQKbYEeefQ6YhjiYj2A" client="_KkjLkKbYEeefQ6YhjiYj2A" supplier="_Kgt0cKbYEeefQ6YhjiYj2A" contract="_Kgt0cKbYEeefQ6YhjiYj2A"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K1tNAKbYEeefQ6YhjiYj2A" name="updateState" specification="_KwIwgKbYEeefQ6YhjiYj2A">
            <ownedParameter xmi:id="_K1tNAabYEeefQ6YhjiYj2A" name="context" type="_Kg724KbYEeefQ6YhjiYj2A"/>
            <ownedParameter xmi:id="_K1tNAqbYEeefQ6YhjiYj2A" name="disp" type="_Kk8NIKbYEeefQ6YhjiYj2A"/>
            <language>java</language>
            <body>if (strategy != null)
			strategy.updateState(context, disp);

	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K1tNA6bYEeefQ6YhjiYj2A" name="setStrategy" specification="_KwKlsqbYEeefQ6YhjiYj2A">
            <ownedParameter xmi:id="_K1tNBKbYEeefQ6YhjiYj2A" name="newStrategy" type="_Kgt0cKbYEeefQ6YhjiYj2A"/>
            <language>java</language>
            <body>strategy = newStrategy;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_KkndAKbYEeefQ6YhjiYj2A" name="SwitcherStrategy">
            <eAnnotations xmi:id="_KkndAabYEeefQ6YhjiYj2A" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_KkoEEKbYEeefQ6YhjiYj2A" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_KkorIKbYEeefQ6YhjiYj2A" type="_KkjLkKbYEeefQ6YhjiYj2A" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_KwIwgKbYEeefQ6YhjiYj2A" name="updateState" method="_K1tNAKbYEeefQ6YhjiYj2A">
            <ownedParameter xmi:id="_KwIwgabYEeefQ6YhjiYj2A" name="context" type="_Kg724KbYEeefQ6YhjiYj2A"/>
            <ownedParameter xmi:id="_KwIwgqbYEeefQ6YhjiYj2A" name="disp" type="_Kk8NIKbYEeefQ6YhjiYj2A"/>
          </ownedOperation>
          <ownedOperation xmi:id="_KwKlsqbYEeefQ6YhjiYj2A" name="setStrategy" method="_K1tNA6bYEeefQ6YhjiYj2A">
            <ownedComment xmi:id="_K2DLQ6bYEeefQ6YhjiYj2A">
              <body>Strategy setter that modifield that actual strategy a switch ball is taking.
	 * @param newStrategy The new strategy that a switch ball is going to take.</body>
            </ownedComment>
            <ownedParameter xmi:id="_KwKls6bYEeefQ6YhjiYj2A" name="newStrategy" type="_Kgt0cKbYEeefQ6YhjiYj2A"/>
          </ownedOperation>
          <ownedOperation xmi:id="_KwLz0abYEeefQ6YhjiYj2A" name="init">
            <ownedParameter xmi:id="_KwLz0qbYEeefQ6YhjiYj2A" name="context" type="_Kg724KbYEeefQ6YhjiYj2A"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_K3ANgabYEeefQ6YhjiYj2A" name="" memberEnd="_K3ANgqbYEeefQ6YhjiYj2A _KzrMsabYEeefQ6YhjiYj2A">
          <ownedEnd xmi:id="_K3ANgqbYEeefQ6YhjiYj2A" name="" type="_Kj-j0KbYEeefQ6YhjiYj2A" association="_K3ANgabYEeefQ6YhjiYj2A"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_K3A0kKbYEeefQ6YhjiYj2A" name="" memberEnd="_K3A0kabYEeefQ6YhjiYj2A _Kzsa0KbYEeefQ6YhjiYj2A">
          <ownedEnd xmi:id="_K3A0kabYEeefQ6YhjiYj2A" name="" type="_Kj-j0KbYEeefQ6YhjiYj2A" association="_K3A0kKbYEeefQ6YhjiYj2A"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_K3A0k6bYEeefQ6YhjiYj2A" name="" memberEnd="_K3A0lKbYEeefQ6YhjiYj2A _KzuQAabYEeefQ6YhjiYj2A">
          <ownedEnd xmi:id="_K3A0lKbYEeefQ6YhjiYj2A" name="" type="_KkIU0KbYEeefQ6YhjiYj2A" association="_K3A0k6bYEeefQ6YhjiYj2A"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_K3BboabYEeefQ6YhjiYj2A" name="" memberEnd="_K3BboqbYEeefQ6YhjiYj2A _KzveIKbYEeefQ6YhjiYj2A">
          <ownedEnd xmi:id="_K3BboqbYEeefQ6YhjiYj2A" name="" type="_KkIU0KbYEeefQ6YhjiYj2A" association="_K3BboabYEeefQ6YhjiYj2A"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_K3FGAabYEeefQ6YhjiYj2A" name="" memberEnd="_K3FGAqbYEeefQ6YhjiYj2A _Kz1kwKbYEeefQ6YhjiYj2A">
          <ownedEnd xmi:id="_K3FGAqbYEeefQ6YhjiYj2A" name="" type="_KkjLkKbYEeefQ6YhjiYj2A" association="_K3FGAabYEeefQ6YhjiYj2A"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_KaScUKbYEeefQ6YhjiYj2A" name="paint">
        <packagedElement xmi:type="uml:Package" xmi:id="_Ka0n0KbYEeefQ6YhjiYj2A" name="shape">
          <packagedElement xmi:type="uml:Class" xmi:id="_KiHioKbYEeefQ6YhjiYj2A" name="EllipseShapeFactory">
            <ownedComment xmi:id="_K1-SyqbYEeefQ6YhjiYj2A">
              <body>Concrete shape factory that instantiates Ellipse2D.Double shapes.
@author Yuhui Tong, Haoyuan Yue
 *</body>
            </ownedComment>
            <ownedAttribute xmi:id="_KzXqsabYEeefQ6YhjiYj2A" name="Singleton" isStatic="true" type="_KiHioKbYEeefQ6YhjiYj2A" association="_K27VAabYEeefQ6YhjiYj2A">
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_KzYRwKbYEeefQ6YhjiYj2A" value="new EllipseShapeFactory()"/>
            </ownedAttribute>
            <interfaceRealization xmi:id="_Kt0cUabYEeefQ6YhjiYj2A" client="_KiHioKbYEeefQ6YhjiYj2A" supplier="_KglRkKbYEeefQ6YhjiYj2A" contract="_KglRkKbYEeefQ6YhjiYj2A"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K057w6bYEeefQ6YhjiYj2A" name="makeShape" specification="_KiKl8KbYEeefQ6YhjiYj2A">
              <ownedParameter xmi:id="_K057xKbYEeefQ6YhjiYj2A" name="x">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_K057xabYEeefQ6YhjiYj2A" name="y">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_K057xqbYEeefQ6YhjiYj2A" name="xScale">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_K057x6bYEeefQ6YhjiYj2A" name="yScale">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_K057yKbYEeefQ6YhjiYj2A" type="_KsauIKbYEeefQ6YhjiYj2A" direction="return">
                <name xsi:nil="true"/>
              </ownedParameter>
              <language>java</language>
              <body>return new Ellipse2D.Double(x - xScale, y - yScale, 2 * xScale, 2 * yScale);
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_KiIwwKbYEeefQ6YhjiYj2A" name="EllipseShapeFactory" visibility="private">
              <eAnnotations xmi:id="_KiIwwabYEeefQ6YhjiYj2A" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_KiIwwqbYEeefQ6YhjiYj2A" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_KiJ-4abYEeefQ6YhjiYj2A" type="_KiHioKbYEeefQ6YhjiYj2A" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_KiKl8KbYEeefQ6YhjiYj2A" name="makeShape" method="_K057w6bYEeefQ6YhjiYj2A">
              <ownedParameter xmi:id="_KiLNAKbYEeefQ6YhjiYj2A" name="x">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_KiL0EKbYEeefQ6YhjiYj2A" name="y">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_KiL0EabYEeefQ6YhjiYj2A" name="xScale">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_KiMbIKbYEeefQ6YhjiYj2A" name="yScale">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_Kxtd0KbYEeefQ6YhjiYj2A" type="_KsauIKbYEeefQ6YhjiYj2A" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_KiRToKbYEeefQ6YhjiYj2A" name="Fish1PolygonFactory">
            <ownedComment xmi:id="_K1-Sy6bYEeefQ6YhjiYj2A">
              <body>Concrete PolygonFactory that creates fish-shaped Polygons that have a longer tail and an open mouth.
@author Yuhui Tong, Haoyuan Yue
 *</body>
            </ownedComment>
            <generalization xmi:id="_Kt2RgKbYEeefQ6YhjiYj2A" general="_KiU-AKbYEeefQ6YhjiYj2A"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K06i0KbYEeefQ6YhjiYj2A" name="Fish1PolygonFactory" specification="_KiR6sKbYEeefQ6YhjiYj2A">
              <ownedParameter xmi:id="_K06i0abYEeefQ6YhjiYj2A" type="_KiRToKbYEeefQ6YhjiYj2A" direction="return"/>
              <language>java</language>
              <body>super(new AffineTransform(), 1.0 / 3, new Point(-3, 2), new Point(-2, 1), new Point(-1, 2), new Point(0, 3),
				new Point(1, 3), new Point(2, 2), new Point(3, 0), new Point(2, -2), new Point(1, -3), new Point(0, -3),
				new Point(-1, -2), new Point(-2, -1), new Point(-3, -2), new Point(-3, 2));

	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_KiR6sKbYEeefQ6YhjiYj2A" name="Fish1PolygonFactory" method="_K06i0KbYEeefQ6YhjiYj2A">
              <eAnnotations xmi:id="_KiShwKbYEeefQ6YhjiYj2A" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_KiShwabYEeefQ6YhjiYj2A" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_KiShwqbYEeefQ6YhjiYj2A" type="_KiRToKbYEeefQ6YhjiYj2A" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_KiTI0KbYEeefQ6YhjiYj2A" name="Fish2PolygonFactory">
            <ownedComment xmi:id="_K1-SzKbYEeefQ6YhjiYj2A">
              <body>oncrete PolygonFactory that creates fish-shaped Polygons that have a shorter tail and a closed mouth.
@author Yuhui Tong, Haoyuan Yue
 *</body>
            </ownedComment>
            <generalization xmi:id="_Kt5U0KbYEeefQ6YhjiYj2A" general="_KiU-AKbYEeefQ6YhjiYj2A"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K07J4KbYEeefQ6YhjiYj2A" name="Fish2PolygonFactory" specification="_KiTv4KbYEeefQ6YhjiYj2A">
              <ownedParameter xmi:id="_K07J4abYEeefQ6YhjiYj2A" type="_KiTI0KbYEeefQ6YhjiYj2A" direction="return"/>
              <language>java</language>
              <body>super(new AffineTransform(), 1.0 / 3, new Point(-3, 2), new Point(-2, 1), new Point(-1, 2), new Point(0, 3),
				new Point(1, 3), new Point(3, 2), new Point(2, 0), new Point(3, -2), new Point(1, -3), new Point(0, -3),
				new Point(-1, -2), new Point(-2, -1), new Point(-3, -2), new Point(-3, 2));

	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_KiTv4KbYEeefQ6YhjiYj2A" name="Fish2PolygonFactory" method="_K07J4KbYEeefQ6YhjiYj2A">
              <eAnnotations xmi:id="_KiUW8KbYEeefQ6YhjiYj2A" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_KiUW8abYEeefQ6YhjiYj2A" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_KiUW8qbYEeefQ6YhjiYj2A" type="_KiTI0KbYEeefQ6YhjiYj2A" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_KiU-AKbYEeefQ6YhjiYj2A" name="PolygonFactory">
            <ownedComment xmi:id="_K1-50KbYEeefQ6YhjiYj2A">
              <body>Concrete IShapeFactory that provides the invariant behavior to instantiate a Shape that is a Polygon. 
This class can be instantiated and used simply by supplying the desired points in its constructor, 
or sub-classed an the constructor overridden. Note that this class cannot be used directly by 
the BallWar system because it does not have a no-parameter constructor.
@author Yuhui Tong, Haoyuan Yue</body>
            </ownedComment>
            <ownedAttribute xmi:id="_KzY40KbYEeefQ6YhjiYj2A" name="at" visibility="private" type="_KtP0kKbYEeefQ6YhjiYj2A" association="_K28jIabYEeefQ6YhjiYj2A"/>
            <ownedAttribute xmi:id="_KzZf4abYEeefQ6YhjiYj2A" name="poly" visibility="private" type="_Kt5U0abYEeefQ6YhjiYj2A" association="_K29KMabYEeefQ6YhjiYj2A">
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_KzZf4qbYEeefQ6YhjiYj2A" value="new Polygon()"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_KzaG8abYEeefQ6YhjiYj2A" name="scaleFactor" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedAttribute>
            <interfaceRealization xmi:id="_Kt6i8abYEeefQ6YhjiYj2A" client="_KiU-AKbYEeefQ6YhjiYj2A" supplier="_KglRkKbYEeefQ6YhjiYj2A" contract="_KglRkKbYEeefQ6YhjiYj2A"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K07w8KbYEeefQ6YhjiYj2A" name="PolygonFactory" specification="_Kxur8KbYEeefQ6YhjiYj2A">
              <ownedParameter xmi:id="_K07w8abYEeefQ6YhjiYj2A" name="at" type="_KtP0kKbYEeefQ6YhjiYj2A"/>
              <ownedParameter xmi:id="_K07w8qbYEeefQ6YhjiYj2A" name="scaleFactor">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_K07w86bYEeefQ6YhjiYj2A" name="pts" type="_Kr6X0abYEeefQ6YhjiYj2A">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_K07w9KbYEeefQ6YhjiYj2A" value="*"/>
              </ownedParameter>
              <ownedParameter xmi:id="_K07w9abYEeefQ6YhjiYj2A" type="_KiU-AKbYEeefQ6YhjiYj2A" direction="return"/>
              <language>java</language>
              <body>this.at = at;
		this.scaleFactor = scaleFactor;
		for (int i = 0; i &lt; pts.length; i++) {
			this.poly.addPoint(pts[i].x, pts[i].y);
		}
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K08YAKbYEeefQ6YhjiYj2A" name="makeShape" specification="_KiWMIKbYEeefQ6YhjiYj2A">
              <ownedParameter xmi:id="_K08YAabYEeefQ6YhjiYj2A" name="x">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_K08YAqbYEeefQ6YhjiYj2A" name="y">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_K08YA6bYEeefQ6YhjiYj2A" name="xScale">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_K08YBKbYEeefQ6YhjiYj2A" name="yScale">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_K08YBabYEeefQ6YhjiYj2A" type="_KsauIKbYEeefQ6YhjiYj2A" direction="return"/>
              <language>java</language>
              <body>at.setToTranslation(x, y);
		at.scale(scaleFactor * xScale, scaleFactor * yScale);
		return at.createTransformedShape(poly);
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_KiWMIKbYEeefQ6YhjiYj2A" name="makeShape" method="_K08YAKbYEeefQ6YhjiYj2A">
              <ownedParameter xmi:id="_KiWzMKbYEeefQ6YhjiYj2A" name="x">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_KiWzMabYEeefQ6YhjiYj2A" name="y">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_KiXaQKbYEeefQ6YhjiYj2A" name="xScale">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_KiXaQabYEeefQ6YhjiYj2A" name="yScale">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_Kxv6EKbYEeefQ6YhjiYj2A" type="_KsauIKbYEeefQ6YhjiYj2A" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_Kxur8KbYEeefQ6YhjiYj2A" name="PolygonFactory" visibility="package" method="_K07w8KbYEeefQ6YhjiYj2A">
              <eAnnotations xmi:id="_Kxur9KbYEeefQ6YhjiYj2A" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_Kxur9abYEeefQ6YhjiYj2A" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_Kxur8abYEeefQ6YhjiYj2A" name="at" type="_KtP0kKbYEeefQ6YhjiYj2A"/>
              <ownedParameter xmi:id="_Kxur8qbYEeefQ6YhjiYj2A" name="scaleFactor">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_Kxur86bYEeefQ6YhjiYj2A" name="pts" type="_Kr6X0abYEeefQ6YhjiYj2A">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_KxvTAqbYEeefQ6YhjiYj2A" value="*"/>
              </ownedParameter>
              <ownedParameter xmi:id="_KxvTAabYEeefQ6YhjiYj2A" type="_KiU-AKbYEeefQ6YhjiYj2A" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_KieH8KbYEeefQ6YhjiYj2A" name="RectangleShapeFactory">
            <ownedComment xmi:id="_K1-50abYEeefQ6YhjiYj2A">
              <body>Concrete IShapeFactory that instantiates Rectangle2d.Double shapes.
@author Yuhui Tong, Haoyuan Yue
 *</body>
            </ownedComment>
            <ownedAttribute xmi:id="_KzauAKbYEeefQ6YhjiYj2A" name="Singleton" isStatic="true" type="_KieH8KbYEeefQ6YhjiYj2A" association="_K29xQabYEeefQ6YhjiYj2A">
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_KzauAabYEeefQ6YhjiYj2A" value="new RectangleShapeFactory()"/>
            </ownedAttribute>
            <interfaceRealization xmi:id="_Kt-NUKbYEeefQ6YhjiYj2A" client="_KieH8KbYEeefQ6YhjiYj2A" supplier="_KglRkKbYEeefQ6YhjiYj2A" contract="_KglRkKbYEeefQ6YhjiYj2A"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K08YBqbYEeefQ6YhjiYj2A" name="makeShape" specification="_Kif9IKbYEeefQ6YhjiYj2A">
              <ownedParameter xmi:id="_K08YB6bYEeefQ6YhjiYj2A" name="x">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_K08_EKbYEeefQ6YhjiYj2A" name="y">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_K08_EabYEeefQ6YhjiYj2A" name="xScale">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_K08_EqbYEeefQ6YhjiYj2A" name="yScale">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_K08_E6bYEeefQ6YhjiYj2A" type="_KsauIKbYEeefQ6YhjiYj2A" direction="return"/>
              <language>java</language>
              <body>return new Rectangle2D.Double(x - xScale, y - yScale, 2 * xScale, 2 * yScale);
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_KievAKbYEeefQ6YhjiYj2A" name="RectangleShapeFactory" visibility="private">
              <eAnnotations xmi:id="_KifWEKbYEeefQ6YhjiYj2A" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_KifWEabYEeefQ6YhjiYj2A" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_KifWE6bYEeefQ6YhjiYj2A" type="_KieH8KbYEeefQ6YhjiYj2A" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_Kif9IKbYEeefQ6YhjiYj2A" name="makeShape" method="_K08YBqbYEeefQ6YhjiYj2A">
              <ownedParameter xmi:id="_KigkMKbYEeefQ6YhjiYj2A" name="x">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_KigkMabYEeefQ6YhjiYj2A" name="y">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_KigkMqbYEeefQ6YhjiYj2A" name="xScale">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_KigkM6bYEeefQ6YhjiYj2A" name="yScale">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_KxwhIKbYEeefQ6YhjiYj2A" type="_KsauIKbYEeefQ6YhjiYj2A" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_K27VAabYEeefQ6YhjiYj2A" name="" memberEnd="_K27VAqbYEeefQ6YhjiYj2A _KzXqsabYEeefQ6YhjiYj2A">
            <ownedEnd xmi:id="_K27VAqbYEeefQ6YhjiYj2A" name="" type="_KiHioKbYEeefQ6YhjiYj2A" association="_K27VAabYEeefQ6YhjiYj2A"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_K28jIabYEeefQ6YhjiYj2A" name="" memberEnd="_K28jIqbYEeefQ6YhjiYj2A _KzY40KbYEeefQ6YhjiYj2A">
            <ownedEnd xmi:id="_K28jIqbYEeefQ6YhjiYj2A" name="" type="_KiU-AKbYEeefQ6YhjiYj2A" association="_K28jIabYEeefQ6YhjiYj2A"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_K29KMabYEeefQ6YhjiYj2A" name="" memberEnd="_K29KMqbYEeefQ6YhjiYj2A _KzZf4abYEeefQ6YhjiYj2A">
            <ownedEnd xmi:id="_K29KMqbYEeefQ6YhjiYj2A" name="" type="_KiU-AKbYEeefQ6YhjiYj2A" association="_K29KMabYEeefQ6YhjiYj2A"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_K29xQabYEeefQ6YhjiYj2A" name="" memberEnd="_K29xQqbYEeefQ6YhjiYj2A _KzauAKbYEeefQ6YhjiYj2A">
            <ownedEnd xmi:id="_K29xQqbYEeefQ6YhjiYj2A" name="" type="_KieH8KbYEeefQ6YhjiYj2A" association="_K29xQabYEeefQ6YhjiYj2A"/>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_KbGUoKbYEeefQ6YhjiYj2A" name="strategy">
          <packagedElement xmi:type="uml:Class" xmi:id="_KikOkKbYEeefQ6YhjiYj2A" name="BallPaintStrategy">
            <ownedComment xmi:id="_K1-50qbYEeefQ6YhjiYj2A">
              <body>Paint strategy that paints a filled circle with the Ball's radius. 
This functionality is duplicated by the EllipsePaintStrategy.
The class demonstrates a direct implementation of IPaintStrategy.
@author Yuhui Tong, Haoyuang Yue
 *</body>
            </ownedComment>
            <ownedAttribute xmi:id="_KzbVEabYEeefQ6YhjiYj2A" name="at" visibility="private" type="_KtP0kKbYEeefQ6YhjiYj2A" association="_K2-YUabYEeefQ6YhjiYj2A"/>
            <ownedAttribute xmi:id="_Kzb8IabYEeefQ6YhjiYj2A" name="ball" visibility="private" type="_KuACgKbYEeefQ6YhjiYj2A" association="_K2-_YabYEeefQ6YhjiYj2A"/>
            <interfaceRealization xmi:id="_Kt-0YKbYEeefQ6YhjiYj2A" client="_KikOkKbYEeefQ6YhjiYj2A" supplier="_KgdVwKbYEeefQ6YhjiYj2A" contract="_KgdVwKbYEeefQ6YhjiYj2A"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K08_FKbYEeefQ6YhjiYj2A" name="BallPaintStrategy" specification="_KilcsKbYEeefQ6YhjiYj2A">
              <ownedParameter xmi:id="_K08_FabYEeefQ6YhjiYj2A" type="_KikOkKbYEeefQ6YhjiYj2A" direction="return"/>
              <language>java</language>
              <body>this.at = new AffineTransform();
		this.ball = new Ellipse2D.Double(-1.0, -1.0, 2.0, 2.0);
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K09mIKbYEeefQ6YhjiYj2A" name="BallPaintStrategy" specification="_KxxIMKbYEeefQ6YhjiYj2A">
              <ownedParameter xmi:id="_K09mIabYEeefQ6YhjiYj2A" name="at" type="_KtP0kKbYEeefQ6YhjiYj2A"/>
              <ownedParameter xmi:id="_K09mIqbYEeefQ6YhjiYj2A" name="x">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_K09mI6bYEeefQ6YhjiYj2A" name="y">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_K09mJKbYEeefQ6YhjiYj2A" name="width">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_K09mJabYEeefQ6YhjiYj2A" name="height">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_K09mJqbYEeefQ6YhjiYj2A" type="_KikOkKbYEeefQ6YhjiYj2A" direction="return"/>
              <language>java</language>
              <body>this.at = at;
		this.ball = new Ellipse2D.Double(x - width, y - height, 2 * width, 2 * height);
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K09mJ6bYEeefQ6YhjiYj2A" name="paint" specification="_KxyWUKbYEeefQ6YhjiYj2A">
              <ownedParameter xmi:id="_K09mKKbYEeefQ6YhjiYj2A" name="g" type="_Kr1fUabYEeefQ6YhjiYj2A"/>
              <ownedParameter xmi:id="_K09mKabYEeefQ6YhjiYj2A" name="host" type="_Kg724KbYEeefQ6YhjiYj2A"/>
              <language>java</language>
              <body>double scale = host.getRadius();

		at.setToTranslation(host.getLocation().x, host.getLocation().y);
		at.rotate(host.getVelocity().x, host.getVelocity().y);
		at.scale(scale, scale);
		Shape newShape = at.createTransformedShape(ball);
		g.setColor(host.getColor());
		((Graphics2D) g).fill(newShape);

	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_KilcsKbYEeefQ6YhjiYj2A" name="BallPaintStrategy" method="_K08_FKbYEeefQ6YhjiYj2A">
              <eAnnotations xmi:id="_KilcsabYEeefQ6YhjiYj2A" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_KimDwKbYEeefQ6YhjiYj2A" key="create"/>
              </eAnnotations>
              <ownedComment xmi:id="_K1-506bYEeefQ6YhjiYj2A">
                <body>No parameter constructor that creates a 1 pixel radius ball at the origin.</body>
              </ownedComment>
              <ownedParameter xmi:id="_KimDwabYEeefQ6YhjiYj2A" type="_KikOkKbYEeefQ6YhjiYj2A" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_KuB3sKbYEeefQ6YhjiYj2A" name="init">
              <ownedParameter xmi:id="_KuB3sabYEeefQ6YhjiYj2A" name="host" type="_Kg724KbYEeefQ6YhjiYj2A"/>
            </ownedOperation>
            <ownedOperation xmi:id="_KxxIMKbYEeefQ6YhjiYj2A" name="BallPaintStrategy" method="_K09mIKbYEeefQ6YhjiYj2A">
              <eAnnotations xmi:id="_KxxvQ6bYEeefQ6YhjiYj2A" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_KxxvRKbYEeefQ6YhjiYj2A" key="create"/>
              </eAnnotations>
              <ownedComment xmi:id="_K1-51KbYEeefQ6YhjiYj2A">
                <body>Constructor that allows one to create the prototype ball of arbitrary dimension and location.
	 * @param at The given AffineTransformed used for internal calculations.
	 * @param x floating point x-coordinate of center of circle
	 * @param y floating point y-coordinate of center of circle
	 * @param width floating point x-radius of the circle (ellipse)
	 * @param height floating point y-radius of the circle (ellipse)</body>
              </ownedComment>
              <ownedParameter xmi:id="_KxxIMabYEeefQ6YhjiYj2A" name="at" type="_KtP0kKbYEeefQ6YhjiYj2A"/>
              <ownedParameter xmi:id="_KxxIMqbYEeefQ6YhjiYj2A" name="x">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_KxxvQKbYEeefQ6YhjiYj2A" name="y">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_KxxvQabYEeefQ6YhjiYj2A" name="width">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_KxxvQqbYEeefQ6YhjiYj2A" name="height">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_KxxvRabYEeefQ6YhjiYj2A" type="_KikOkKbYEeefQ6YhjiYj2A" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_KxyWUKbYEeefQ6YhjiYj2A" name="paint" method="_K09mJ6bYEeefQ6YhjiYj2A">
              <ownedParameter xmi:id="_Kx0ykKbYEeefQ6YhjiYj2A" name="g" type="_Kr1fUabYEeefQ6YhjiYj2A"/>
              <ownedParameter xmi:id="_Kx1ZoKbYEeefQ6YhjiYj2A" name="host" type="_Kg724KbYEeefQ6YhjiYj2A"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_KiqVMKbYEeefQ6YhjiYj2A" name="BirdSheepImagePaintStrategy">
            <ownedComment xmi:id="_K1-51abYEeefQ6YhjiYj2A">
              <body>An example of an ImagePaintStrategy that randomly picks one of two animated image files to display when it is instantiated.
@author Yuhui Tong, Haoyuan Yue
 *</body>
            </ownedComment>
            <generalization xmi:id="_KuFiEKbYEeefQ6YhjiYj2A" general="_KiCqIKbYEeefQ6YhjiYj2A"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K09mKqbYEeefQ6YhjiYj2A" name="BirdSheepImagePaintStrategy" specification="_Kiq8QKbYEeefQ6YhjiYj2A">
              <ownedParameter xmi:id="_K09mK6bYEeefQ6YhjiYj2A" type="_KiqVMKbYEeefQ6YhjiYj2A" direction="return"/>
              <language>java</language>
              <body>//super(&quot;../../../model/paint/strategy/images/humbird_animate.gif&quot;, 1);
		super(Math.random() &lt; 0.5 ? &quot;images/humbird_animate.gif&quot; : &quot;images/sheep_animate.gif&quot;, 0.5);
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_Kiq8QKbYEeefQ6YhjiYj2A" name="BirdSheepImagePaintStrategy" method="_K09mKqbYEeefQ6YhjiYj2A">
              <eAnnotations xmi:id="_Kiq8QabYEeefQ6YhjiYj2A" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_Kiq8QqbYEeefQ6YhjiYj2A" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_Kiq8Q6bYEeefQ6YhjiYj2A" type="_KiqVMKbYEeefQ6YhjiYj2A" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_KirjUKbYEeefQ6YhjiYj2A" name="EllipsePaintStrategy">
            <ownedComment xmi:id="_K1-51qbYEeefQ6YhjiYj2A">
              <body>Paint strategy to paint an ellipse shape
@author Yuhui Tong, Haoyuan Yue
 *</body>
            </ownedComment>
            <generalization xmi:id="_KuGJIKbYEeefQ6YhjiYj2A" general="_Kh9xoKbYEeefQ6YhjiYj2A"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K0-NMKbYEeefQ6YhjiYj2A" name="EllipsePaintStrategy" specification="_KisxcKbYEeefQ6YhjiYj2A">
              <ownedParameter xmi:id="_K0-NMabYEeefQ6YhjiYj2A" type="_KirjUKbYEeefQ6YhjiYj2A" direction="return"/>
              <language>java</language>
              <body>super(EllipseShapeFactory.Singleton.makeShape(0, 0, 4.0 / 3, 2.0 / 3));
		//this(new AffineTransform(), -2.0/3, -1.0/3, 4.0/3, 2.0/3);
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K0-NMqbYEeefQ6YhjiYj2A" name="EllipsePaintStrategy" specification="_Kx314KbYEeefQ6YhjiYj2A">
              <ownedParameter xmi:id="_K0-NM6bYEeefQ6YhjiYj2A" name="at" type="_KtP0kKbYEeefQ6YhjiYj2A"/>
              <ownedParameter xmi:id="_K0-NNKbYEeefQ6YhjiYj2A" name="x">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_K0-NNabYEeefQ6YhjiYj2A" name="y">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_K0-NNqbYEeefQ6YhjiYj2A" name="width">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_K0-NN6bYEeefQ6YhjiYj2A" name="height">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_K0-NOKbYEeefQ6YhjiYj2A" type="_KirjUKbYEeefQ6YhjiYj2A" direction="return"/>
              <language>java</language>
              <body>super(at, EllipseShapeFactory.Singleton.makeShape(x, y, width, height));
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_KisxcKbYEeefQ6YhjiYj2A" name="EllipsePaintStrategy" method="_K0-NMKbYEeefQ6YhjiYj2A">
              <eAnnotations xmi:id="_KisxcabYEeefQ6YhjiYj2A" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_KisxcqbYEeefQ6YhjiYj2A" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_Kisxc6bYEeefQ6YhjiYj2A" type="_KirjUKbYEeefQ6YhjiYj2A" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_Kx314KbYEeefQ6YhjiYj2A" name="EllipsePaintStrategy" method="_K0-NMqbYEeefQ6YhjiYj2A">
              <eAnnotations xmi:id="_Kx315qbYEeefQ6YhjiYj2A" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_Kx4c8KbYEeefQ6YhjiYj2A" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_Kx314abYEeefQ6YhjiYj2A" name="at" type="_KtP0kKbYEeefQ6YhjiYj2A"/>
              <ownedParameter xmi:id="_Kx314qbYEeefQ6YhjiYj2A" name="x">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_Kx3146bYEeefQ6YhjiYj2A" name="y">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_Kx315KbYEeefQ6YhjiYj2A" name="width">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_Kx315abYEeefQ6YhjiYj2A" name="height">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_Kx4c8abYEeefQ6YhjiYj2A" type="_KirjUKbYEeefQ6YhjiYj2A" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_KivNsKbYEeefQ6YhjiYj2A" name="Fish1PaintStrategy">
            <ownedComment xmi:id="_K1-516bYEeefQ6YhjiYj2A">
              <body>Paint strategy that paints a fish-shaped Polygon generated by a Fish1PolyfonFactory.
@author Yuhui Tong, Haoyuan Yue
 *</body>
            </ownedComment>
            <generalization xmi:id="_KuGwMKbYEeefQ6YhjiYj2A" general="_Kh9xoKbYEeefQ6YhjiYj2A"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K0-0QKbYEeefQ6YhjiYj2A" name="Fish1PaintStrategy" specification="_Kiv0wKbYEeefQ6YhjiYj2A">
              <ownedParameter xmi:id="_K0-0QabYEeefQ6YhjiYj2A" type="_KivNsKbYEeefQ6YhjiYj2A" direction="return"/>
              <language>java</language>
              <body>super(new Fish1PolygonFactory().makeShape(0, 0, 1.0, 1.0));
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K0-0QqbYEeefQ6YhjiYj2A" name="Fish1PaintStrategy" specification="_Kx5EAKbYEeefQ6YhjiYj2A">
              <ownedParameter xmi:id="_K0-0Q6bYEeefQ6YhjiYj2A" name="at" type="_KtP0kKbYEeefQ6YhjiYj2A"/>
              <ownedParameter xmi:id="_K0-0RKbYEeefQ6YhjiYj2A" type="_KivNsKbYEeefQ6YhjiYj2A" direction="return"/>
              <language>java</language>
              <body>super(at, new Fish1PolygonFactory().makeShape(0, 0, 1, 1));
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_Kiv0wKbYEeefQ6YhjiYj2A" name="Fish1PaintStrategy" method="_K0-0QKbYEeefQ6YhjiYj2A">
              <eAnnotations xmi:id="_Kiv0wabYEeefQ6YhjiYj2A" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_Kiwb0KbYEeefQ6YhjiYj2A" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_Kiwb0abYEeefQ6YhjiYj2A" type="_KivNsKbYEeefQ6YhjiYj2A" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_Kx5EAKbYEeefQ6YhjiYj2A" name="Fish1PaintStrategy" method="_K0-0QqbYEeefQ6YhjiYj2A">
              <eAnnotations xmi:id="_Kx5rEabYEeefQ6YhjiYj2A" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_Kx5rEqbYEeefQ6YhjiYj2A" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_Kx5rEKbYEeefQ6YhjiYj2A" name="at" type="_KtP0kKbYEeefQ6YhjiYj2A"/>
              <ownedParameter xmi:id="_Kx5rE6bYEeefQ6YhjiYj2A" type="_KivNsKbYEeefQ6YhjiYj2A" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_Kixp8KbYEeefQ6YhjiYj2A" name="Fish2PaintStrategy">
            <ownedComment xmi:id="_K1-52KbYEeefQ6YhjiYj2A">
              <body>Paint strategy that paints a fish-shaped Polygon generated by a Fish2PolyfonFactory.
@author Yuhui Tong
 *</body>
            </ownedComment>
            <generalization xmi:id="_KuHXQKbYEeefQ6YhjiYj2A" general="_Kh9xoKbYEeefQ6YhjiYj2A"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K0-0RabYEeefQ6YhjiYj2A" name="Fish2PaintStrategy" specification="_KiyRAKbYEeefQ6YhjiYj2A">
              <ownedParameter xmi:id="_K0-0RqbYEeefQ6YhjiYj2A" type="_Kixp8KbYEeefQ6YhjiYj2A" direction="return"/>
              <language>java</language>
              <body>super(new Fish2PolygonFactory().makeShape(0, 0, 1.0, 1.0));
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K0_bUKbYEeefQ6YhjiYj2A" name="Fish2PaintStrategy" specification="_Kx6SIKbYEeefQ6YhjiYj2A">
              <ownedParameter xmi:id="_K0_bUabYEeefQ6YhjiYj2A" name="at" type="_KtP0kKbYEeefQ6YhjiYj2A"/>
              <ownedParameter xmi:id="_K0_bUqbYEeefQ6YhjiYj2A" type="_Kixp8KbYEeefQ6YhjiYj2A" direction="return"/>
              <language>java</language>
              <body>super(at, new Fish2PolygonFactory().makeShape(0, 0, 1, 1));
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_KiyRAKbYEeefQ6YhjiYj2A" name="Fish2PaintStrategy" method="_K0-0RabYEeefQ6YhjiYj2A">
              <eAnnotations xmi:id="_KiyRAabYEeefQ6YhjiYj2A" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_KiyRAqbYEeefQ6YhjiYj2A" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_KiyRA6bYEeefQ6YhjiYj2A" type="_Kixp8KbYEeefQ6YhjiYj2A" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_Kx6SIKbYEeefQ6YhjiYj2A" name="Fish2PaintStrategy" method="_K0_bUKbYEeefQ6YhjiYj2A">
              <eAnnotations xmi:id="_Kx6SIqbYEeefQ6YhjiYj2A" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_Kx6SI6bYEeefQ6YhjiYj2A" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_Kx6SIabYEeefQ6YhjiYj2A" name="at" type="_KtP0kKbYEeefQ6YhjiYj2A"/>
              <ownedParameter xmi:id="_Kx6SJKbYEeefQ6YhjiYj2A" type="_Kixp8KbYEeefQ6YhjiYj2A" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_Ki0GMKbYEeefQ6YhjiYj2A" name="FixedColorDecoratorPaintStrategy">
            <generalization xmi:id="_KuIlYKbYEeefQ6YhjiYj2A" general="_KhYi0KbYEeefQ6YhjiYj2A"/>
            <ownedAttribute xmi:id="_KzcjMabYEeefQ6YhjiYj2A" name="color" visibility="package" type="_Kr6-4abYEeefQ6YhjiYj2A" association="_K2_mcabYEeefQ6YhjiYj2A"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K0_bU6bYEeefQ6YhjiYj2A" name="FixedColorDecoratorPaintStrategy" specification="_Kx65MKbYEeefQ6YhjiYj2A">
              <ownedParameter xmi:id="_K0_bVKbYEeefQ6YhjiYj2A" name="color" type="_Kr6-4abYEeefQ6YhjiYj2A"/>
              <ownedParameter xmi:id="_K0_bVabYEeefQ6YhjiYj2A" name="decoree" type="_KhgeoKbYEeefQ6YhjiYj2A"/>
              <ownedParameter xmi:id="_K0_bVqbYEeefQ6YhjiYj2A" type="_Ki0GMKbYEeefQ6YhjiYj2A" direction="return"/>
              <language>java</language>
              <body>super(decoree);
		this.color = color;
		// TODO Auto-generated constructor stub
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K0_bV6bYEeefQ6YhjiYj2A" name="paintXfrm" specification="_Kx7gQ6bYEeefQ6YhjiYj2A">
              <ownedParameter xmi:id="_K0_bWKbYEeefQ6YhjiYj2A" name="g" type="_Kr1fUabYEeefQ6YhjiYj2A"/>
              <ownedParameter xmi:id="_K0_bWabYEeefQ6YhjiYj2A" name="host" type="_Kg724KbYEeefQ6YhjiYj2A"/>
              <ownedParameter xmi:id="_K0_bWqbYEeefQ6YhjiYj2A" name="at" type="_KtP0kKbYEeefQ6YhjiYj2A"/>
              <language>java</language>
              <body>g.setColor(color);
		super.paintXfrm(g, host, at);
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_Kx65MKbYEeefQ6YhjiYj2A" name="FixedColorDecoratorPaintStrategy" method="_K0_bU6bYEeefQ6YhjiYj2A">
              <eAnnotations xmi:id="_Kx7gQKbYEeefQ6YhjiYj2A" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_Kx7gQabYEeefQ6YhjiYj2A" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_Kx65MabYEeefQ6YhjiYj2A" name="color" type="_Kr6-4abYEeefQ6YhjiYj2A"/>
              <ownedParameter xmi:id="_Kx65MqbYEeefQ6YhjiYj2A" name="decoree" type="_KhgeoKbYEeefQ6YhjiYj2A"/>
              <ownedParameter xmi:id="_Kx7gQqbYEeefQ6YhjiYj2A" type="_Ki0GMKbYEeefQ6YhjiYj2A" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_Kx7gQ6bYEeefQ6YhjiYj2A" name="paintXfrm" method="_K0_bV6bYEeefQ6YhjiYj2A">
              <ownedParameter xmi:id="_Kx8HUKbYEeefQ6YhjiYj2A" name="g" type="_Kr1fUabYEeefQ6YhjiYj2A"/>
              <ownedParameter xmi:id="_Kx8HUabYEeefQ6YhjiYj2A" name="host" type="_Kg724KbYEeefQ6YhjiYj2A"/>
              <ownedParameter xmi:id="_Kx8HUqbYEeefQ6YhjiYj2A" name="at" type="_KtP0kKbYEeefQ6YhjiYj2A"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_Ki3JgKbYEeefQ6YhjiYj2A" name="GhostImagePaintStrategy">
            <ownedComment xmi:id="_K1_g4KbYEeefQ6YhjiYj2A">
              <body>An example of an ImagePaintStrategy that randomly picks one of two animated image files to display when it is instantiated.
@author Yuhui Tong, Haoyuan Yue
 *</body>
            </ownedComment>
            <generalization xmi:id="_KuKakKbYEeefQ6YhjiYj2A" general="_KiCqIKbYEeefQ6YhjiYj2A"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K1ACYKbYEeefQ6YhjiYj2A" name="GhostImagePaintStrategy" specification="_Ki3wkKbYEeefQ6YhjiYj2A">
              <ownedParameter xmi:id="_K1ACYabYEeefQ6YhjiYj2A" type="_Ki3JgKbYEeefQ6YhjiYj2A" direction="return"/>
              <language>java</language>
              <body>//super(&quot;../../../model/paint/strategy/images/humbird_animate.gif&quot;, 1);
		super(&quot;images/ghost_animate.gif&quot;, 0.5);
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_Ki3wkKbYEeefQ6YhjiYj2A" name="GhostImagePaintStrategy" method="_K1ACYKbYEeefQ6YhjiYj2A">
              <eAnnotations xmi:id="_Ki3wkabYEeefQ6YhjiYj2A" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_Ki3wkqbYEeefQ6YhjiYj2A" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_Ki3wk6bYEeefQ6YhjiYj2A" type="_Ki3JgKbYEeefQ6YhjiYj2A" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_Ki4XoKbYEeefQ6YhjiYj2A" name="NiceFishPaintStrategy">
            <ownedComment xmi:id="_K1_g4abYEeefQ6YhjiYj2A">
              <body>Subclass of MultiPaintStrategy that uses a SwimFishPaintStrategy 
and an EllipsePaintStrategy to paint a swimming fish shape that has an eye.
@author Yuhui Tong, Haoyuan Yue
 *</body>
            </ownedComment>
            <generalization xmi:id="_KuLBoKbYEeefQ6YhjiYj2A" general="_Kh4SEKbYEeefQ6YhjiYj2A"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K1ACYqbYEeefQ6YhjiYj2A" name="NiceFishPaintStrategy" specification="_Ki5lwKbYEeefQ6YhjiYj2A">
              <ownedParameter xmi:id="_K1ACY6bYEeefQ6YhjiYj2A" type="_Ki4XoKbYEeefQ6YhjiYj2A" direction="return"/>
              <language>java</language>
              <body>super(new SwimFishPaintStrategy(), new FixedColorDecoratorPaintStrategy(Color.BLACK,
				new EllipsePaintStrategy(new AffineTransform(), 1.0 / 3, -1.0 / 3, 0.2, 0.2)));
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K1ApcKbYEeefQ6YhjiYj2A" name="paintCfg" specification="_Kx8uYKbYEeefQ6YhjiYj2A">
              <ownedParameter xmi:id="_K1ApcabYEeefQ6YhjiYj2A" name="g" type="_Kr1fUabYEeefQ6YhjiYj2A"/>
              <ownedParameter xmi:id="_K1ApcqbYEeefQ6YhjiYj2A" name="host" type="_Kg724KbYEeefQ6YhjiYj2A"/>
              <language>java</language>
              <body>super.paintCfg(g, host);
		if (Math.abs(Math.atan2(host.getVelocity().y, host.getVelocity().x)) > Math.PI / 2.0) {
			getAT().scale(1.0, -1.0);
		}

	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_Ki5lwKbYEeefQ6YhjiYj2A" name="NiceFishPaintStrategy" method="_K1ACYqbYEeefQ6YhjiYj2A">
              <eAnnotations xmi:id="_Ki6M0KbYEeefQ6YhjiYj2A" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_Ki6M0abYEeefQ6YhjiYj2A" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_Ki6M0qbYEeefQ6YhjiYj2A" type="_Ki4XoKbYEeefQ6YhjiYj2A" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_Kx8uYKbYEeefQ6YhjiYj2A" name="paintCfg" visibility="protected" method="_K1ApcKbYEeefQ6YhjiYj2A">
              <ownedParameter xmi:id="_Kx8uYabYEeefQ6YhjiYj2A" name="g" type="_Kr1fUabYEeefQ6YhjiYj2A"/>
              <ownedParameter xmi:id="_Kx8uYqbYEeefQ6YhjiYj2A" name="host" type="_Kg724KbYEeefQ6YhjiYj2A"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_Ki8CAKbYEeefQ6YhjiYj2A" name="RectanglePaintStrategy">
            <generalization xmi:id="_KuLosKbYEeefQ6YhjiYj2A" general="_Kh9xoKbYEeefQ6YhjiYj2A"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K1Apc6bYEeefQ6YhjiYj2A" name="RectanglePaintStrategy" specification="_Ki8pEKbYEeefQ6YhjiYj2A">
              <ownedParameter xmi:id="_K1ApdKbYEeefQ6YhjiYj2A" type="_Ki8CAKbYEeefQ6YhjiYj2A" direction="return"/>
              <language>java</language>
              <body>super(RectangleShapeFactory.Singleton.makeShape(0, 0, 4.0 / 3, 2.0 / 3));
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_Ki8pEKbYEeefQ6YhjiYj2A" name="RectanglePaintStrategy" method="_K1Apc6bYEeefQ6YhjiYj2A">
              <eAnnotations xmi:id="_Ki8pEabYEeefQ6YhjiYj2A" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_Ki8pEqbYEeefQ6YhjiYj2A" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_Ki8pE6bYEeefQ6YhjiYj2A" type="_Ki8CAKbYEeefQ6YhjiYj2A" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_Ki93MKbYEeefQ6YhjiYj2A" name="SquarePaintStrategy">
            <ownedComment xmi:id="_K1_g4qbYEeefQ6YhjiYj2A">
              <body>Paint strategy that paints a filled square with the Ball's radius. 
This functionality is duplicated by the RectanglePaintStrategy. 
The class demonstrates a direct implementation of IPaintStrategy.
@author Yuhui Tong, Haoyuan Yue
 *</body>
            </ownedComment>
            <interfaceRealization xmi:id="_KuMPwKbYEeefQ6YhjiYj2A" client="_Ki93MKbYEeefQ6YhjiYj2A" supplier="_KgdVwKbYEeefQ6YhjiYj2A" contract="_KgdVwKbYEeefQ6YhjiYj2A"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K1BQgKbYEeefQ6YhjiYj2A" name="paint" specification="_Kx98gqbYEeefQ6YhjiYj2A">
              <ownedParameter xmi:id="_K1BQgabYEeefQ6YhjiYj2A" name="g" type="_Kr1fUabYEeefQ6YhjiYj2A"/>
              <ownedParameter xmi:id="_K1BQgqbYEeefQ6YhjiYj2A" name="host" type="_Kg724KbYEeefQ6YhjiYj2A"/>
              <language>java</language>
              <body>int halfSide = host.getRadius();
		g.setColor(host.getColor());
		g.fillRect(host.getLocation().x - halfSide, host.getLocation().y - halfSide, 2 * halfSide, 2 * halfSide);

	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_Ki-eQKbYEeefQ6YhjiYj2A" name="SquarePaintStrategy">
              <eAnnotations xmi:id="_Ki_FUKbYEeefQ6YhjiYj2A" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_Ki_FUabYEeefQ6YhjiYj2A" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_Ki_sYabYEeefQ6YhjiYj2A" type="_Ki93MKbYEeefQ6YhjiYj2A" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_KuM20KbYEeefQ6YhjiYj2A" name="init">
              <ownedParameter xmi:id="_KuM20abYEeefQ6YhjiYj2A" name="host" type="_Kg724KbYEeefQ6YhjiYj2A"/>
            </ownedOperation>
            <ownedOperation xmi:id="_Kx98gqbYEeefQ6YhjiYj2A" name="paint" method="_K1BQgKbYEeefQ6YhjiYj2A">
              <ownedParameter xmi:id="_Kx-jkKbYEeefQ6YhjiYj2A" name="g" type="_Kr1fUabYEeefQ6YhjiYj2A"/>
              <ownedParameter xmi:id="_Kx-jkabYEeefQ6YhjiYj2A" name="host" type="_Kg724KbYEeefQ6YhjiYj2A"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_KjCIoKbYEeefQ6YhjiYj2A" name="SwimFishPaintStrategy">
            <ownedComment xmi:id="_K1_g46bYEeefQ6YhjiYj2A">
              <body>Subclass of AnimatePaintStrategy that alternates between a Fish1PaintStrategy and a Fish2PaintStrategy.
@author Yuhui Tong, Haoyuan Yue
 *</body>
            </ownedComment>
            <generalization xmi:id="_KuP6IKbYEeefQ6YhjiYj2A" general="_KhnMUKbYEeefQ6YhjiYj2A"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K1B3kKbYEeefQ6YhjiYj2A" name="SwimFishPaintStrategy" specification="_KyAYwKbYEeefQ6YhjiYj2A">
              <ownedParameter xmi:id="_K1B3kabYEeefQ6YhjiYj2A" name="at" type="_KtP0kKbYEeefQ6YhjiYj2A"/>
              <ownedParameter xmi:id="_K1B3kqbYEeefQ6YhjiYj2A" type="_KjCIoKbYEeefQ6YhjiYj2A" direction="return"/>
              <language>java</language>
              <body>super(at, new Fish1PaintStrategy(), new Fish2PaintStrategy());
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K1B3k6bYEeefQ6YhjiYj2A" name="SwimFishPaintStrategy" specification="_KjDWwKbYEeefQ6YhjiYj2A">
              <ownedParameter xmi:id="_K1B3lKbYEeefQ6YhjiYj2A" type="_KjCIoKbYEeefQ6YhjiYj2A" direction="return"/>
              <language>java</language>
              <body>this(new AffineTransform());
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_KjDWwKbYEeefQ6YhjiYj2A" name="SwimFishPaintStrategy" method="_K1B3k6bYEeefQ6YhjiYj2A">
              <eAnnotations xmi:id="_KjD90KbYEeefQ6YhjiYj2A" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_KjD90abYEeefQ6YhjiYj2A" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_KjD90qbYEeefQ6YhjiYj2A" type="_KjCIoKbYEeefQ6YhjiYj2A" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_KyAYwKbYEeefQ6YhjiYj2A" name="SwimFishPaintStrategy" method="_K1B3kKbYEeefQ6YhjiYj2A">
              <eAnnotations xmi:id="_KyAYwqbYEeefQ6YhjiYj2A" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_KyAYw6bYEeefQ6YhjiYj2A" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_KyAYwabYEeefQ6YhjiYj2A" name="at" type="_KtP0kKbYEeefQ6YhjiYj2A"/>
              <ownedParameter xmi:id="_KyAYxKbYEeefQ6YhjiYj2A" type="_KjCIoKbYEeefQ6YhjiYj2A" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_K2-YUabYEeefQ6YhjiYj2A" name="" memberEnd="_K2-YUqbYEeefQ6YhjiYj2A _KzbVEabYEeefQ6YhjiYj2A">
            <ownedEnd xmi:id="_K2-YUqbYEeefQ6YhjiYj2A" name="" type="_KikOkKbYEeefQ6YhjiYj2A" association="_K2-YUabYEeefQ6YhjiYj2A"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_K2-_YabYEeefQ6YhjiYj2A" name="" memberEnd="_K2-_YqbYEeefQ6YhjiYj2A _Kzb8IabYEeefQ6YhjiYj2A">
            <ownedEnd xmi:id="_K2-_YqbYEeefQ6YhjiYj2A" name="" type="_KikOkKbYEeefQ6YhjiYj2A" association="_K2-_YabYEeefQ6YhjiYj2A"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_K2_mcabYEeefQ6YhjiYj2A" name="" memberEnd="_K2_mcqbYEeefQ6YhjiYj2A _KzcjMabYEeefQ6YhjiYj2A">
            <ownedEnd xmi:id="_K2_mcqbYEeefQ6YhjiYj2A" name="" type="_Ki0GMKbYEeefQ6YhjiYj2A" association="_K2_mcabYEeefQ6YhjiYj2A"/>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_KhYi0KbYEeefQ6YhjiYj2A" name="ADecoratorPaintStrategy">
          <ownedComment xmi:id="_K19rs6bYEeefQ6YhjiYj2A">
            <body>Abstract class that provides defaut behavior for subclasses that will decorate another 
IPaintStrategy to add functionality to that strategy. All this class's methods do is to simply
delegate to the decoree. A subclass should override one or more methods, adding additional processing either before or after
delegating to the decoree. Note that this class cannot be used by the BallWorld System directly as it
lacks a no-parameter constructor. 
@author Yuhui Tong, Haoyuan Yue
@version 1.0</body>
          </ownedComment>
          <generalization xmi:id="_KtS34KbYEeefQ6YhjiYj2A" general="_KhgeoKbYEeefQ6YhjiYj2A"/>
          <ownedAttribute xmi:id="_KzN5sKbYEeefQ6YhjiYj2A" name="decoree" visibility="private" type="_KhgeoKbYEeefQ6YhjiYj2A" association="_K21OYabYEeefQ6YhjiYj2A"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K0xY4KbYEeefQ6YhjiYj2A" name="ADecoratorPaintStrategy" specification="_KtRCsKbYEeefQ6YhjiYj2A">
            <ownedParameter xmi:id="_K0xY4abYEeefQ6YhjiYj2A" name="decoree" type="_KhgeoKbYEeefQ6YhjiYj2A"/>
            <ownedParameter xmi:id="_K0xY4qbYEeefQ6YhjiYj2A" type="_KhYi0KbYEeefQ6YhjiYj2A" direction="return"/>
            <language>java</language>
            <body>super(new AffineTransform());
		this.decoree = decoree;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K0x_8KbYEeefQ6YhjiYj2A" name="init" specification="_KtSQ0KbYEeefQ6YhjiYj2A">
            <ownedParameter xmi:id="_K0x_8abYEeefQ6YhjiYj2A" name="ball" type="_Kg724KbYEeefQ6YhjiYj2A"/>
            <language>java</language>
            <body>decoree.init(ball);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K0x_8qbYEeefQ6YhjiYj2A" name="paint" specification="_KxXfkKbYEeefQ6YhjiYj2A">
            <ownedParameter xmi:id="_K0x_86bYEeefQ6YhjiYj2A" name="g" type="_Kr1fUabYEeefQ6YhjiYj2A"/>
            <ownedParameter xmi:id="_K0x_9KbYEeefQ6YhjiYj2A" name="host" type="_Kg724KbYEeefQ6YhjiYj2A"/>
            <language>java</language>
            <body>decoree.paint(g, host);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K0ynAKbYEeefQ6YhjiYj2A" name="paintXfrm" specification="_KxYtsKbYEeefQ6YhjiYj2A">
            <ownedParameter xmi:id="_K0ynAabYEeefQ6YhjiYj2A" name="g" type="_Kr1fUabYEeefQ6YhjiYj2A"/>
            <ownedParameter xmi:id="_K0ynAqbYEeefQ6YhjiYj2A" name="host" type="_Kg724KbYEeefQ6YhjiYj2A"/>
            <ownedParameter xmi:id="_K0ynA6bYEeefQ6YhjiYj2A" name="at" type="_KtP0kKbYEeefQ6YhjiYj2A"/>
            <language>java</language>
            <body>decoree.paintXfrm(g, host, at);

	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_KtRCsKbYEeefQ6YhjiYj2A" name="ADecoratorPaintStrategy" method="_K0xY4KbYEeefQ6YhjiYj2A">
            <eAnnotations xmi:id="_KtRpwabYEeefQ6YhjiYj2A" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_KtRpwqbYEeefQ6YhjiYj2A" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_K19rtKbYEeefQ6YhjiYj2A">
              <body>Constructor that takes the decoree paint strategy
	 * @param decoree The &quot;decoree&quot; paint strategy whose methods are being augmented by this decorator paint strategy.</body>
            </ownedComment>
            <ownedParameter xmi:id="_KtRpwKbYEeefQ6YhjiYj2A" name="decoree" type="_KhgeoKbYEeefQ6YhjiYj2A"/>
            <ownedParameter xmi:id="_KtRpw6bYEeefQ6YhjiYj2A" type="_KhYi0KbYEeefQ6YhjiYj2A" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_KtSQ0KbYEeefQ6YhjiYj2A" name="init" method="_K0x_8KbYEeefQ6YhjiYj2A">
            <ownedComment xmi:id="_K19rtabYEeefQ6YhjiYj2A">
              <body>Default behavior is to simply delegate to the decoree's init method
	 * @param ball The host ball which is passed to the decoree.</body>
            </ownedComment>
            <ownedParameter xmi:id="_KtSQ0abYEeefQ6YhjiYj2A" name="ball" type="_Kg724KbYEeefQ6YhjiYj2A"/>
          </ownedOperation>
          <ownedOperation xmi:id="_KxXfkKbYEeefQ6YhjiYj2A" name="paint" method="_K0x_8qbYEeefQ6YhjiYj2A">
            <ownedComment xmi:id="_K19rtqbYEeefQ6YhjiYj2A">
              <body>Default behavior is to simply delegate to the decoree's paint method
	 * @param g The graphics context which is passed to the decoree
	 * @param host The host Ball which is passed to the decoree.</body>
            </ownedComment>
            <ownedParameter xmi:id="_KxXfkabYEeefQ6YhjiYj2A" name="g" type="_Kr1fUabYEeefQ6YhjiYj2A"/>
            <ownedParameter xmi:id="_KxXfkqbYEeefQ6YhjiYj2A" name="host" type="_Kg724KbYEeefQ6YhjiYj2A"/>
          </ownedOperation>
          <ownedOperation xmi:id="_KxYtsKbYEeefQ6YhjiYj2A" name="paintXfrm" method="_K0ynAKbYEeefQ6YhjiYj2A">
            <ownedParameter xmi:id="_KxYtsabYEeefQ6YhjiYj2A" name="g" type="_Kr1fUabYEeefQ6YhjiYj2A"/>
            <ownedParameter xmi:id="_KxYtsqbYEeefQ6YhjiYj2A" name="host" type="_Kg724KbYEeefQ6YhjiYj2A"/>
            <ownedParameter xmi:id="_KxYts6bYEeefQ6YhjiYj2A" name="at" type="_KtP0kKbYEeefQ6YhjiYj2A"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_KhgeoKbYEeefQ6YhjiYj2A" name="APaintStrategy" isAbstract="true">
          <ownedComment xmi:id="_K19rt6bYEeefQ6YhjiYj2A">
            <body>The top-level affine transform-based paint strategy that provides services for its subclasses, plus default behaviors and abstract behaviors
@author Yuhui Tong, Haoyuan Yue
 *</body>
          </ownedComment>
          <ownedAttribute xmi:id="_KzPH0KbYEeefQ6YhjiYj2A" name="at" visibility="private" type="_KtP0kKbYEeefQ6YhjiYj2A" association="_K22cgKbYEeefQ6YhjiYj2A">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_KzPH0abYEeefQ6YhjiYj2A" value="new AffineTransform()"/>
          </ownedAttribute>
          <interfaceRealization xmi:id="_KtUGAKbYEeefQ6YhjiYj2A" client="_KhgeoKbYEeefQ6YhjiYj2A" supplier="_KgdVwKbYEeefQ6YhjiYj2A" contract="_KgdVwKbYEeefQ6YhjiYj2A"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K0ynBKbYEeefQ6YhjiYj2A" name="getAT" specification="_KhhswKbYEeefQ6YhjiYj2A">
            <ownedParameter xmi:id="_K0ynBabYEeefQ6YhjiYj2A" type="_KtP0kKbYEeefQ6YhjiYj2A" direction="return"/>
            <language>java</language>
            <body>return at;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K0zOEKbYEeefQ6YhjiYj2A" name="init" specification="_KtVUIKbYEeefQ6YhjiYj2A">
            <ownedParameter xmi:id="_K0zOEabYEeefQ6YhjiYj2A" name="ball" type="_Kg724KbYEeefQ6YhjiYj2A"/>
            <language>java</language>
            <body>return;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K0zOEqbYEeefQ6YhjiYj2A" name="APaintStrategy" specification="_Kxai4abYEeefQ6YhjiYj2A">
            <ownedParameter xmi:id="_K0zOE6bYEeefQ6YhjiYj2A" name="at" type="_KtP0kKbYEeefQ6YhjiYj2A"/>
            <ownedParameter xmi:id="_K0zOFKbYEeefQ6YhjiYj2A" type="_KhgeoKbYEeefQ6YhjiYj2A" direction="return"/>
            <language>java</language>
            <body>this.at = at;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K0zOFabYEeefQ6YhjiYj2A" name="paint" specification="_KxbxAKbYEeefQ6YhjiYj2A">
            <ownedParameter xmi:id="_K0zOFqbYEeefQ6YhjiYj2A" name="g" type="_Kr1fUabYEeefQ6YhjiYj2A"/>
            <ownedParameter xmi:id="_K0zOF6bYEeefQ6YhjiYj2A" name="host" type="_Kg724KbYEeefQ6YhjiYj2A"/>
            <language>java</language>
            <body>double scale = host.getRadius();
		at.setToTranslation(host.getLocation().x, host.getLocation().y);
		at.scale(scale, scale);
		at.rotate(host.getVelocity().x, host.getVelocity().y);
		g.setColor(host.getColor());

		paintCfg(g, host);
		paintXfrm(g, host, at);

	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_KhhswKbYEeefQ6YhjiYj2A" name="getAT" visibility="protected" method="_K0ynBKbYEeefQ6YhjiYj2A">
            <ownedComment xmi:id="_K19ruKbYEeefQ6YhjiYj2A">
              <body>Protected accessor for the internal affine transform
	 * @return This instances's affine transform.</body>
            </ownedComment>
            <ownedParameter xmi:id="_Kxai4KbYEeefQ6YhjiYj2A" type="_KtP0kKbYEeefQ6YhjiYj2A" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_KtVUIKbYEeefQ6YhjiYj2A" name="init" method="_K0zOEKbYEeefQ6YhjiYj2A">
            <ownedComment xmi:id="_K19ruabYEeefQ6YhjiYj2A">
              <body>By default, do nothing for initialization.
	 * @param ball The ball to initialize.</body>
            </ownedComment>
            <ownedParameter xmi:id="_KtVUIabYEeefQ6YhjiYj2A" name="ball" type="_Kg724KbYEeefQ6YhjiYj2A"/>
          </ownedOperation>
          <ownedOperation xmi:id="_Kxai4abYEeefQ6YhjiYj2A" name="APaintStrategy" method="_K0zOEqbYEeefQ6YhjiYj2A">
            <eAnnotations xmi:id="_KxbJ8abYEeefQ6YhjiYj2A" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_KxbJ8qbYEeefQ6YhjiYj2A" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_K19ruqbYEeefQ6YhjiYj2A">
              <body>Constructor that initializes the strategy with an affine transform
	 * @param at The affine transform used by this paint strategy to translate, scale and rotate the image.</body>
            </ownedComment>
            <ownedParameter xmi:id="_KxbJ8KbYEeefQ6YhjiYj2A" name="at" type="_KtP0kKbYEeefQ6YhjiYj2A"/>
            <ownedParameter xmi:id="_KxbJ86bYEeefQ6YhjiYj2A" type="_KhgeoKbYEeefQ6YhjiYj2A" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_KxbxAKbYEeefQ6YhjiYj2A" name="paint" method="_K0zOFabYEeefQ6YhjiYj2A">
            <ownedComment xmi:id="_K19ru6bYEeefQ6YhjiYj2A">
              <body>Paints on the given graphics context using the color, scale and direction provided by the host. 
	 * This is done by setting up the AffineTransform to rotate then scale then translate. 
	 * Calls paintXfrm to actually perform the painting, using the set up transform. 
	 * Calls paintCfg just before calling paintXfrm
	 * @param g The Graphics context that will be paint on
	 * @param host The host Ball that the required information will be pulled from.</body>
            </ownedComment>
            <ownedParameter xmi:id="_KxbxAabYEeefQ6YhjiYj2A" name="g" type="_Kr1fUabYEeefQ6YhjiYj2A"/>
            <ownedParameter xmi:id="_KxbxAqbYEeefQ6YhjiYj2A" name="host" type="_Kg724KbYEeefQ6YhjiYj2A"/>
          </ownedOperation>
          <ownedOperation xmi:id="_KxcYEKbYEeefQ6YhjiYj2A" name="paintCfg" visibility="protected">
            <ownedParameter xmi:id="_KxcYEabYEeefQ6YhjiYj2A" name="g" type="_Kr1fUabYEeefQ6YhjiYj2A"/>
            <ownedParameter xmi:id="_KxcYEqbYEeefQ6YhjiYj2A" name="host" type="_Kg724KbYEeefQ6YhjiYj2A"/>
          </ownedOperation>
          <ownedOperation xmi:id="_KxdmMKbYEeefQ6YhjiYj2A" name="paintXfrm" isAbstract="true">
            <ownedComment xmi:id="_K19rvKbYEeefQ6YhjiYj2A">
              <body>Paints the host onto the given Graphics context. 
	 * The image is translated, scaled and rotated as determined by the given affine transformation.
	 *  This method is intended to be called either by a class's (or superclass's) own paint method or by another paint strategy who is sharing the affine transform. 
	 *  This allows the same transformation to be shared amongst multiple paint strategies.
	 * @param g The graphics context to draw upon.
	 * @param host The host ball.
	 * @param at The affine transform to use.</body>
            </ownedComment>
            <ownedParameter xmi:id="_KxdmMabYEeefQ6YhjiYj2A" name="g" type="_Kr1fUabYEeefQ6YhjiYj2A"/>
            <ownedParameter xmi:id="_KxdmMqbYEeefQ6YhjiYj2A" name="host" type="_Kg724KbYEeefQ6YhjiYj2A"/>
            <ownedParameter xmi:id="_KxdmM6bYEeefQ6YhjiYj2A" name="at" type="_KtP0kKbYEeefQ6YhjiYj2A"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_KhnMUKbYEeefQ6YhjiYj2A" name="AnimatePaintStrategy">
          <ownedComment xmi:id="_K19rvabYEeefQ6YhjiYj2A">
            <body>Concrete paint strategy that cycles through a sequence of paint strategies, painting one per 
paint update. Note: this paint strategy cannot be directly instantiated by the BallWorld system because it does not
have a no parameter constructor.
@author Yuhui Tong, Haoyuan Yue
 *</body>
          </ownedComment>
          <generalization xmi:id="_KtcB0KbYEeefQ6YhjiYj2A" general="_KhgeoKbYEeefQ6YhjiYj2A"/>
          <ownedAttribute xmi:id="_KzPu4KbYEeefQ6YhjiYj2A" name="count" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_KzPu4abYEeefQ6YhjiYj2A" value="0"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_KzQV8abYEeefQ6YhjiYj2A" name="paintStrategies" visibility="private" type="_KhgeoKbYEeefQ6YhjiYj2A" association="_K23DkabYEeefQ6YhjiYj2A">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_KzQV8qbYEeefQ6YhjiYj2A" value="*"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K0z1IKbYEeefQ6YhjiYj2A" name="AnimatePaintStrategy" specification="_Kxe0UKbYEeefQ6YhjiYj2A">
            <ownedParameter xmi:id="_K0z1IabYEeefQ6YhjiYj2A" name="at" type="_KtP0kKbYEeefQ6YhjiYj2A"/>
            <ownedParameter xmi:id="_K0z1IqbYEeefQ6YhjiYj2A" name="paintStrategies" type="_KhgeoKbYEeefQ6YhjiYj2A">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_K0z1I6bYEeefQ6YhjiYj2A" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_K0z1JKbYEeefQ6YhjiYj2A" type="_KhnMUKbYEeefQ6YhjiYj2A" direction="return"/>
            <language>java</language>
            <body>super(at);
		this.paintStrategies = paintStrategies;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K00cMKbYEeefQ6YhjiYj2A" name="AnimatePaintStrategy" specification="_KtaMoKbYEeefQ6YhjiYj2A">
            <ownedParameter xmi:id="_K00cMabYEeefQ6YhjiYj2A" name="paintStrategies" type="_KhgeoKbYEeefQ6YhjiYj2A">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_K00cMqbYEeefQ6YhjiYj2A" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_K00cM6bYEeefQ6YhjiYj2A" type="_KhnMUKbYEeefQ6YhjiYj2A" direction="return"/>
            <language>java</language>
            <body>this(new AffineTransform(), paintStrategies);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K01DQKbYEeefQ6YhjiYj2A" name="paintXfrm" specification="_KxgpgKbYEeefQ6YhjiYj2A">
            <ownedParameter xmi:id="_K01DQabYEeefQ6YhjiYj2A" name="g" type="_Kr1fUabYEeefQ6YhjiYj2A"/>
            <ownedParameter xmi:id="_K01DQqbYEeefQ6YhjiYj2A" name="host" type="_Kg724KbYEeefQ6YhjiYj2A"/>
            <ownedParameter xmi:id="_K01DQ6bYEeefQ6YhjiYj2A" name="at" type="_KtP0kKbYEeefQ6YhjiYj2A"/>
            <language>java</language>
            <body>paintStrategies[count++].paintXfrm(g, host, at);
		if (count == paintStrategies.length) {
			count = 0;
		}
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_KtaMoKbYEeefQ6YhjiYj2A" name="AnimatePaintStrategy" method="_K00cMKbYEeefQ6YhjiYj2A">
            <eAnnotations xmi:id="_KtaMoqbYEeefQ6YhjiYj2A" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_KtaMo6bYEeefQ6YhjiYj2A" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_KtaMoabYEeefQ6YhjiYj2A" name="paintStrategies" type="_KhgeoKbYEeefQ6YhjiYj2A">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_KtazsqbYEeefQ6YhjiYj2A" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_KtazsabYEeefQ6YhjiYj2A" type="_KhnMUKbYEeefQ6YhjiYj2A" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_Kxe0UKbYEeefQ6YhjiYj2A" name="AnimatePaintStrategy" method="_K0z1IKbYEeefQ6YhjiYj2A">
            <eAnnotations xmi:id="_KxfbYKbYEeefQ6YhjiYj2A" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_KxfbYabYEeefQ6YhjiYj2A" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_Kxe0UabYEeefQ6YhjiYj2A" name="at" type="_KtP0kKbYEeefQ6YhjiYj2A"/>
            <ownedParameter xmi:id="_Kxe0UqbYEeefQ6YhjiYj2A" name="paintStrategies" type="_KhgeoKbYEeefQ6YhjiYj2A">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_KxgCcabYEeefQ6YhjiYj2A" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_KxgCcKbYEeefQ6YhjiYj2A" type="_KhnMUKbYEeefQ6YhjiYj2A" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_KxgpgKbYEeefQ6YhjiYj2A" name="paintXfrm" method="_K01DQKbYEeefQ6YhjiYj2A">
            <ownedParameter xmi:id="_KxhQkKbYEeefQ6YhjiYj2A" name="g" type="_Kr1fUabYEeefQ6YhjiYj2A"/>
            <ownedParameter xmi:id="_KxhQkabYEeefQ6YhjiYj2A" name="host" type="_Kg724KbYEeefQ6YhjiYj2A"/>
            <ownedParameter xmi:id="_KxhQkqbYEeefQ6YhjiYj2A" name="at" type="_KtP0kKbYEeefQ6YhjiYj2A"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_KhvIIKbYEeefQ6YhjiYj2A" name="ImagePaintStrategy">
          <ownedComment xmi:id="_K1-SwKbYEeefQ6YhjiYj2A">
            <body>Paint strategy that paints an image from a file, scaled to the host Ball's radius.
 Note that this class cannot be used by the BallWar system directly as it is lacking a no-parameter constructor.
@author Yuhui Tong, Haoyuan Yue
 *</body>
          </ownedComment>
          <generalization xmi:id="_Ktly0KbYEeefQ6YhjiYj2A" general="_KhgeoKbYEeefQ6YhjiYj2A"/>
          <ownedAttribute xmi:id="_KzSLIKbYEeefQ6YhjiYj2A" name="fillFactor" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_KzSyMKbYEeefQ6YhjiYj2A" value="1.0"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_KzSyMqbYEeefQ6YhjiYj2A" name="image" visibility="private" type="_Ktd3AabYEeefQ6YhjiYj2A" association="_K23qoabYEeefQ6YhjiYj2A"/>
          <ownedAttribute xmi:id="_KzTZQabYEeefQ6YhjiYj2A" name="imageObs" visibility="private" type="_KthhYKbYEeefQ6YhjiYj2A" association="_K24RsabYEeefQ6YhjiYj2A"/>
          <ownedAttribute xmi:id="_KzUAUabYEeefQ6YhjiYj2A" name="localAT" visibility="protected" type="_KtP0kKbYEeefQ6YhjiYj2A" association="_K244wabYEeefQ6YhjiYj2A">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_KzUAUqbYEeefQ6YhjiYj2A" value="new AffineTransform()"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_KzUnYabYEeefQ6YhjiYj2A" name="scaleFactor" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_KzUnYqbYEeefQ6YhjiYj2A" value="1.0"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_KzVOcabYEeefQ6YhjiYj2A" name="tempAT" visibility="protected" type="_KtP0kKbYEeefQ6YhjiYj2A" association="_K25f0abYEeefQ6YhjiYj2A">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_KzVOcqbYEeefQ6YhjiYj2A" value="new AffineTransform()"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K01qUKbYEeefQ6YhjiYj2A" name="ImagePaintStrategy" specification="_Kxjs0KbYEeefQ6YhjiYj2A">
            <ownedParameter xmi:id="_K01qUabYEeefQ6YhjiYj2A" name="at" type="_KtP0kKbYEeefQ6YhjiYj2A"/>
            <ownedParameter xmi:id="_K01qUqbYEeefQ6YhjiYj2A" name="filename">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_K01qU6bYEeefQ6YhjiYj2A" name="fillFactor">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_K01qVKbYEeefQ6YhjiYj2A" type="_KhvIIKbYEeefQ6YhjiYj2A" direction="return"/>
            <language>java</language>
            <body>super(at);
		try {
			image = Toolkit.getDefaultToolkit().getImage(this.getClass().getResource(filename));
		} catch (Exception e) {
			System.err.println(&quot;ImagePaintStrategy: Error reading file: &quot; + filename + '\n' + e);
		}

		this.fillFactor = fillFactor;

	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K01qVabYEeefQ6YhjiYj2A" name="ImagePaintStrategy" specification="_KhxkYKbYEeefQ6YhjiYj2A">
            <ownedParameter xmi:id="_K01qVqbYEeefQ6YhjiYj2A" name="filename">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_K01qV6bYEeefQ6YhjiYj2A" name="fillFactor">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_K01qWKbYEeefQ6YhjiYj2A" type="_KhvIIKbYEeefQ6YhjiYj2A" direction="return"/>
            <language>java</language>
            <body>this(new AffineTransform(), filename, fillFactor);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K02RYKbYEeefQ6YhjiYj2A" name="init" specification="_KtivgKbYEeefQ6YhjiYj2A">
            <ownedParameter xmi:id="_K02RYabYEeefQ6YhjiYj2A" name="host" type="_Kg724KbYEeefQ6YhjiYj2A"/>
            <language>java</language>
            <body>imageObs = host.getCanvas();
		MediaTracker mt = new MediaTracker(host.getCanvas());
		mt.addImage(image, 1);

		try {
			mt.waitForAll();
		} catch (Exception e) {
			System.out.println(&quot;ImagePaintStrategy.init(): Error waiting for image. Exception = &quot; + e);
		}

		scaleFactor = 2.0 / (fillFactor * (image.getWidth(imageObs) + image.getHeight(imageObs)) / 2.0);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K02RYqbYEeefQ6YhjiYj2A" name="paintXfrm" specification="_KxkT4KbYEeefQ6YhjiYj2A">
            <ownedParameter xmi:id="_K02RY6bYEeefQ6YhjiYj2A" name="g" type="_Kr1fUabYEeefQ6YhjiYj2A"/>
            <ownedParameter xmi:id="_K02RZKbYEeefQ6YhjiYj2A" name="host" type="_Kg724KbYEeefQ6YhjiYj2A"/>
            <ownedParameter xmi:id="_K02RZabYEeefQ6YhjiYj2A" name="at" type="_KtP0kKbYEeefQ6YhjiYj2A"/>
            <language>java</language>
            <body>localAT.setToScale(scaleFactor, scaleFactor);
		localAT.translate(-image.getWidth(imageObs) / 2.0, -image.getHeight(imageObs) / 2.0);
		localAT.preConcatenate(at);
		((Graphics2D) g).drawImage(image, localAT, imageObs);
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_KhxkYKbYEeefQ6YhjiYj2A" name="ImagePaintStrategy" method="_K01qVabYEeefQ6YhjiYj2A">
            <eAnnotations xmi:id="_KhyLcKbYEeefQ6YhjiYj2A" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_KhyLcabYEeefQ6YhjiYj2A" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_K1-SwqbYEeefQ6YhjiYj2A">
              <body>Constructor that takes the image filename and fill factor.
	 * @param filename The filename of the image file to use.
	 * @param fillFactor The ratio of the desired average diameter of the image to the actual average of the image's width and height.</body>
            </ownedComment>
            <ownedParameter xmi:id="_KhxkYabYEeefQ6YhjiYj2A" name="filename">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_KhxkYqbYEeefQ6YhjiYj2A" name="fillFactor">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_KhyLcqbYEeefQ6YhjiYj2A" type="_KhvIIKbYEeefQ6YhjiYj2A" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_KtivgKbYEeefQ6YhjiYj2A" name="init" method="_K02RYKbYEeefQ6YhjiYj2A">
            <ownedParameter xmi:id="_Ktj9oKbYEeefQ6YhjiYj2A" name="host" type="_Kg724KbYEeefQ6YhjiYj2A"/>
          </ownedOperation>
          <ownedOperation xmi:id="_Kxjs0KbYEeefQ6YhjiYj2A" name="ImagePaintStrategy" method="_K01qUKbYEeefQ6YhjiYj2A">
            <eAnnotations xmi:id="_Kxjs1KbYEeefQ6YhjiYj2A" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_Kxjs1abYEeefQ6YhjiYj2A" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_K1-SwabYEeefQ6YhjiYj2A">
              <body>Constructor that takes an external AffineTransform, the filename of the image to paint and a fill factor of the image.
	 * @param at The AffineTransform to use internally.
	 * @param filename The filename of the image file to use.
	 * @param fillFactor The ratio of the desired average diameter of the image to the actual average of the image's width and height.</body>
            </ownedComment>
            <ownedParameter xmi:id="_Kxjs0abYEeefQ6YhjiYj2A" name="at" type="_KtP0kKbYEeefQ6YhjiYj2A"/>
            <ownedParameter xmi:id="_Kxjs0qbYEeefQ6YhjiYj2A" name="filename">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Kxjs06bYEeefQ6YhjiYj2A" name="fillFactor">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Kxjs1qbYEeefQ6YhjiYj2A" type="_KhvIIKbYEeefQ6YhjiYj2A" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_KxkT4KbYEeefQ6YhjiYj2A" name="paintXfrm" method="_K02RYqbYEeefQ6YhjiYj2A">
            <ownedComment xmi:id="_K1-Sw6bYEeefQ6YhjiYj2A">
              <body>Draws the image on the given Graphics comtext using the given affine transform 
	 * in combination iwth the local affine transform.</body>
            </ownedComment>
            <ownedParameter xmi:id="_KxkT4abYEeefQ6YhjiYj2A" name="g" type="_Kr1fUabYEeefQ6YhjiYj2A"/>
            <ownedParameter xmi:id="_KxkT4qbYEeefQ6YhjiYj2A" name="host" type="_Kg724KbYEeefQ6YhjiYj2A"/>
            <ownedParameter xmi:id="_KxkT46bYEeefQ6YhjiYj2A" name="at" type="_KtP0kKbYEeefQ6YhjiYj2A"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_Kh4SEKbYEeefQ6YhjiYj2A" name="MultiPaintStrategy">
          <ownedComment xmi:id="_K1-SxKbYEeefQ6YhjiYj2A">
            <body>A composite design pattern extension of APaintStrategy that paints a set of paint strategies. 
Note: This paint strategy cannot be used directly by the BallWorld system because it lacks a no-parameter constructor.
@author Yuhui Tong, Haoyuan Yue</body>
          </ownedComment>
          <generalization xmi:id="_KtsggKbYEeefQ6YhjiYj2A" general="_KhgeoKbYEeefQ6YhjiYj2A"/>
          <ownedAttribute xmi:id="_KzV1gabYEeefQ6YhjiYj2A" name="pstrats" visibility="private" type="_KhgeoKbYEeefQ6YhjiYj2A" association="_K26G4abYEeefQ6YhjiYj2A">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_KzWckKbYEeefQ6YhjiYj2A" value="*"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K024cKbYEeefQ6YhjiYj2A" name="MultiPaintStrategy" specification="_KxliAKbYEeefQ6YhjiYj2A">
            <ownedParameter xmi:id="_K024cabYEeefQ6YhjiYj2A" name="at" type="_KtP0kKbYEeefQ6YhjiYj2A"/>
            <ownedParameter xmi:id="_K024cqbYEeefQ6YhjiYj2A" name="pstrats" type="_KhgeoKbYEeefQ6YhjiYj2A">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_K024c6bYEeefQ6YhjiYj2A" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_K024dKbYEeefQ6YhjiYj2A" type="_Kh4SEKbYEeefQ6YhjiYj2A" direction="return"/>
            <language>java</language>
            <body>super(at);
		this.pstrats = pstrats;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K03fgKbYEeefQ6YhjiYj2A" name="MultiPaintStrategy" specification="_KtpdMKbYEeefQ6YhjiYj2A">
            <ownedParameter xmi:id="_K03fgabYEeefQ6YhjiYj2A" name="pstrats" type="_KhgeoKbYEeefQ6YhjiYj2A">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_K03fgqbYEeefQ6YhjiYj2A" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_K03fg6bYEeefQ6YhjiYj2A" type="_Kh4SEKbYEeefQ6YhjiYj2A" direction="return"/>
            <language>java</language>
            <body>this(new AffineTransform(), pstrats);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K03fhKbYEeefQ6YhjiYj2A" name="paintXfrm" specification="_KxmwIabYEeefQ6YhjiYj2A">
            <ownedParameter xmi:id="_K03fhabYEeefQ6YhjiYj2A" name="g" type="_Kr1fUabYEeefQ6YhjiYj2A"/>
            <ownedParameter xmi:id="_K03fhqbYEeefQ6YhjiYj2A" name="host" type="_Kg724KbYEeefQ6YhjiYj2A"/>
            <ownedParameter xmi:id="_K03fh6bYEeefQ6YhjiYj2A" name="at" type="_KtP0kKbYEeefQ6YhjiYj2A"/>
            <language>java</language>
            <body>for (int i = 0; i &lt; pstrats.length; i++) {
			pstrats[i].paintXfrm(g, host, at);
		}

	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K04GkKbYEeefQ6YhjiYj2A" name="init" specification="_Ktr5cKbYEeefQ6YhjiYj2A">
            <ownedParameter xmi:id="_K04GkabYEeefQ6YhjiYj2A" name="host" type="_Kg724KbYEeefQ6YhjiYj2A"/>
            <language>java</language>
            <body>for (int i = 0; i &lt; pstrats.length; i++) {
			pstrats[i].init(host);
		}
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_KtpdMKbYEeefQ6YhjiYj2A" name="MultiPaintStrategy" method="_K03fgKbYEeefQ6YhjiYj2A">
            <eAnnotations xmi:id="_KtqEQKbYEeefQ6YhjiYj2A" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_KtqEQabYEeefQ6YhjiYj2A" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_KtpdMabYEeefQ6YhjiYj2A" name="pstrats" type="_KhgeoKbYEeefQ6YhjiYj2A">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_KtqrUqbYEeefQ6YhjiYj2A" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_KtqrUabYEeefQ6YhjiYj2A" type="_Kh4SEKbYEeefQ6YhjiYj2A" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_Ktr5cKbYEeefQ6YhjiYj2A" name="init" method="_K04GkKbYEeefQ6YhjiYj2A">
            <ownedComment xmi:id="_K1-SxabYEeefQ6YhjiYj2A">
              <body>Delegates to all the IPaintStrategies in the composite. Used to initialize the paint strategies.
	 * @param host The host Ball</body>
            </ownedComment>
            <ownedParameter xmi:id="_Ktr5cabYEeefQ6YhjiYj2A" name="host" type="_Kg724KbYEeefQ6YhjiYj2A"/>
          </ownedOperation>
          <ownedOperation xmi:id="_KxliAKbYEeefQ6YhjiYj2A" name="MultiPaintStrategy" method="_K024cKbYEeefQ6YhjiYj2A">
            <eAnnotations xmi:id="_KxliA6bYEeefQ6YhjiYj2A" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_KxliBKbYEeefQ6YhjiYj2A" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_KxliAabYEeefQ6YhjiYj2A" name="at" type="_KtP0kKbYEeefQ6YhjiYj2A"/>
            <ownedParameter xmi:id="_KxliAqbYEeefQ6YhjiYj2A" name="pstrats" type="_KhgeoKbYEeefQ6YhjiYj2A">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_KxmJEqbYEeefQ6YhjiYj2A" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_KxmJEabYEeefQ6YhjiYj2A" type="_Kh4SEKbYEeefQ6YhjiYj2A" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_KxmwIabYEeefQ6YhjiYj2A" name="paintXfrm" method="_K03fhKbYEeefQ6YhjiYj2A">
            <ownedParameter xmi:id="_KxnXMKbYEeefQ6YhjiYj2A" name="g" type="_Kr1fUabYEeefQ6YhjiYj2A"/>
            <ownedParameter xmi:id="_KxnXMabYEeefQ6YhjiYj2A" name="host" type="_Kg724KbYEeefQ6YhjiYj2A"/>
            <ownedParameter xmi:id="_KxnXMqbYEeefQ6YhjiYj2A" name="at" type="_KtP0kKbYEeefQ6YhjiYj2A"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_Kh9xoKbYEeefQ6YhjiYj2A" name="ShapePaintStrategy">
          <ownedComment xmi:id="_K1-SxqbYEeefQ6YhjiYj2A">
            <body>Concrete class that defines invariant painting behaviors to paint Shape objects 
for all its subclasses. Note: This cannot be directly instantiated 
by the BallWorld system because it lacks a no-parameter constructor.
@author Yuhui Tong, Haoyuan Yue
 *</body>
          </ownedComment>
          <generalization xmi:id="_Ktvj0KbYEeefQ6YhjiYj2A" general="_KhgeoKbYEeefQ6YhjiYj2A"/>
          <ownedAttribute xmi:id="_KzXDoKbYEeefQ6YhjiYj2A" name="shape" visibility="private" type="_KsauIKbYEeefQ6YhjiYj2A" association="_K26t8abYEeefQ6YhjiYj2A"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K04toKbYEeefQ6YhjiYj2A" name="ShapePaintStrategy" specification="_KxolUKbYEeefQ6YhjiYj2A">
            <ownedParameter xmi:id="_K04toabYEeefQ6YhjiYj2A" name="shape" type="_KsauIKbYEeefQ6YhjiYj2A"/>
            <ownedParameter xmi:id="_K04toqbYEeefQ6YhjiYj2A" type="_Kh9xoKbYEeefQ6YhjiYj2A" direction="return"/>
            <language>java</language>
            <body>super(new AffineTransform());
		this.shape = shape;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K04to6bYEeefQ6YhjiYj2A" name="ShapePaintStrategy" specification="_KxpzcKbYEeefQ6YhjiYj2A">
            <ownedParameter xmi:id="_K04tpKbYEeefQ6YhjiYj2A" name="at" type="_KtP0kKbYEeefQ6YhjiYj2A"/>
            <ownedParameter xmi:id="_K04tpabYEeefQ6YhjiYj2A" name="shape" type="_KsauIKbYEeefQ6YhjiYj2A"/>
            <ownedParameter xmi:id="_K04tpqbYEeefQ6YhjiYj2A" type="_Kh9xoKbYEeefQ6YhjiYj2A" direction="return"/>
            <language>java</language>
            <body>super(at);
		this.shape = shape;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K05UsKbYEeefQ6YhjiYj2A" name="paintXfrm" specification="_KxqagKbYEeefQ6YhjiYj2A">
            <ownedParameter xmi:id="_K05UsabYEeefQ6YhjiYj2A" name="g" type="_Kr1fUabYEeefQ6YhjiYj2A"/>
            <ownedParameter xmi:id="_K05UsqbYEeefQ6YhjiYj2A" name="host" type="_Kg724KbYEeefQ6YhjiYj2A"/>
            <ownedParameter xmi:id="_K05Us6bYEeefQ6YhjiYj2A" name="at" type="_KtP0kKbYEeefQ6YhjiYj2A"/>
            <language>java</language>
            <body>Shape newShape = at.createTransformedShape(shape);
		((Graphics2D) g).fill(newShape);
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_KxolUKbYEeefQ6YhjiYj2A" name="ShapePaintStrategy" method="_K04toKbYEeefQ6YhjiYj2A">
            <eAnnotations xmi:id="_KxpMYabYEeefQ6YhjiYj2A" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_KxpMYqbYEeefQ6YhjiYj2A" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_K1-Sx6bYEeefQ6YhjiYj2A">
              <body>Constructor that allocates a new AffineTransform for internal use.
	 * @param shape The Shape to be painted</body>
            </ownedComment>
            <ownedParameter xmi:id="_KxpMYKbYEeefQ6YhjiYj2A" name="shape" type="_KsauIKbYEeefQ6YhjiYj2A"/>
            <ownedParameter xmi:id="_KxpMY6bYEeefQ6YhjiYj2A" type="_Kh9xoKbYEeefQ6YhjiYj2A" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_KxpzcKbYEeefQ6YhjiYj2A" name="ShapePaintStrategy" method="_K04to6bYEeefQ6YhjiYj2A">
            <eAnnotations xmi:id="_Kxpzc6bYEeefQ6YhjiYj2A" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_KxpzdKbYEeefQ6YhjiYj2A" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_K1-SyKbYEeefQ6YhjiYj2A">
              <body>Constructor that uses a supplied AffineTransform for internal use.
	 * @param at The AffineTransform to use.
	 * @param shape The shape to be painted.</body>
            </ownedComment>
            <ownedParameter xmi:id="_KxpzcabYEeefQ6YhjiYj2A" name="at" type="_KtP0kKbYEeefQ6YhjiYj2A"/>
            <ownedParameter xmi:id="_KxpzcqbYEeefQ6YhjiYj2A" name="shape" type="_KsauIKbYEeefQ6YhjiYj2A"/>
            <ownedParameter xmi:id="_KxpzdabYEeefQ6YhjiYj2A" type="_Kh9xoKbYEeefQ6YhjiYj2A" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_KxqagKbYEeefQ6YhjiYj2A" name="paintXfrm" method="_K05UsKbYEeefQ6YhjiYj2A">
            <ownedParameter xmi:id="_KxqagabYEeefQ6YhjiYj2A" name="g" type="_Kr1fUabYEeefQ6YhjiYj2A"/>
            <ownedParameter xmi:id="_KxrBkKbYEeefQ6YhjiYj2A" name="host" type="_Kg724KbYEeefQ6YhjiYj2A"/>
            <ownedParameter xmi:id="_KxrBkabYEeefQ6YhjiYj2A" name="at" type="_KtP0kKbYEeefQ6YhjiYj2A"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_KiCqIKbYEeefQ6YhjiYj2A" name="UprightImagePaintStrategy">
          <ownedComment xmi:id="_K1-SyabYEeefQ6YhjiYj2A">
            <body>An image painting strategy that adds a paintCfg override that keeps the image upright no matter which way it is going.
@author Yuhui Tong, Haoyuan Yue
 *</body>
          </ownedComment>
          <generalization xmi:id="_KtynIKbYEeefQ6YhjiYj2A" general="_KhvIIKbYEeefQ6YhjiYj2A"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K05UtKbYEeefQ6YhjiYj2A" name="UprightImagePaintStrategy" specification="_KiD4QKbYEeefQ6YhjiYj2A">
            <ownedParameter xmi:id="_K05UtabYEeefQ6YhjiYj2A" name="filename">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_K05UtqbYEeefQ6YhjiYj2A" name="fillFactor">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_K05Ut6bYEeefQ6YhjiYj2A" type="_KiCqIKbYEeefQ6YhjiYj2A" direction="return"/>
            <language>java</language>
            <body>super(filename, fillFactor);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K057wKbYEeefQ6YhjiYj2A" name="paintCfg" specification="_KxsPsKbYEeefQ6YhjiYj2A">
            <ownedParameter xmi:id="_K057wabYEeefQ6YhjiYj2A" name="g" type="_Kr1fUabYEeefQ6YhjiYj2A"/>
            <ownedParameter xmi:id="_K057wqbYEeefQ6YhjiYj2A" name="host" type="_Kg724KbYEeefQ6YhjiYj2A"/>
            <language>java</language>
            <body>super.paintCfg(g, host);
		if (Math.abs(Math.atan2(host.getVelocity().y, host.getVelocity().x)) > Math.PI / 2.0) {
			getAT().scale(1.0, -1.0);
		}
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_KiD4QKbYEeefQ6YhjiYj2A" name="UprightImagePaintStrategy" method="_K05UtKbYEeefQ6YhjiYj2A">
            <eAnnotations xmi:id="_KiEfUqbYEeefQ6YhjiYj2A" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_KiFGYKbYEeefQ6YhjiYj2A" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_KiEfUKbYEeefQ6YhjiYj2A" name="filename">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_KiEfUabYEeefQ6YhjiYj2A" name="fillFactor">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_KiFGYabYEeefQ6YhjiYj2A" type="_KiCqIKbYEeefQ6YhjiYj2A" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_KxsPsKbYEeefQ6YhjiYj2A" name="paintCfg" visibility="protected" method="_K057wKbYEeefQ6YhjiYj2A">
            <ownedParameter xmi:id="_KxsPsabYEeefQ6YhjiYj2A" name="g" type="_Kr1fUabYEeefQ6YhjiYj2A"/>
            <ownedParameter xmi:id="_Kxs2wKbYEeefQ6YhjiYj2A" name="host" type="_Kg724KbYEeefQ6YhjiYj2A"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_K21OYabYEeefQ6YhjiYj2A" name="" memberEnd="_K21OYqbYEeefQ6YhjiYj2A _KzN5sKbYEeefQ6YhjiYj2A">
          <ownedEnd xmi:id="_K21OYqbYEeefQ6YhjiYj2A" name="" type="_KhYi0KbYEeefQ6YhjiYj2A" association="_K21OYabYEeefQ6YhjiYj2A"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_K22cgKbYEeefQ6YhjiYj2A" name="" memberEnd="_K22cgabYEeefQ6YhjiYj2A _KzPH0KbYEeefQ6YhjiYj2A">
          <ownedEnd xmi:id="_K22cgabYEeefQ6YhjiYj2A" name="" type="_KhgeoKbYEeefQ6YhjiYj2A" association="_K22cgKbYEeefQ6YhjiYj2A"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_K23DkabYEeefQ6YhjiYj2A" name="" memberEnd="_K23DkqbYEeefQ6YhjiYj2A _KzQV8abYEeefQ6YhjiYj2A">
          <ownedEnd xmi:id="_K23DkqbYEeefQ6YhjiYj2A" name="" type="_KhnMUKbYEeefQ6YhjiYj2A" association="_K23DkabYEeefQ6YhjiYj2A"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_K23qoabYEeefQ6YhjiYj2A" name="" memberEnd="_K23qoqbYEeefQ6YhjiYj2A _KzSyMqbYEeefQ6YhjiYj2A">
          <ownedEnd xmi:id="_K23qoqbYEeefQ6YhjiYj2A" name="" type="_KhvIIKbYEeefQ6YhjiYj2A" association="_K23qoabYEeefQ6YhjiYj2A"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_K24RsabYEeefQ6YhjiYj2A" name="" memberEnd="_K24RsqbYEeefQ6YhjiYj2A _KzTZQabYEeefQ6YhjiYj2A">
          <ownedEnd xmi:id="_K24RsqbYEeefQ6YhjiYj2A" name="" type="_KhvIIKbYEeefQ6YhjiYj2A" association="_K24RsabYEeefQ6YhjiYj2A"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_K244wabYEeefQ6YhjiYj2A" name="" memberEnd="_K244wqbYEeefQ6YhjiYj2A _KzUAUabYEeefQ6YhjiYj2A">
          <ownedEnd xmi:id="_K244wqbYEeefQ6YhjiYj2A" name="" type="_KhvIIKbYEeefQ6YhjiYj2A" association="_K244wabYEeefQ6YhjiYj2A"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_K25f0abYEeefQ6YhjiYj2A" name="" memberEnd="_K25f0qbYEeefQ6YhjiYj2A _KzVOcabYEeefQ6YhjiYj2A">
          <ownedEnd xmi:id="_K25f0qbYEeefQ6YhjiYj2A" name="" type="_KhvIIKbYEeefQ6YhjiYj2A" association="_K25f0abYEeefQ6YhjiYj2A"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_K26G4abYEeefQ6YhjiYj2A" name="" memberEnd="_K26G4qbYEeefQ6YhjiYj2A _KzV1gabYEeefQ6YhjiYj2A">
          <ownedEnd xmi:id="_K26G4qbYEeefQ6YhjiYj2A" name="" type="_Kh4SEKbYEeefQ6YhjiYj2A" association="_K26G4abYEeefQ6YhjiYj2A"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_K26t8abYEeefQ6YhjiYj2A" name="" memberEnd="_K26t8qbYEeefQ6YhjiYj2A _KzXDoKbYEeefQ6YhjiYj2A">
          <ownedEnd xmi:id="_K26t8qbYEeefQ6YhjiYj2A" name="" type="_Kh9xoKbYEeefQ6YhjiYj2A" association="_K26t8abYEeefQ6YhjiYj2A"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_KfwLIKbYEeefQ6YhjiYj2A" name="BallModel">
        <ownedComment xmi:id="_K17Pc6bYEeefQ6YhjiYj2A">
          <body>This is the model for BallWorldAppThe model that represents the balls and their associated control systems. 
The balls are held by a Dispatcher which is used for all communications to the balls. Uses a Timer object to update the model and the view at a regular time slice. 
This will give the effect of animation.
@author Yuhui Tong, Haoyuan Yue
@version 1.0</body>
        </ownedComment>
        <ownedAttribute xmi:id="_Ky2GQKbYEeefQ6YhjiYj2A" name="_model2ViewAdpt" visibility="private" type="_KgaScKbYEeefQ6YhjiYj2A" association="_K2mk4abYEeefQ6YhjiYj2A">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_Ky2GQabYEeefQ6YhjiYj2A" value="IModel2ViewAdapter.NULL_OBJECT"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Ky2tUabYEeefQ6YhjiYj2A" name="_paintTimeSlice" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_Ky3UYKbYEeefQ6YhjiYj2A" value="50"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Ky37cKbYEeefQ6YhjiYj2A" name="_paintTimer" visibility="private" type="_Kr3UgKbYEeefQ6YhjiYj2A" association="_K2nzAabYEeefQ6YhjiYj2A">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_Ky37cabYEeefQ6YhjiYj2A" value="new Timer(_paintTimeSlice, new ActionListener() {&#xA;&#x9;&#x9;/**&#xA;&#x9;&#x9; * The timer &quot;ticks&quot; by calling this method every _paintTimeslice milliseconds. &#xA;&#x9;&#x9; */&#xA;&#x9;&#x9;public void actionPerformed(ActionEvent e) {&#xA;&#x9;&#x9;&#x9;_model2ViewAdpt.repaint();&#xA;&#x9;&#x9;}&#xA;&#x9;})"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Ky4igabYEeefQ6YhjiYj2A" name="_updateTimeSlice" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_Ky4igqbYEeefQ6YhjiYj2A" value="50"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Ky5JkKbYEeefQ6YhjiYj2A" name="_updateTimer" visibility="private" type="_Kr3UgKbYEeefQ6YhjiYj2A" association="_K2poMabYEeefQ6YhjiYj2A">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_Ky5JkabYEeefQ6YhjiYj2A" value="new Timer(_updateTimeSlice, new ActionListener() {&#xA;&#xA;&#x9;&#x9;/**&#xA;&#x9;&#x9; * The timer &quot;ticks&quot; by calling this method every _updateTimeslice milliseconds. &#xA;&#x9;&#x9; */&#xA;&#x9;&#x9;public void actionPerformed(ActionEvent e) {&#xA;&#x9;&#x9;&#x9;_dispatcher.dispatch(new IBallCmd() {&#xA;&#x9;&#x9;&#x9;&#x9;/**&#xA;&#x9;&#x9;&#x9;&#x9; * Overriden method that defines the IBallCmd&#xA;&#x9;&#x9;&#x9;&#x9; */&#xA;&#x9;&#x9;&#x9;&#x9;@Override&#xA;&#x9;&#x9;&#x9;&#x9;public void apply(Ball context, IDispatcher&lt;IBallCmd> disp) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;context.updateState(disp);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;context.move();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;context.bounce();&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;});&#xA;&#x9;&#x9;}&#xA;&#x9;})"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Ky5woKbYEeefQ6YhjiYj2A" name="_dispatcher" visibility="private" type="_Kk8NIKbYEeefQ6YhjiYj2A" association="_K2q2UabYEeefQ6YhjiYj2A">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_Ky7l0KbYEeefQ6YhjiYj2A" value="new SetDispatcherSequential&lt;IBallCmd>()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Ky8M4abYEeefQ6YhjiYj2A" name="_errorStrategyFac" visibility="private" type="_KgpjAKbYEeefQ6YhjiYj2A" association="_K2rdYabYEeefQ6YhjiYj2A">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_Ky9bAabYEeefQ6YhjiYj2A" value="new IStrategyFac&lt;IBallCmd>() {&#xA;&#x9;&#x9;@Override&#xA;&#x9;&#x9;/**&#xA;&#x9;&#x9; * Make the beeping error strategy&#xA;&#x9;&#x9; * @return An instance of a beeping error strategy&#xA;&#x9;&#x9; */&#xA;&#x9;&#x9;public IUpdateStrategy&lt;IBallCmd> make() {&#xA;&#x9;&#x9;&#x9;return new IUpdateStrategy&lt;IBallCmd>() {&#xA;&#x9;&#x9;&#x9;&#x9;/**&#xA;&#x9;&#x9;&#x9;&#x9; * Update counter&#xA;&#x9;&#x9;&#x9;&#x9; */&#xA;&#x9;&#x9;&#x9;&#x9;private int count = 0; // update counter&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;/**&#xA;&#x9;&#x9;&#x9;&#x9; * Beep the speaker every 25 updates&#xA;&#x9;&#x9;&#x9;&#x9; */&#xA;&#x9;&#x9;&#x9;&#x9;public void updateState(Ball context, IDispatcher&lt;IBallCmd> disp) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if (25 &lt; count++) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;java.awt.Toolkit.getDefaultToolkit().beep();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;count = 0;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;@Override&#xA;&#x9;&#x9;&#x9;&#x9;public void init(Ball context) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;// TODO Auto-generated method stub&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;};&#xA;&#x9;&#x9;}&#xA;&#x9;}"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Ky-CEabYEeefQ6YhjiYj2A" name="_errorPaintStrategyFac" visibility="private" type="_KgjcYKbYEeefQ6YhjiYj2A" association="_K2sEcabYEeefQ6YhjiYj2A">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_Ky-pIKbYEeefQ6YhjiYj2A" value="new IPaintStrategyFac() {&#xA;&#x9;&#x9;@Override&#xA;&#x9;&#x9;public IPaintStrategy make() {&#xA;&#x9;&#x9;&#x9;return new IPaintStrategy() {&#xA;&#x9;&#x9;&#x9;&#x9;/**&#xA;&#x9;&#x9;&#x9;&#x9; * update counter&#xA;&#x9;&#x9;&#x9;&#x9; */&#xA;&#x9;&#x9;&#x9;&#x9;private int count = 0;&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;/**&#xA;&#x9;&#x9;&#x9;&#x9; * Overridden method that paint a straight ball while beeping.&#xA;&#x9;&#x9;&#x9;&#x9; */&#xA;&#x9;&#x9;&#x9;&#x9;@Override&#xA;&#x9;&#x9;&#x9;&#x9;public void paint(Graphics g, Ball host) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;g.setColor(host.getColor());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;g.fillOval(host.getLocation().x, host.getLocation().y, 2 * host.getRadius(), 2 * host.getRadius());&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;// beep&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if (25 &lt; count++) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;java.awt.Toolkit.getDefaultToolkit().beep();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;count = 0;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;@Override&#xA;&#x9;&#x9;&#x9;&#x9;/**&#xA;&#x9;&#x9;&#x9;&#x9; * Overridden method that initialize the paint strategy.&#xA;&#x9;&#x9;&#x9;&#x9; */&#xA;&#x9;&#x9;&#x9;&#x9;public void init(Ball host) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;// do nothing;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;};&#xA;&#x9;&#x9;}&#xA;&#x9;}"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Ky_QMKbYEeefQ6YhjiYj2A" name="_switcher" visibility="private" type="_KkjLkKbYEeefQ6YhjiYj2A" association="_K2srgabYEeefQ6YhjiYj2A">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_Ky_3QabYEeefQ6YhjiYj2A" value="new SwitcherStrategy&lt;>()"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K0j9gKbYEeefQ6YhjiYj2A" name="BallModel" specification="_KsCToKbYEeefQ6YhjiYj2A">
          <ownedParameter xmi:id="_K0j9gabYEeefQ6YhjiYj2A" name="model2ViewAdpt" type="_KgaScKbYEeefQ6YhjiYj2A"/>
          <ownedParameter xmi:id="_K0j9gqbYEeefQ6YhjiYj2A" type="_KfwLIKbYEeefQ6YhjiYj2A" direction="return">
            <name xsi:nil="true"/>
          </ownedParameter>
          <language>java</language>
          <body>_model2ViewAdpt = model2ViewAdpt;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K0kkkKbYEeefQ6YhjiYj2A" name="start" specification="_Kfz1gKbYEeefQ6YhjiYj2A">
          <language>java</language>
          <body>_paintTimer.start();
		_updateTimer.start();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K0kkkabYEeefQ6YhjiYj2A" name="update" specification="_KxLSUKbYEeefQ6YhjiYj2A">
          <ownedParameter xmi:id="_K0kkkqbYEeefQ6YhjiYj2A" name="g" type="_Kr1fUabYEeefQ6YhjiYj2A"/>
          <language>java</language>
          <body>// every observer is notified, i.e., ABall.update() method is prcoessed.
		// _dispatcher.notifyAll(g); // The graphics object is given to all the balls (Observers)
		_dispatcher.dispatch(new IBallCmd() {
			@Override
			public void apply(Ball context, IDispatcher&lt;IBallCmd> disp) {
				context.paint(g);
			}
		});
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K0lLoKbYEeefQ6YhjiYj2A" name="loadStrategy" specification="_Kf1DoKbYEeefQ6YhjiYj2A">
          <ownedParameter xmi:id="_K0lLoabYEeefQ6YhjiYj2A" name="className">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_K0lLoqbYEeefQ6YhjiYj2A" type="_Kgt0cKbYEeefQ6YhjiYj2A" direction="return">
            <name xsi:nil="true"/>
          </ownedParameter>
          <language>java</language>
          <body>//System.out.println(&quot;single attempts&quot;);
		try {
			//System.out.println(&quot;multiple attempts&quot;);
			Object[] args = new Object[] {};
			java.lang.reflect.Constructor&lt;?> cs[] = Class.forName(className).getConstructors();
			java.lang.reflect.Constructor&lt;?> c = null;
			for (int i = 0; i &lt; cs.length; i++) {
				if (args.length == (cs[i]).getParameterTypes().length) {
					c = cs[i];
					break;
				}
			}
			return (IUpdateStrategy&lt;IBallCmd>) c.newInstance(args);
		} catch (Exception ex) {
			System.err.println(&quot;Class &quot; + className + &quot; failed to load. \nException= \n&quot; + ex);
			ex.printStackTrace();
			return _errorStrategyFac.make();
			// return null;
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K0lLo6bYEeefQ6YhjiYj2A" name="loadPaintStrategy" specification="_Kf5VEKbYEeefQ6YhjiYj2A">
          <ownedParameter xmi:id="_K0lLpKbYEeefQ6YhjiYj2A" name="PaintStrategyName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_K0lLpabYEeefQ6YhjiYj2A" type="_KgdVwKbYEeefQ6YhjiYj2A" direction="return">
            <name xsi:nil="true"/>
          </ownedParameter>
          <language>java</language>
          <body>try {
			Object[] args = new Object[] {};
			java.lang.reflect.Constructor&lt;?> cs[] = Class.forName(PaintStrategyName).getConstructors();
			java.lang.reflect.Constructor&lt;?> c = null;
			for (int i = 0; i &lt; cs.length; i++) {
				if (args.length == (cs[i]).getParameterTypes().length) {
					c = cs[i];
					break;
				}
			}
			return (IPaintStrategy) c.newInstance(args);
		} catch (Exception ex) {
			System.err.println(&quot;Class &quot; + PaintStrategyName + &quot; failed to load. \nException= \n&quot; + ex);
			ex.printStackTrace();
			return _errorPaintStrategyFac.make();
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K0lLpqbYEeefQ6YhjiYj2A" name="makeBall" specification="_KsF-AabYEeefQ6YhjiYj2A">
          <ownedParameter xmi:id="_K0lLp6bYEeefQ6YhjiYj2A" name="strategy" type="_Kgt0cKbYEeefQ6YhjiYj2A"/>
          <ownedParameter xmi:id="_K0lLqKbYEeefQ6YhjiYj2A" name="paintStrategy" type="_KgdVwKbYEeefQ6YhjiYj2A"/>
          <language>java</language>
          <body>int initialRadius = Randomizer.Singleton.randomInt(5, 25);
		int height = _model2ViewAdpt.getCanvas().getHeight();
		int width = _model2ViewAdpt.getCanvas().getWidth();
		Point initialLocation = Randomizer.Singleton.randomLoc(new Rectangle(0, 0, width, height));
		Point initialVelocity = Randomizer.Singleton.randomVel(new Rectangle(0, 0, 5, 15));
		Color initialColor = Randomizer.Singleton.randomColor();
		Component theCanvas = _model2ViewAdpt.getCanvas();

		// IPaintStrategy paintStrategy = new SquarePaintStrategy();
		// IPaintStrateg  paintStrategy = new EllipsePaintStrategy();
		//IPaintStrategy paintStrategy = new RectanglePaintStrategy();
		// IPaintStrategy paintStrategy = new Fish1PaintStrategy();
		//IPaintStrategy paintStrategy = new BallPaintStrategy();

		Ball ball = new Ball(initialLocation, initialRadius, initialVelocity, initialColor, theCanvas, strategy,
				paintStrategy);
		_dispatcher.addObserver(ball);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K0lysKbYEeefQ6YhjiYj2A" name="clearBalls" specification="_Kf7KQKbYEeefQ6YhjiYj2A">
          <language>java</language>
          <body>_dispatcher.deleleObservers();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K0lysabYEeefQ6YhjiYj2A" name="makeStrategyFac" specification="_Kf8YYKbYEeefQ6YhjiYj2A">
          <ownedParameter xmi:id="_K0lysqbYEeefQ6YhjiYj2A" name="classname">
            <eAnnotations xmi:id="_K0lys6bYEeefQ6YhjiYj2A" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_K0lytKbYEeefQ6YhjiYj2A" key="final"/>
            </eAnnotations>
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_K0lytabYEeefQ6YhjiYj2A" type="_KgpjAKbYEeefQ6YhjiYj2A" direction="return">
            <name xsi:nil="true"/>
          </ownedParameter>
          <language>java</language>
          <body>if (classname == null)
			return _errorStrategyFac;
		return new IStrategyFac&lt;IBallCmd>() {
			public IUpdateStrategy&lt;IBallCmd> make() {
				return loadStrategy(fixName(classname));
			}

			public String toString() {
				return classname;
			}
		};
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K0mZwKbYEeefQ6YhjiYj2A" name="makePaintStrategyFac" specification="_Kf_bsKbYEeefQ6YhjiYj2A">
          <ownedParameter xmi:id="_K0mZwabYEeefQ6YhjiYj2A" name="PaintStrategyName">
            <eAnnotations xmi:id="_K0mZwqbYEeefQ6YhjiYj2A" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_K0mZw6bYEeefQ6YhjiYj2A" key="final"/>
            </eAnnotations>
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_K0mZxKbYEeefQ6YhjiYj2A" type="_KgjcYKbYEeefQ6YhjiYj2A" direction="return">
            <name xsi:nil="true"/>
          </ownedParameter>
          <language>java</language>
          <body>if (PaintStrategyName == null)
			return _errorPaintStrategyFac;
		return new IPaintStrategyFac() {
			@Override
			public IPaintStrategy make() {
				return loadPaintStrategy(fixFullName(&quot;model.paint.strategy.&quot;, PaintStrategyName, &quot;PaintStrategy&quot;));
			}

			public String toString() {
				return PaintStrategyName;
			}
		};
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K0mZxabYEeefQ6YhjiYj2A" name="fixFullName" specification="_KgB38KbYEeefQ6YhjiYj2A">
          <ownedParameter xmi:id="_K0mZxqbYEeefQ6YhjiYj2A" name="prefix">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_K0mZx6bYEeefQ6YhjiYj2A" name="PaintStrategyName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_K0mZyKbYEeefQ6YhjiYj2A" name="suffix">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_K0mZyabYEeefQ6YhjiYj2A" direction="return">
            <name xsi:nil="true"/>
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>return prefix + PaintStrategyName + suffix;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K0nA0KbYEeefQ6YhjiYj2A" name="combineStrategyFacs" specification="_KsKPcabYEeefQ6YhjiYj2A">
          <ownedParameter xmi:id="_K0nA0abYEeefQ6YhjiYj2A" name="stratFac1" type="_KgpjAKbYEeefQ6YhjiYj2A">
            <eAnnotations xmi:id="_K0nA0qbYEeefQ6YhjiYj2A" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_K0nA06bYEeefQ6YhjiYj2A" key="final"/>
            </eAnnotations>
          </ownedParameter>
          <ownedParameter xmi:id="_K0nA1KbYEeefQ6YhjiYj2A" name="stratFac2" type="_KgpjAKbYEeefQ6YhjiYj2A">
            <eAnnotations xmi:id="_K0nA1abYEeefQ6YhjiYj2A" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_K0nA1qbYEeefQ6YhjiYj2A" key="final"/>
            </eAnnotations>
          </ownedParameter>
          <ownedParameter xmi:id="_K0nA16bYEeefQ6YhjiYj2A" type="_KgpjAKbYEeefQ6YhjiYj2A" direction="return">
            <name xsi:nil="true"/>
          </ownedParameter>
          <language>java</language>
          <body>if (stratFac1 == null || stratFac2 == null)
			return _errorStrategyFac;
		return new IStrategyFac&lt;IBallCmd>() {
			/**
			 * Instantiate a new MultiStrategy with the strategies from the given strategy factories.
			 * @return A multiStrategy instance
			 */
			public IUpdateStrategy&lt;IBallCmd> make() {
				return new MultiStrategy&lt;IBallCmd>(stratFac1.make(), stratFac2.make());
			}

			/**
			 * Return a string that is the toString()'s of the given strategy factories 
			 * concatenated with a&quot;_&quot;
			 */
			public String toString() {
				return stratFac1.toString() + &quot;_&quot; + stratFac2.toString();
			}
		};
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K0nA2KbYEeefQ6YhjiYj2A" name="getSwitcherStrategy" specification="_KgDtIKbYEeefQ6YhjiYj2A">
          <ownedParameter xmi:id="_K0nA2abYEeefQ6YhjiYj2A" type="_KkjLkKbYEeefQ6YhjiYj2A" direction="return">
            <name xsi:nil="true"/>
          </ownedParameter>
          <language>java</language>
          <body>return _switcher;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K0nn4KbYEeefQ6YhjiYj2A" name="switchSwitcherStrategy" specification="_KsOg4abYEeefQ6YhjiYj2A">
          <ownedParameter xmi:id="_K0nn4abYEeefQ6YhjiYj2A" name="strat" type="_Kgt0cKbYEeefQ6YhjiYj2A"/>
          <language>java</language>
          <body>_switcher.setStrategy(strat);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K0nn4qbYEeefQ6YhjiYj2A" name="fixName" specification="_KgHXgKbYEeefQ6YhjiYj2A">
          <ownedParameter xmi:id="_K0nn46bYEeefQ6YhjiYj2A" name="className">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_K0nn5KbYEeefQ6YhjiYj2A" direction="return">
            <name xsi:nil="true"/>
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>String shortname = className.trim();
		return &quot;model.updateStrategy.&quot; + shortname + &quot;Strategy&quot;;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_Kfz1gKbYEeefQ6YhjiYj2A" name="start" method="_K0kkkKbYEeefQ6YhjiYj2A">
          <ownedComment xmi:id="_K17PdabYEeefQ6YhjiYj2A">
            <body>Start the timer.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_Kf1DoKbYEeefQ6YhjiYj2A" name="loadStrategy" visibility="private" method="_K0lLoKbYEeefQ6YhjiYj2A">
          <ownedComment xmi:id="_K17Pd6bYEeefQ6YhjiYj2A">
            <body>The following method returns an instance of an IUpdateStrategy, given a fully qualified class name (package.classname) of
	* a concrete class of IUpdateStrategy
	* The method assumes that there is only one constructor for the supplied class that has the same *number* of
	* input parameters as specified in the args array and that it conforms to a specific
	* signature, i.e. specific order and types of input parameters in the args array.
	* @param className A string that is the fully qualified class name of the desired object
	* @return An instance of the supplied class.</body>
          </ownedComment>
          <ownedParameter xmi:id="_Kf1DoabYEeefQ6YhjiYj2A" name="className">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_KsFW8KbYEeefQ6YhjiYj2A" type="_Kgt0cKbYEeefQ6YhjiYj2A" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_Kf5VEKbYEeefQ6YhjiYj2A" name="loadPaintStrategy" visibility="private" method="_K0lLo6bYEeefQ6YhjiYj2A">
          <ownedComment xmi:id="_K17PeKbYEeefQ6YhjiYj2A">
            <body>Uses dynamic class loading to load and instantiate an IUpdateStrategy implementation, given its class name.
	 * @param PaintStrategyName The fully qualified classname of a paint strategy
	 * @return An IPaintStrategy instance</body>
          </ownedComment>
          <ownedParameter xmi:id="_Kf58IKbYEeefQ6YhjiYj2A" name="PaintStrategyName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_KsF-AKbYEeefQ6YhjiYj2A" type="_KgdVwKbYEeefQ6YhjiYj2A" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_Kf7KQKbYEeefQ6YhjiYj2A" name="clearBalls" method="_K0lysKbYEeefQ6YhjiYj2A">
          <ownedComment xmi:id="_K172gabYEeefQ6YhjiYj2A">
            <body>Remove all the balls/observers.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_Kf8YYKbYEeefQ6YhjiYj2A" name="makeStrategyFac" method="_K0lysabYEeefQ6YhjiYj2A">
          <ownedComment xmi:id="_K172gqbYEeefQ6YhjiYj2A">
            <body>Returns an IStrategyFac that can instantiate the strategy specified by classname. Returns
	 * a factory for beeping error strategy if classname is null.
	 * @param classname Shortened name of desired strategy.
	 * @return A factory to make that strategy.</body>
          </ownedComment>
          <ownedParameter xmi:id="_Kf8YYabYEeefQ6YhjiYj2A" name="classname">
            <eAnnotations xmi:id="_Kf-NkKbYEeefQ6YhjiYj2A" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_Kf-0oKbYEeefQ6YhjiYj2A" key="final"/>
            </eAnnotations>
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_KsJoYKbYEeefQ6YhjiYj2A" type="_KgpjAKbYEeefQ6YhjiYj2A" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_Kf_bsKbYEeefQ6YhjiYj2A" name="makePaintStrategyFac" method="_K0mZwKbYEeefQ6YhjiYj2A">
          <ownedComment xmi:id="_K172g6bYEeefQ6YhjiYj2A">
            <body>Returns an IPaintStrategyFac that can instantiate the strategy specified by classname. Returns a factory for a beeping error strategy 
	 * if classname is null. The toString() of the returned factory is the classname.
	 * @param PaintStrategyName Shortened name of desired paint strategy
	 * @return A factory to make that paint strategy</body>
          </ownedComment>
          <ownedParameter xmi:id="_Kf_bsabYEeefQ6YhjiYj2A" name="PaintStrategyName">
            <eAnnotations xmi:id="_KgACwKbYEeefQ6YhjiYj2A" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_KgACwabYEeefQ6YhjiYj2A" key="final"/>
            </eAnnotations>
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_KsKPcKbYEeefQ6YhjiYj2A" type="_KgjcYKbYEeefQ6YhjiYj2A" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_KgB38KbYEeefQ6YhjiYj2A" name="fixFullName" visibility="private" method="_K0mZxabYEeefQ6YhjiYj2A">
          <ownedComment xmi:id="_K172hKbYEeefQ6YhjiYj2A">
            <body>A helper method that fix the qualified name of a paint strategy
	 * @param prefix The prefix of full name of that strategy
	 * @param PaintStrategyName The shortened name of that strategy
	 * @param suffix The suffix of full name of that strategy.
	 * @return The qualified name of a paint strategy</body>
          </ownedComment>
          <ownedParameter xmi:id="_KgB38abYEeefQ6YhjiYj2A" name="prefix">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_KgB38qbYEeefQ6YhjiYj2A" name="PaintStrategyName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_KgB386bYEeefQ6YhjiYj2A" name="suffix">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_KgCfAKbYEeefQ6YhjiYj2A" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_KgDtIKbYEeefQ6YhjiYj2A" name="getSwitcherStrategy" method="_K0nA2KbYEeefQ6YhjiYj2A">
          <ownedComment xmi:id="_K172hqbYEeefQ6YhjiYj2A">
            <body>SwitcherStrategy getter.
	 * @return _switcher, an instance of SwitcherStrategy.</body>
          </ownedComment>
          <ownedParameter xmi:id="_KsOg4KbYEeefQ6YhjiYj2A" type="_KkjLkKbYEeefQ6YhjiYj2A" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_KgHXgKbYEeefQ6YhjiYj2A" name="fixName" visibility="private" method="_K0nn4qbYEeefQ6YhjiYj2A">
          <ownedComment xmi:id="_K172iKbYEeefQ6YhjiYj2A">
            <body>An helper function that make full classname based on the nickname, i.e.
	 * input &quot;Straight&quot;
	 * output &quot;strategy.StraightStrategy&quot;
	 * @param className A nickname of the full classname 
	 * @return The full classname</body>
          </ownedComment>
          <ownedParameter xmi:id="_KgHXgabYEeefQ6YhjiYj2A" name="className">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_KgH-kKbYEeefQ6YhjiYj2A" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_KsCToKbYEeefQ6YhjiYj2A" name="BallModel" method="_K0j9gKbYEeefQ6YhjiYj2A">
          <eAnnotations xmi:id="_KsCToqbYEeefQ6YhjiYj2A" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_KsCTo6bYEeefQ6YhjiYj2A" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_K17PdKbYEeefQ6YhjiYj2A">
            <body>Constructor of BallModel 
	 * @param model2ViewAdpt adapter that enables the model to talk to the view.
	 * i.e., enable the model to call view's methods.</body>
          </ownedComment>
          <ownedParameter xmi:id="_KsCToabYEeefQ6YhjiYj2A" name="model2ViewAdpt" type="_KgaScKbYEeefQ6YhjiYj2A"/>
          <ownedParameter xmi:id="_KsC6sKbYEeefQ6YhjiYj2A" type="_KfwLIKbYEeefQ6YhjiYj2A" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_KsF-AabYEeefQ6YhjiYj2A" name="makeBall" method="_K0lLpqbYEeefQ6YhjiYj2A">
          <ownedComment xmi:id="_K172gKbYEeefQ6YhjiYj2A">
            <body>The following method create a ball object which behaves following strategy.
	 * @param strategy strategy of ball to make
	 * @param paintStrategy The paint strategy that ball takes.</body>
          </ownedComment>
          <ownedParameter xmi:id="_KsGlEKbYEeefQ6YhjiYj2A" name="strategy" type="_Kgt0cKbYEeefQ6YhjiYj2A"/>
          <ownedParameter xmi:id="_KsGlEabYEeefQ6YhjiYj2A" name="paintStrategy" type="_KgdVwKbYEeefQ6YhjiYj2A"/>
        </ownedOperation>
        <ownedOperation xmi:id="_KsKPcabYEeefQ6YhjiYj2A" name="combineStrategyFacs" method="_K0nA0KbYEeefQ6YhjiYj2A">
          <ownedComment xmi:id="_K172habYEeefQ6YhjiYj2A">
            <body>REturns an IStrategyFac that can instantiate a MultiStrategy with the two
	 * strategies made by the two given IStrategyFac objects. Returns null if
	 * either supplied factory is null. 
	 * The toString() of the returned factory is the toString()'s of the given strategy factories 
	 * concatenated with a&quot;_&quot;. If either factory is null, then a factory for a beeping error strategy is returned.
	 * 
	 * @param stratFac1 An IStrategyFac for a strategy
	 * @param stratFac2 An IStrategyFac for a strategy
	 * @return An IStrategyFac for the composition of the two strategies.</body>
          </ownedComment>
          <ownedParameter xmi:id="_KsKPcqbYEeefQ6YhjiYj2A" name="stratFac1" type="_KgpjAKbYEeefQ6YhjiYj2A">
            <eAnnotations xmi:id="_KsLdkabYEeefQ6YhjiYj2A" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_KsLdkqbYEeefQ6YhjiYj2A" key="final"/>
            </eAnnotations>
          </ownedParameter>
          <ownedParameter xmi:id="_KsKPc6bYEeefQ6YhjiYj2A" name="stratFac2" type="_KgpjAKbYEeefQ6YhjiYj2A">
            <eAnnotations xmi:id="_KsMrsKbYEeefQ6YhjiYj2A" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_KsMrsabYEeefQ6YhjiYj2A" key="final"/>
            </eAnnotations>
          </ownedParameter>
          <ownedParameter xmi:id="_KsLdkKbYEeefQ6YhjiYj2A" type="_KgpjAKbYEeefQ6YhjiYj2A" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_KsOg4abYEeefQ6YhjiYj2A" name="switchSwitcherStrategy" method="_K0nn4KbYEeefQ6YhjiYj2A">
          <ownedComment xmi:id="_K172h6bYEeefQ6YhjiYj2A">
            <body>Switch of _switcher; This method is used to modify _switcher.
	 * @param strat The strategy that _switcher actually takes.</body>
          </ownedComment>
          <ownedParameter xmi:id="_KsOg4qbYEeefQ6YhjiYj2A" name="strat" type="_Kgt0cKbYEeefQ6YhjiYj2A"/>
        </ownedOperation>
        <ownedOperation xmi:id="_KxLSUKbYEeefQ6YhjiYj2A" name="update" method="_K0kkkabYEeefQ6YhjiYj2A">
          <ownedComment xmi:id="_K17PdqbYEeefQ6YhjiYj2A">
            <body>This  method is called by the view's adapter to the model, i.e. is called by IView2ModelAdapter.paint().
	 * This method will update the sprites's painted locations by painting all the sprites onto the given Graphics object.
	 * @param g The graphics object from the view's paintComponent() call.</body>
          </ownedComment>
          <ownedParameter xmi:id="_KxLSUabYEeefQ6YhjiYj2A" name="g" type="_Kr1fUabYEeefQ6YhjiYj2A"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_KgUL0KbYEeefQ6YhjiYj2A" name="IBallCmd">
        <ownedComment xmi:id="_K172iabYEeefQ6YhjiYj2A">
          <body>Interface that represents commands sent through the dispatcher to process the balls.
@author Yuhui Tong, Haoyuan Yue
 *</body>
        </ownedComment>
        <ownedOperation xmi:id="_KsUAcKbYEeefQ6YhjiYj2A" name="apply">
          <ownedParameter xmi:id="_KsUAcabYEeefQ6YhjiYj2A" name="context" type="_Kg724KbYEeefQ6YhjiYj2A"/>
          <ownedParameter xmi:id="_KsUAcqbYEeefQ6YhjiYj2A" name="disp" type="_Kk8NIKbYEeefQ6YhjiYj2A"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_KgWoEKbYEeefQ6YhjiYj2A" name="IInteractStrategy">
        <ownedComment xmi:id="_K172iqbYEeefQ6YhjiYj2A">
          <body>Strategy that defines a directed interaction between two balls where the balls are NOT
equivalently processed
@author Yuhui Tong
 *</body>
        </ownedComment>
        <ownedAttribute xmi:id="_KgX2MKbYEeefQ6YhjiYj2A" name="NULL_STRATEGY" isLeaf="true" isStatic="true" type="_KgWoEKbYEeefQ6YhjiYj2A" isReadOnly="true" association="_K2hsYKbYEeefQ6YhjiYj2A">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_KgYdQKbYEeefQ6YhjiYj2A" value="(context, target, disp) -> {&#xA;&#x9;}"/>
        </ownedAttribute>
        <ownedOperation xmi:id="_KsWcsKbYEeefQ6YhjiYj2A" name="interact">
          <ownedParameter xmi:id="_KsWcsabYEeefQ6YhjiYj2A" name="context" type="_Kg724KbYEeefQ6YhjiYj2A"/>
          <ownedParameter xmi:id="_KsWcsqbYEeefQ6YhjiYj2A" name="target" type="_Kg724KbYEeefQ6YhjiYj2A"/>
          <ownedParameter xmi:id="_KsWcs6bYEeefQ6YhjiYj2A" name="disp" type="_Kk8NIKbYEeefQ6YhjiYj2A"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_KgaScKbYEeefQ6YhjiYj2A" name="IModel2ViewAdapter">
        <ownedComment xmi:id="_K172i6bYEeefQ6YhjiYj2A">
          <body>Interface that goes from the model to the view that enables the model to talk to the view
@author Yuhui Tong, Haoyuan Yue
@version 1.0
This interface is written based on the template provided by Dr. Steph Wong,
See https://www.clear.rice.edu/comp310/JavaResources/animation.html</body>
        </ownedComment>
        <ownedAttribute xmi:id="_KgbgkKbYEeefQ6YhjiYj2A" name="canvas" type="_Krv_wKbYEeefQ6YhjiYj2A" isReadOnly="true" association="_K2iTcabYEeefQ6YhjiYj2A"/>
        <ownedAttribute xmi:id="_KgcHoKbYEeefQ6YhjiYj2A" name="NULL_OBJECT" isLeaf="true" isStatic="true" type="_KgaScKbYEeefQ6YhjiYj2A" isReadOnly="true" association="_K2i6gabYEeefQ6YhjiYj2A">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_KgcHoabYEeefQ6YhjiYj2A" value="new IModel2ViewAdapter() {&#xA;&#x9;&#x9;public void repaint() {&#xA;&#x9;&#x9;&#x9;// nothing because this is the method of a NULL object&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;public Component getCanvas() {&#xA;&#x9;&#x9;&#x9;return null;&#xA;&#x9;&#x9;};&#xA;&#x9;}"/>
        </ownedAttribute>
        <ownedOperation xmi:id="_Kga5gKbYEeefQ6YhjiYj2A" name="repaint">
          <ownedComment xmi:id="_K172jKbYEeefQ6YhjiYj2A">
            <body>The method that tells the view to repaint</body>
          </ownedComment>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_KgdVwKbYEeefQ6YhjiYj2A" name="IPaintStrategy">
        <ownedComment xmi:id="_K172jabYEeefQ6YhjiYj2A">
          <body>Top-level interface that represents a strategy used by a Ball when
 asked to perform variant paint operations. A Ball has only one IPaintStrategy
@author Yuhui Tong, Haoyuan Yue
 *</body>
        </ownedComment>
        <ownedAttribute xmi:id="_KgfK8KbYEeefQ6YhjiYj2A" name="NULL_OBJECT" isStatic="true" type="_KgdVwKbYEeefQ6YhjiYj2A" association="_K2jhkabYEeefQ6YhjiYj2A">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_KgfyAKbYEeefQ6YhjiYj2A" value="new IPaintStrategy() {&#xA;&#xA;&#x9;&#x9;/**&#xA;&#x9;&#x9; * {@inheritDoc}&lt;br/>&#xA;&#x9;&#x9; */&#xA;&#x9;&#x9;@Override&#xA;&#x9;&#x9;public void paint(Graphics g, Ball host) {&#xA;&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;/**&#xA;&#x9;&#x9; * {@inheritDoc}&lt;br/>&#xA;&#x9;&#x9; */&#xA;&#x9;&#x9;@Override&#xA;&#x9;&#x9;public void init(Ball host) {&#xA;&#xA;&#x9;&#x9;}&#xA;&#x9;}"/>
        </ownedAttribute>
        <ownedOperation xmi:id="_KsZgAKbYEeefQ6YhjiYj2A" name="init">
          <ownedParameter xmi:id="_KsZgAabYEeefQ6YhjiYj2A" name="host" type="_Kg724KbYEeefQ6YhjiYj2A"/>
        </ownedOperation>
        <ownedOperation xmi:id="_KxNukKbYEeefQ6YhjiYj2A" name="paint">
          <ownedParameter xmi:id="_KxNukabYEeefQ6YhjiYj2A" name="g" type="_Kr1fUabYEeefQ6YhjiYj2A"/>
          <ownedParameter xmi:id="_KxNukqbYEeefQ6YhjiYj2A" name="host" type="_Kg724KbYEeefQ6YhjiYj2A"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_KgjcYKbYEeefQ6YhjiYj2A" name="IPaintStrategyFac">
        <ownedComment xmi:id="_K18dkKbYEeefQ6YhjiYj2A">
          <body>An interface that defines a factory that instantiate a specific IPaintStrategy.
@author Yuhui Tong, Haoyuan Yue
@version 1.0</body>
        </ownedComment>
        <ownedOperation xmi:id="_KgkDcKbYEeefQ6YhjiYj2A" name="make">
          <ownedComment xmi:id="_K18dkabYEeefQ6YhjiYj2A">
            <body>Instantiate the specific IPaintStrategy for which this factory is defined.
	 * @return An IPaintStrategy instance.</body>
          </ownedComment>
          <ownedParameter xmi:id="_KsaHEKbYEeefQ6YhjiYj2A" type="_KgdVwKbYEeefQ6YhjiYj2A" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_KglRkKbYEeefQ6YhjiYj2A" name="IShapeFactory">
        <ownedComment xmi:id="_K18dkqbYEeefQ6YhjiYj2A">
          <body>Abstract factory that creates a Shape for use as prototype shapes in IPaintStrategy. 
The location of the center of the shape and the x and y scales can be specified.
@author Yuhui Tong
 *</body>
        </ownedComment>
        <ownedOperation xmi:id="_Kgnt0KbYEeefQ6YhjiYj2A" name="makeShape">
          <ownedParameter xmi:id="_KgoU4KbYEeefQ6YhjiYj2A" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_KgoU4abYEeefQ6YhjiYj2A" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_KgoU4qbYEeefQ6YhjiYj2A" name="xScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_KgoU46bYEeefQ6YhjiYj2A" name="yScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_KxOVoKbYEeefQ6YhjiYj2A" type="_KsauIKbYEeefQ6YhjiYj2A" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_KgpjAKbYEeefQ6YhjiYj2A" name="IStrategyFac">
        <ownedComment xmi:id="_K18dk6bYEeefQ6YhjiYj2A">
          <body>An interface that defines a factory that instantiates
a specific IUpdateStrategy
@author Yuhui Tong, Haoyuan Yue
@version 1.0</body>
        </ownedComment>
        <ownedOperation xmi:id="_KgrYMabYEeefQ6YhjiYj2A" name="make">
          <ownedComment xmi:id="_K18dlKbYEeefQ6YhjiYj2A">
            <body>Instantiate the specific IUpdateStrategy for which this factory is defined.
	 * @return An IUpdateStrategy instance.</body>
          </ownedComment>
          <ownedParameter xmi:id="_Ksb8QKbYEeefQ6YhjiYj2A" type="_Kgt0cKbYEeefQ6YhjiYj2A" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_Kgt0cKbYEeefQ6YhjiYj2A" name="IUpdateStrategy">
        <ownedComment xmi:id="_K18dlabYEeefQ6YhjiYj2A">
          <body>The Interface for Strategy that a ball takes.
@author Yuhui Tong, Haoyuan Yue
@version 1.0</body>
        </ownedComment>
        <ownedOperation xmi:id="_KscjUKbYEeefQ6YhjiYj2A" name="init">
          <ownedParameter xmi:id="_KsdKYKbYEeefQ6YhjiYj2A" name="context" type="_Kg724KbYEeefQ6YhjiYj2A"/>
        </ownedOperation>
        <ownedOperation xmi:id="_KsdxcKbYEeefQ6YhjiYj2A" name="updateState">
          <ownedParameter xmi:id="_KsdxcabYEeefQ6YhjiYj2A" name="context" type="_Kg724KbYEeefQ6YhjiYj2A"/>
          <ownedParameter xmi:id="_KsdxcqbYEeefQ6YhjiYj2A" name="disp" type="_Kk8NIKbYEeefQ6YhjiYj2A"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_Kgw3wKbYEeefQ6YhjiYj2A" name="MultiInteractStrategy">
        <ownedComment xmi:id="_K18dlqbYEeefQ6YhjiYj2A">
          <body>Merge two interactStrategies to one.
@author Yuhui Tong
@version 1.0</body>
        </ownedComment>
        <ownedAttribute xmi:id="_KzBFYKbYEeefQ6YhjiYj2A" name="is1" visibility="private" type="_KgWoEKbYEeefQ6YhjiYj2A" association="_K2tSkabYEeefQ6YhjiYj2A"/>
        <ownedAttribute xmi:id="_KzBscabYEeefQ6YhjiYj2A" name="is2" visibility="private" type="_KgWoEKbYEeefQ6YhjiYj2A" association="_K2ugsKbYEeefQ6YhjiYj2A"/>
        <interfaceRealization xmi:id="_Kssa8KbYEeefQ6YhjiYj2A" client="_Kgw3wKbYEeefQ6YhjiYj2A" supplier="_KgWoEKbYEeefQ6YhjiYj2A" contract="_KgWoEKbYEeefQ6YhjiYj2A"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K0oO8KbYEeefQ6YhjiYj2A" name="MultiInteractStrategy" specification="_KstpEKbYEeefQ6YhjiYj2A">
          <ownedParameter xmi:id="_K0oO8abYEeefQ6YhjiYj2A" name="is1" type="_KgWoEKbYEeefQ6YhjiYj2A"/>
          <ownedParameter xmi:id="_K0oO8qbYEeefQ6YhjiYj2A" name="is2" type="_KgWoEKbYEeefQ6YhjiYj2A"/>
          <ownedParameter xmi:id="_K0oO86bYEeefQ6YhjiYj2A" type="_Kgw3wKbYEeefQ6YhjiYj2A" direction="return">
            <name xsi:nil="true"/>
          </ownedParameter>
          <language>java</language>
          <body>this.is1 = is1;
		this.is2 = is2;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K0o2AKbYEeefQ6YhjiYj2A" name="interact" specification="_KswFUKbYEeefQ6YhjiYj2A">
          <ownedParameter xmi:id="_K0o2AabYEeefQ6YhjiYj2A" name="context" type="_Kg724KbYEeefQ6YhjiYj2A"/>
          <ownedParameter xmi:id="_K0o2AqbYEeefQ6YhjiYj2A" name="target" type="_Kg724KbYEeefQ6YhjiYj2A"/>
          <ownedParameter xmi:id="_K0o2A6bYEeefQ6YhjiYj2A" name="disp" type="_Kk8NIKbYEeefQ6YhjiYj2A"/>
          <language>java</language>
          <body>is1.interact(context, target, disp);
		is2.interact(context, target, disp);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_KstpEKbYEeefQ6YhjiYj2A" name="MultiInteractStrategy" method="_K0oO8KbYEeefQ6YhjiYj2A">
          <eAnnotations xmi:id="_KsveQKbYEeefQ6YhjiYj2A" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_KsveQabYEeefQ6YhjiYj2A" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_K18dl6bYEeefQ6YhjiYj2A">
            <body>constructor 
	 * @param is1 first interactStrategy
	 * @param is2 second interactStrategy</body>
          </ownedComment>
          <ownedParameter xmi:id="_KsuQIKbYEeefQ6YhjiYj2A" name="is1" type="_KgWoEKbYEeefQ6YhjiYj2A"/>
          <ownedParameter xmi:id="_KsuQIabYEeefQ6YhjiYj2A" name="is2" type="_KgWoEKbYEeefQ6YhjiYj2A"/>
          <ownedParameter xmi:id="_KsveQqbYEeefQ6YhjiYj2A" type="_Kgw3wKbYEeefQ6YhjiYj2A" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_KswFUKbYEeefQ6YhjiYj2A" name="interact" method="_K0o2AKbYEeefQ6YhjiYj2A">
          <ownedParameter xmi:id="_KswFUabYEeefQ6YhjiYj2A" name="context" type="_Kg724KbYEeefQ6YhjiYj2A"/>
          <ownedParameter xmi:id="_KswsYKbYEeefQ6YhjiYj2A" name="target" type="_Kg724KbYEeefQ6YhjiYj2A"/>
          <ownedParameter xmi:id="_KswsYabYEeefQ6YhjiYj2A" name="disp" type="_Kk8NIKbYEeefQ6YhjiYj2A"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_Kg1wQKbYEeefQ6YhjiYj2A" name="MultiStrategy">
        <ownedComment xmi:id="_K18dmKbYEeefQ6YhjiYj2A">
          <body>A concrete strategy class that implements IUpdateStategy.
This strategy merges two child strategy such that a ball behaves in both manner.
@author Yuhui Tong, Haoyuan Yue
@version 1.0</body>
        </ownedComment>
        <ownedAttribute xmi:id="_KzCTgKbYEeefQ6YhjiYj2A" name="strat1" visibility="private" type="_Kgt0cKbYEeefQ6YhjiYj2A" association="_K2vHwKbYEeefQ6YhjiYj2A"/>
        <ownedAttribute xmi:id="_KzDhoKbYEeefQ6YhjiYj2A" name="strat2" visibility="private" type="_Kgt0cKbYEeefQ6YhjiYj2A" association="_K2vu0abYEeefQ6YhjiYj2A"/>
        <interfaceRealization xmi:id="_Ks0WwKbYEeefQ6YhjiYj2A" client="_Kg1wQKbYEeefQ6YhjiYj2A" supplier="_Kgt0cKbYEeefQ6YhjiYj2A" contract="_Kgt0cKbYEeefQ6YhjiYj2A"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K0qrMKbYEeefQ6YhjiYj2A" name="MultiStrategy" specification="_Ks2L8KbYEeefQ6YhjiYj2A">
          <ownedParameter xmi:id="_K0qrMabYEeefQ6YhjiYj2A" name="strat1" type="_Kgt0cKbYEeefQ6YhjiYj2A"/>
          <ownedParameter xmi:id="_K0qrMqbYEeefQ6YhjiYj2A" name="strat2" type="_Kgt0cKbYEeefQ6YhjiYj2A"/>
          <ownedParameter xmi:id="_K0qrM6bYEeefQ6YhjiYj2A" type="_Kg1wQKbYEeefQ6YhjiYj2A" direction="return">
            <name xsi:nil="true"/>
          </ownedParameter>
          <language>java</language>
          <body>this.strat1 = strat1;
		this.strat2 = strat2;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K0rSQKbYEeefQ6YhjiYj2A" name="updateState" specification="_Ks5PQKbYEeefQ6YhjiYj2A">
          <ownedParameter xmi:id="_K0rSQabYEeefQ6YhjiYj2A" name="context" type="_Kg724KbYEeefQ6YhjiYj2A"/>
          <ownedParameter xmi:id="_K0rSQqbYEeefQ6YhjiYj2A" name="disp" type="_Kk8NIKbYEeefQ6YhjiYj2A"/>
          <language>java</language>
          <body>strat1.updateState(context, disp);
		strat2.updateState(context, disp);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K0rSQ6bYEeefQ6YhjiYj2A" name="init" specification="_Ks7rgqbYEeefQ6YhjiYj2A">
          <ownedParameter xmi:id="_K0rSRKbYEeefQ6YhjiYj2A" name="context" type="_Kg724KbYEeefQ6YhjiYj2A"/>
          <language>java</language>
          <body>strat1.init(context);
		strat2.init(context);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_Ks2L8KbYEeefQ6YhjiYj2A" name="MultiStrategy" method="_K0qrMKbYEeefQ6YhjiYj2A">
          <eAnnotations xmi:id="_Ks2zAKbYEeefQ6YhjiYj2A" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_Ks2zAabYEeefQ6YhjiYj2A" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_K18dmabYEeefQ6YhjiYj2A">
            <body>Constructor of MultiStrategy.
	 * @param strat1 The first child strategy to merge with.
	 * @param strat2 The second child strategy to merge with.</body>
          </ownedComment>
          <ownedParameter xmi:id="_Ks2L8abYEeefQ6YhjiYj2A" name="strat1" type="_Kgt0cKbYEeefQ6YhjiYj2A"/>
          <ownedParameter xmi:id="_Ks2L8qbYEeefQ6YhjiYj2A" name="strat2" type="_Kgt0cKbYEeefQ6YhjiYj2A"/>
          <ownedParameter xmi:id="_Ks2zAqbYEeefQ6YhjiYj2A" type="_Kg1wQKbYEeefQ6YhjiYj2A" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_Ks5PQKbYEeefQ6YhjiYj2A" name="updateState" method="_K0rSQKbYEeefQ6YhjiYj2A">
          <ownedParameter xmi:id="_Ks5PQabYEeefQ6YhjiYj2A" name="context" type="_Kg724KbYEeefQ6YhjiYj2A"/>
          <ownedParameter xmi:id="_Ks5PQqbYEeefQ6YhjiYj2A" name="disp" type="_Kk8NIKbYEeefQ6YhjiYj2A"/>
        </ownedOperation>
        <ownedOperation xmi:id="_Ks7rgqbYEeefQ6YhjiYj2A" name="init" method="_K0rSQ6bYEeefQ6YhjiYj2A">
          <ownedParameter xmi:id="_Ks7rg6bYEeefQ6YhjiYj2A" name="context" type="_Kg724KbYEeefQ6YhjiYj2A"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_K2hsYKbYEeefQ6YhjiYj2A" name="" memberEnd="_K2hsYabYEeefQ6YhjiYj2A _KgX2MKbYEeefQ6YhjiYj2A">
        <ownedEnd xmi:id="_K2hsYabYEeefQ6YhjiYj2A" name="" type="_KgWoEKbYEeefQ6YhjiYj2A" association="_K2hsYKbYEeefQ6YhjiYj2A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_K2iTcabYEeefQ6YhjiYj2A" name="" memberEnd="_K2iTcqbYEeefQ6YhjiYj2A _KgbgkKbYEeefQ6YhjiYj2A">
        <ownedEnd xmi:id="_K2iTcqbYEeefQ6YhjiYj2A" name="" type="_KgaScKbYEeefQ6YhjiYj2A" association="_K2iTcabYEeefQ6YhjiYj2A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_K2i6gabYEeefQ6YhjiYj2A" name="" memberEnd="_K2i6gqbYEeefQ6YhjiYj2A _KgcHoKbYEeefQ6YhjiYj2A">
        <ownedEnd xmi:id="_K2i6gqbYEeefQ6YhjiYj2A" name="" type="_KgaScKbYEeefQ6YhjiYj2A" association="_K2i6gabYEeefQ6YhjiYj2A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_K2jhkabYEeefQ6YhjiYj2A" name="" memberEnd="_K2jhkqbYEeefQ6YhjiYj2A _KgfK8KbYEeefQ6YhjiYj2A">
        <ownedEnd xmi:id="_K2jhkqbYEeefQ6YhjiYj2A" name="" type="_KgdVwKbYEeefQ6YhjiYj2A" association="_K2jhkabYEeefQ6YhjiYj2A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_K2mk4abYEeefQ6YhjiYj2A" name="" memberEnd="_K2mk4qbYEeefQ6YhjiYj2A _Ky2GQKbYEeefQ6YhjiYj2A">
        <ownedEnd xmi:id="_K2mk4qbYEeefQ6YhjiYj2A" name="" type="_KfwLIKbYEeefQ6YhjiYj2A" association="_K2mk4abYEeefQ6YhjiYj2A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_K2nzAabYEeefQ6YhjiYj2A" name="" memberEnd="_K2nzAqbYEeefQ6YhjiYj2A _Ky37cKbYEeefQ6YhjiYj2A">
        <ownedEnd xmi:id="_K2nzAqbYEeefQ6YhjiYj2A" name="" type="_KfwLIKbYEeefQ6YhjiYj2A" association="_K2nzAabYEeefQ6YhjiYj2A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_K2poMabYEeefQ6YhjiYj2A" name="" memberEnd="_K2poMqbYEeefQ6YhjiYj2A _Ky5JkKbYEeefQ6YhjiYj2A">
        <ownedEnd xmi:id="_K2poMqbYEeefQ6YhjiYj2A" name="" type="_KfwLIKbYEeefQ6YhjiYj2A" association="_K2poMabYEeefQ6YhjiYj2A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_K2q2UabYEeefQ6YhjiYj2A" name="" memberEnd="_K2q2UqbYEeefQ6YhjiYj2A _Ky5woKbYEeefQ6YhjiYj2A">
        <ownedEnd xmi:id="_K2q2UqbYEeefQ6YhjiYj2A" name="" type="_KfwLIKbYEeefQ6YhjiYj2A" association="_K2q2UabYEeefQ6YhjiYj2A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_K2rdYabYEeefQ6YhjiYj2A" name="" memberEnd="_K2rdYqbYEeefQ6YhjiYj2A _Ky8M4abYEeefQ6YhjiYj2A">
        <ownedEnd xmi:id="_K2rdYqbYEeefQ6YhjiYj2A" name="" type="_KfwLIKbYEeefQ6YhjiYj2A" association="_K2rdYabYEeefQ6YhjiYj2A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_K2sEcabYEeefQ6YhjiYj2A" name="" memberEnd="_K2sEcqbYEeefQ6YhjiYj2A _Ky-CEabYEeefQ6YhjiYj2A">
        <ownedEnd xmi:id="_K2sEcqbYEeefQ6YhjiYj2A" name="" type="_KfwLIKbYEeefQ6YhjiYj2A" association="_K2sEcabYEeefQ6YhjiYj2A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_K2srgabYEeefQ6YhjiYj2A" name="" memberEnd="_K2srgqbYEeefQ6YhjiYj2A _Ky_QMKbYEeefQ6YhjiYj2A">
        <ownedEnd xmi:id="_K2srgqbYEeefQ6YhjiYj2A" name="" type="_KfwLIKbYEeefQ6YhjiYj2A" association="_K2srgabYEeefQ6YhjiYj2A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_K2tSkabYEeefQ6YhjiYj2A" name="" memberEnd="_K2tSkqbYEeefQ6YhjiYj2A _KzBFYKbYEeefQ6YhjiYj2A">
        <ownedEnd xmi:id="_K2tSkqbYEeefQ6YhjiYj2A" name="" type="_Kgw3wKbYEeefQ6YhjiYj2A" association="_K2tSkabYEeefQ6YhjiYj2A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_K2ugsKbYEeefQ6YhjiYj2A" name="" memberEnd="_K2ugsabYEeefQ6YhjiYj2A _KzBscabYEeefQ6YhjiYj2A">
        <ownedEnd xmi:id="_K2ugsabYEeefQ6YhjiYj2A" name="" type="_Kgw3wKbYEeefQ6YhjiYj2A" association="_K2ugsKbYEeefQ6YhjiYj2A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_K2vHwKbYEeefQ6YhjiYj2A" name="" memberEnd="_K2vHwabYEeefQ6YhjiYj2A _KzCTgKbYEeefQ6YhjiYj2A">
        <ownedEnd xmi:id="_K2vHwabYEeefQ6YhjiYj2A" name="" type="_Kg1wQKbYEeefQ6YhjiYj2A" association="_K2vHwKbYEeefQ6YhjiYj2A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_K2vu0abYEeefQ6YhjiYj2A" name="" memberEnd="_K2vu0qbYEeefQ6YhjiYj2A _KzDhoKbYEeefQ6YhjiYj2A">
        <ownedEnd xmi:id="_K2vu0qbYEeefQ6YhjiYj2A" name="" type="_Kg1wQKbYEeefQ6YhjiYj2A" association="_K2vu0abYEeefQ6YhjiYj2A"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_KYfskKbYEeefQ6YhjiYj2A" name="view">
      <packagedElement xmi:type="uml:Class" xmi:id="_KlwFcKbYEeefQ6YhjiYj2A" name="BallGUI">
        <ownedComment xmi:id="_K2FAdabYEeefQ6YhjiYj2A">
          <body>The GUI of the BallWorld project.
@author Yuhui Tong, Haoyuan Yue
@version 1.0
@param &lt;TDropListItem> A generic type which corresponds to Strategy factory on the model side.</body>
        </ownedComment>
        <generalization xmi:id="_KyikQKbYEeefQ6YhjiYj2A" general="_Kwk1YabYEeefQ6YhjiYj2A"/>
        <ownedAttribute xmi:id="_Kz85gabYEeefQ6YhjiYj2A" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_Kz9gkKbYEeefQ6YhjiYj2A" value="-8105423316749761148L"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Kz9gkabYEeefQ6YhjiYj2A" name="_view2ModelControlAdpt" visibility="private" type="_KmE1kKbYEeefQ6YhjiYj2A" association="_K3IJUKbYEeefQ6YhjiYj2A"/>
        <ownedAttribute xmi:id="_Kz-usKbYEeefQ6YhjiYj2A" name="_view2ModelPaintAdpt" visibility="private" type="_KmMxYKbYEeefQ6YhjiYj2A" association="_K3IwYabYEeefQ6YhjiYj2A">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_Kz-usabYEeefQ6YhjiYj2A" value="IView2ModelPaintAdapter.NULL_OBJECT"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Kz_VwKbYEeefQ6YhjiYj2A" name="contentPane" visibility="private" type="_KwlccabYEeefQ6YhjiYj2A" association="_K3JXcabYEeefQ6YhjiYj2A"/>
        <ownedAttribute xmi:id="_Kz_VwqbYEeefQ6YhjiYj2A" name="_pnlControl" visibility="private" type="_KwlccabYEeefQ6YhjiYj2A" association="_K3J-gabYEeefQ6YhjiYj2A"/>
        <ownedAttribute xmi:id="_Kz_80abYEeefQ6YhjiYj2A" name="_pnlAddType" visibility="private" type="_KwlccabYEeefQ6YhjiYj2A" association="_K3KlkabYEeefQ6YhjiYj2A"/>
        <ownedAttribute xmi:id="_K0Aj4abYEeefQ6YhjiYj2A" name="txtInputClass" visibility="private" type="_KwpG0KbYEeefQ6YhjiYj2A" association="_K3LMoabYEeefQ6YhjiYj2A"/>
        <ownedAttribute xmi:id="_K0Aj46bYEeefQ6YhjiYj2A" name="_pnlCanvas" visibility="private" type="_KwlccabYEeefQ6YhjiYj2A" association="_K3MawKbYEeefQ6YhjiYj2A">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_K0BK8KbYEeefQ6YhjiYj2A" value="new JPanel() {&#xA;&#x9;&#x9;/**&#xA;&#x9;&#x9; * default serial id.&#xA;&#x9;&#x9; */&#xA;&#x9;&#x9;private static final long serialVersionUID = 1L;&#xA;&#xA;&#x9;&#x9;/**&#xA;&#x9;&#x9; * Overridden paintComponent method to paint in the panel.&#xA;&#x9;&#x9; * @param g The graphics object to paint on.&#xA;&#x9;&#x9; */&#xA;&#x9;&#x9;@Override&#xA;&#x9;&#x9;public void paintComponent(Graphics g) {&#xA;&#x9;&#x9;&#x9;super.paintComponent(g); // Do everything normally done first, e.g., clear the screen.&#xA;&#x9;&#x9;&#x9;_view2ModelPaintAdpt.paint(g);// ask BallModel to update.&#xA;&#x9;&#x9;}&#xA;&#x9;}"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_K0BK8qbYEeefQ6YhjiYj2A" name="_btnAddType" visibility="private" type="_Kwpt4abYEeefQ6YhjiYj2A" association="_K3NB0KbYEeefQ6YhjiYj2A"/>
        <ownedAttribute xmi:id="_K0CZEKbYEeefQ6YhjiYj2A" name="_pnlImplement" visibility="private" type="_KwlccabYEeefQ6YhjiYj2A" association="_K3No4abYEeefQ6YhjiYj2A"/>
        <ownedAttribute xmi:id="_K0CZEqbYEeefQ6YhjiYj2A" name="btnMakeBall" visibility="private" type="_Kwpt4abYEeefQ6YhjiYj2A" association="_K3OP8abYEeefQ6YhjiYj2A"/>
        <ownedAttribute xmi:id="_K0DAIabYEeefQ6YhjiYj2A" name="_list1DL" visibility="private" type="_KwrjEKbYEeefQ6YhjiYj2A" association="_K3O3AabYEeefQ6YhjiYj2A"/>
        <ownedAttribute xmi:id="_K0EOQabYEeefQ6YhjiYj2A" name="_list2DL" visibility="private" type="_KwrjEKbYEeefQ6YhjiYj2A" association="_K3QFIKbYEeefQ6YhjiYj2A"/>
        <ownedAttribute xmi:id="_K0FcYabYEeefQ6YhjiYj2A" name="_btnCombineStrategy" visibility="private" type="_Kwpt4abYEeefQ6YhjiYj2A" association="_K3QsMabYEeefQ6YhjiYj2A"/>
        <ownedAttribute xmi:id="_K0GDcKbYEeefQ6YhjiYj2A" name="_pnlSwitcher" visibility="private" type="_KwlccabYEeefQ6YhjiYj2A" association="_K3RTQabYEeefQ6YhjiYj2A"/>
        <ownedAttribute xmi:id="_K0GqgKbYEeefQ6YhjiYj2A" name="_btnMakeSwitcher" visibility="private" type="_Kwpt4abYEeefQ6YhjiYj2A" association="_K3R6UabYEeefQ6YhjiYj2A"/>
        <ownedAttribute xmi:id="_K0GqgqbYEeefQ6YhjiYj2A" name="_btnSwitch" visibility="private" type="_Kwpt4abYEeefQ6YhjiYj2A" association="_K3TIcKbYEeefQ6YhjiYj2A"/>
        <ownedAttribute xmi:id="_K0HRkabYEeefQ6YhjiYj2A" name="_btnClear" visibility="private" type="_Kwpt4abYEeefQ6YhjiYj2A" association="_K3TvgabYEeefQ6YhjiYj2A"/>
        <ownedAttribute xmi:id="_K0IfsabYEeefQ6YhjiYj2A" name="_pnlClear" visibility="private" type="_KwlccabYEeefQ6YhjiYj2A" association="_K3UWkabYEeefQ6YhjiYj2A"/>
        <ownedAttribute xmi:id="_K0JGwabYEeefQ6YhjiYj2A" name="_pnlPaintStrategy" visibility="private" type="_KwlccabYEeefQ6YhjiYj2A" association="_K3U9oabYEeefQ6YhjiYj2A"/>
        <ownedAttribute xmi:id="_K0Jt0abYEeefQ6YhjiYj2A" name="_btnAddPaintStrategy" visibility="private" type="_Kwpt4abYEeefQ6YhjiYj2A" association="_K3VksabYEeefQ6YhjiYj2A"/>
        <ownedAttribute xmi:id="_K0KU4abYEeefQ6YhjiYj2A" name="txtPaintStrategyName" visibility="private" type="_KwpG0KbYEeefQ6YhjiYj2A" association="_K3Wy0KbYEeefQ6YhjiYj2A"/>
        <ownedAttribute xmi:id="_K0K78abYEeefQ6YhjiYj2A" name="_listPSDL" visibility="private" type="_KwrjEKbYEeefQ6YhjiYj2A" association="_K3XZ4abYEeefQ6YhjiYj2A"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K1z6sKbYEeefQ6YhjiYj2A" name="BallGUI" specification="_Kwv0gKbYEeefQ6YhjiYj2A">
          <ownedParameter xmi:id="_K1z6sabYEeefQ6YhjiYj2A" name="_view2ModelControlAdpt" type="_KmE1kKbYEeefQ6YhjiYj2A"/>
          <ownedParameter xmi:id="_K1z6sqbYEeefQ6YhjiYj2A" name="iVew2ModelPaintAdapter" type="_KmMxYKbYEeefQ6YhjiYj2A"/>
          <ownedParameter xmi:id="_K1z6s6bYEeefQ6YhjiYj2A" type="_KlwFcKbYEeefQ6YhjiYj2A" direction="return"/>
          <language>java</language>
          <body>this._view2ModelControlAdpt = _view2ModelControlAdpt;
		this._view2ModelPaintAdpt = iVew2ModelPaintAdapter;
		initGUI();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K1z6tKbYEeefQ6YhjiYj2A" name="initGUI" specification="_Kl1lAKbYEeefQ6YhjiYj2A">
          <language>java</language>
          <body>setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 800, 600);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		contentPane.setLayout(new BorderLayout(0, 0));
		setContentPane(contentPane);

		_pnlControl = new JPanel();
		_pnlControl.setToolTipText(&quot;Control Panel&quot;);
		_pnlControl.setBackground(new Color(30, 144, 255));
		contentPane.add(_pnlControl, BorderLayout.NORTH);

		// subpanel 1
		_pnlAddType = new JPanel();
		_pnlControl.add(_pnlAddType);
		_pnlAddType.setLayout(new GridLayout(2, 1, 0, 0));
		// _pnlAddType.setBackground(Color.GRAY);

		txtInputClass = new JTextField();
		txtInputClass.setFont(new Font(&quot;Lucida Grande&quot;, Font.PLAIN, 13));
		txtInputClass.setToolTipText(&quot;Input a strategy name&quot;);
		txtInputClass.setText(&quot;Straight&quot;);
		_pnlAddType.add(txtInputClass);
		txtInputClass.setColumns(4);

		_btnAddType = new JButton(&quot;Add to lists&quot;); // add ball type
		_btnAddType.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				TDropListItem o = _view2ModelControlAdpt.addStrategy(txtInputClass.getText());
				if (o == null)
					return; // just in case;

				System.out.println(&quot;New ball type: &quot; + txtInputClass.getText() + &quot; is added!&quot;);
				_list1DL.insertItemAt(o, 0);
				_list2DL.insertItemAt(o, 0);
			}
		});
		_btnAddType.setFont(new Font(&quot;Lucida Grande&quot;, Font.PLAIN, 13));
		_btnAddType.setForeground(Color.BLACK);
		_btnAddType.setBackground(Color.WHITE);
		_btnAddType.setToolTipText(&quot;Click to add the above strategy type to list.&quot;);
		_pnlAddType.add(_btnAddType);

		// subpanel 2
		_pnlImplement = new JPanel();
		_pnlControl.add(_pnlImplement);
		_pnlImplement.setLayout(new GridLayout(4, 1, 0, 0));

		btnMakeBall = new JButton(&quot;Make Selected Balls&quot;); // make ball
		btnMakeBall.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				_view2ModelControlAdpt.loadBall(_list1DL.getItemAt(_list1DL.getSelectedIndex()),
						_listPSDL.getItemAt(_listPSDL.getSelectedIndex()));
				System.out.println(&quot;A new ball is loaded!&quot;);
			}
		});
		btnMakeBall.setFont(new Font(&quot;Lucida Grande&quot;, Font.PLAIN, 13));
		btnMakeBall.setToolTipText(&quot;Click to load an selected ball&quot;);
		_pnlImplement.add(btnMakeBall);

		_list1DL = new JComboBox&lt;TDropListItem>();
		_list1DL.setToolTipText(
				&quot;The top drop list to select what strategy to use in a new ball and to switch the switcher to.&quot;);
		_pnlImplement.add(_list1DL);

		_list2DL = new JComboBox&lt;TDropListItem>();
		_list2DL.setToolTipText(&quot;Bottom drop list, used for combining with the top list selection.&quot;);
		_pnlImplement.add(_list2DL);

		_btnCombineStrategy = new JButton(&quot;Combine!&quot;);
		_btnCombineStrategy.setToolTipText(&quot;Click to combine the Strategy&quot;);
		_btnCombineStrategy.setFont(new Font(&quot;Lucida Grande&quot;, Font.PLAIN, 13));
		_btnCombineStrategy.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				// do nothing if either dropbox is not selected
				if (_list1DL.getSelectedIndex() == -1 || _list2DL.getSelectedIndex() == -1)
					return;
				TDropListItem o = _view2ModelControlAdpt.combineStrategies(
						_list1DL.getItemAt(_list1DL.getSelectedIndex()),
						_list2DL.getItemAt(_list2DL.getSelectedIndex()));
				_list1DL.insertItemAt(o, 0);
				_list2DL.insertItemAt(o, 0);
			}
		});
		_pnlImplement.add(_btnCombineStrategy);

		// subpanel 3
		_pnlSwitcher = new JPanel();
		_pnlSwitcher.setBorder(
				new TitledBorder(null, &quot;Switcher Controls&quot;, TitledBorder.CENTER, TitledBorder.TOP, null, null));
		_pnlControl.add(_pnlSwitcher);
		_pnlSwitcher.setLayout(new GridLayout(2, 1, 0, 0));

		_btnMakeSwitcher = new JButton(&quot;Make Switcher&quot;); // make switcher
		_btnMakeSwitcher.setToolTipText(&quot;Click to make a Switcher Ball&quot;);
		_btnMakeSwitcher.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				_view2ModelControlAdpt.makeSwitcherBall(_listPSDL.getItemAt(_listPSDL.getSelectedIndex()));
			}
		});

		_btnMakeSwitcher.setFont(new Font(&quot;Lucida Grande&quot;, Font.PLAIN, 13));
		_pnlSwitcher.add(_btnMakeSwitcher);

		_btnSwitch = new JButton(&quot;Switch!&quot;); // switch switcher's strategy
		_btnSwitch.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				_view2ModelControlAdpt.switchStrategy(_list1DL.getItemAt(_list1DL.getSelectedIndex()));
			}
		});
		_btnSwitch.setFont(new Font(&quot;Lucida Grande&quot;, Font.PLAIN, 13));
		_btnSwitch.setToolTipText(
				&quot;Click to swap the strategy of switcher balls into the strategy in the upper-left droplist&quot;);
		_pnlSwitcher.add(_btnSwitch);

		// subpanel 4
		_pnlClear = new JPanel();
		_pnlControl.add(_pnlClear);
		_pnlClear.setLayout(new GridLayout(1, 1, 0, 0));

		_btnClear = new JButton(&quot;Clear All!&quot;);
		_btnClear.setToolTipText(&quot;Clear all the ball on canvas&quot;);
		_btnClear.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				_view2ModelControlAdpt.clearBalls();
			}
		});
		_pnlClear.add(_btnClear);

		// subpanel 5 paint strategy
		_pnlPaintStrategy = new JPanel();
		_pnlPaintStrategy.setBorder(new TitledBorder(new EtchedBorder(EtchedBorder.LOWERED, null, null),
				&quot;Paint Strategy&quot;, TitledBorder.CENTER, TitledBorder.TOP, null, new Color(0, 0, 0)));
		_pnlControl.add(_pnlPaintStrategy);
		_pnlPaintStrategy.setLayout(new GridLayout(3, 1, 0, 0));

		txtPaintStrategyName = new JTextField();
		txtPaintStrategyName.setText(&quot;Ellipse&quot;);
		txtPaintStrategyName.setToolTipText(&quot;Input a paint strategy name here!&quot;);
		_pnlPaintStrategy.add(txtPaintStrategyName);
		txtPaintStrategyName.setColumns(10);

		_btnAddPaintStrategy = new JButton(&quot;Add&quot;); // add Paint Strategy
		_btnAddPaintStrategy.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				TPSDropListItem o = _view2ModelControlAdpt.addPaintStrategy(txtPaintStrategyName.getText());
				if (o != null) {
					System.out
							.println(&quot;A new paint strategy: &quot; + txtPaintStrategyName.getText() + &quot; strategy is added!&quot;);
				}
				if (o == null) {
					System.out.println(txtPaintStrategyName.getText() + &quot;PaintStrategy fails to be added;&quot;);
				}
				_listPSDL.insertItemAt(o, 0);
			}
		});
		_btnAddPaintStrategy.setToolTipText(&quot;Add a paint strategy&quot;);
		_pnlPaintStrategy.add(_btnAddPaintStrategy);

		_listPSDL = new JComboBox&lt;TPSDropListItem>();
		_listPSDL.setToolTipText(&quot;Select a paint strategy!&quot;);
		_pnlPaintStrategy.add(_listPSDL);

		// canvas that balls are painted on
		_pnlCanvas.setBackground(Color.LIGHT_GRAY);
		contentPane.add(_pnlCanvas, BorderLayout.CENTER);
		_pnlCanvas.setToolTipText(&quot;Drawing Canvas for ball display&quot;);

	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K10hwKbYEeefQ6YhjiYj2A" name="start" specification="_Kl2MEKbYEeefQ6YhjiYj2A">
          <language>java</language>
          <body>this.setVisible(true);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K10hwabYEeefQ6YhjiYj2A" name="getCanvas" specification="_Kl2zIKbYEeefQ6YhjiYj2A">
          <ownedParameter xmi:id="_K10hwqbYEeefQ6YhjiYj2A" type="_Krv_wKbYEeefQ6YhjiYj2A" direction="return"/>
          <language>java</language>
          <body>return _pnlCanvas;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K10hw6bYEeefQ6YhjiYj2A" name="repaint" specification="_Kl3aMKbYEeefQ6YhjiYj2A">
          <language>java</language>
          <body>_pnlCanvas.repaint();
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_Kl1lAKbYEeefQ6YhjiYj2A" name="initGUI" visibility="private" method="_K1z6tKbYEeefQ6YhjiYj2A">
          <ownedComment xmi:id="_K2FngabYEeefQ6YhjiYj2A">
            <body> A method determines how GUI works.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_Kl2MEKbYEeefQ6YhjiYj2A" name="start" method="_K10hwKbYEeefQ6YhjiYj2A">
          <ownedComment xmi:id="_K2FngqbYEeefQ6YhjiYj2A">
            <body>start the frame</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_Kl2zIKbYEeefQ6YhjiYj2A" name="getCanvas" method="_K10hwabYEeefQ6YhjiYj2A">
          <ownedComment xmi:id="_K2Fng6bYEeefQ6YhjiYj2A">
            <body>Get the component of the canvas/panel
	 * @return the component of the canvas/panel</body>
          </ownedComment>
          <ownedParameter xmi:id="_Kyh9MKbYEeefQ6YhjiYj2A" type="_Krv_wKbYEeefQ6YhjiYj2A" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_Kl3aMKbYEeefQ6YhjiYj2A" name="repaint" method="_K10hw6bYEeefQ6YhjiYj2A">
          <ownedComment xmi:id="_K2FnhKbYEeefQ6YhjiYj2A">
            <body>Updates the view by repainting the canvas.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_Kwv0gKbYEeefQ6YhjiYj2A" name="BallGUI" method="_K1z6sKbYEeefQ6YhjiYj2A">
          <eAnnotations xmi:id="_Kwv0g6bYEeefQ6YhjiYj2A" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_Kwv0hKbYEeefQ6YhjiYj2A" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_K2FngKbYEeefQ6YhjiYj2A">
            <body>Constructor of BallGUI
	 * @param _view2ModelControlAdpt The adapter that allows view to talk to model on controlling issues.
	 * @param iVew2ModelPaintAdapter The adapter that allows view to talk to model on painting issues.</body>
          </ownedComment>
          <ownedParameter xmi:id="_Kwv0gabYEeefQ6YhjiYj2A" name="_view2ModelControlAdpt" type="_KmE1kKbYEeefQ6YhjiYj2A"/>
          <ownedParameter xmi:id="_Kwv0gqbYEeefQ6YhjiYj2A" name="iVew2ModelPaintAdapter" type="_KmMxYKbYEeefQ6YhjiYj2A"/>
          <ownedParameter xmi:id="_Kwv0habYEeefQ6YhjiYj2A" type="_KlwFcKbYEeefQ6YhjiYj2A" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_KmE1kKbYEeefQ6YhjiYj2A" name="IView2ModelControlAdapter">
        <ownedComment xmi:id="_K2FnhabYEeefQ6YhjiYj2A">
          <body>The adapter that allows view to talk to model on controlling issues.
@author Yuhui Tong, Haoyuan Yue
@version 1.0
@param &lt;TDropListItem> The type of items in JComboBox (droplist).</body>
        </ownedComment>
        <ownedOperation xmi:id="_KmHR0KbYEeefQ6YhjiYj2A" name="addStrategy">
          <ownedComment xmi:id="_K2Fnh6bYEeefQ6YhjiYj2A">
            <body>Add a selectedItem (containing the corresponding strategy factory) to droplist
	 * @param classname The classname of ball type to be loaded
	 * @return An strategy factory to be added to the drop list.</body>
          </ownedComment>
          <ownedParameter xmi:id="_KmHR0abYEeefQ6YhjiYj2A" name="classname">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_KyncwKbYEeefQ6YhjiYj2A" type="_KylAgKbYEeefQ6YhjiYj2A" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_KmIf8KbYEeefQ6YhjiYj2A" name="addPaintStrategy">
          <ownedComment xmi:id="_K2FniabYEeefQ6YhjiYj2A">
            <body>Add anew paintStrategy to the droplist.
	 * @param PaintStrategyName The shortened name of paintStrategy to be added
	 * @return The paint strategy factory for that paint strategy.</body>
          </ownedComment>
          <ownedParameter xmi:id="_KmIf8abYEeefQ6YhjiYj2A" name="PaintStrategyName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_KypR8KbYEeefQ6YhjiYj2A" type="_KylnkabYEeefQ6YhjiYj2A" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_KmJHAKbYEeefQ6YhjiYj2A" name="clearBalls">
          <ownedComment xmi:id="_K2GOkKbYEeefQ6YhjiYj2A">
            <body>This method tells the model to remove all the balls.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_Kym1sKbYEeefQ6YhjiYj2A" name="loadBall">
          <ownedComment xmi:id="_K2FnhqbYEeefQ6YhjiYj2A">
            <body>This method tells model to load a ball.
	 * @param selectedItem Selected strategy factory of the strategy type that ball uses
	 * @param selectedPSItem Seleteted Paint Strategy Factory of the paint strategy type that ball uses.</body>
          </ownedComment>
          <ownedParameter xmi:id="_Kym1sabYEeefQ6YhjiYj2A" name="selectedItem" type="_KylAgKbYEeefQ6YhjiYj2A"/>
          <ownedParameter xmi:id="_Kym1sqbYEeefQ6YhjiYj2A" name="selectedPSItem" type="_KylnkabYEeefQ6YhjiYj2A"/>
        </ownedOperation>
        <ownedOperation xmi:id="_KyoD0KbYEeefQ6YhjiYj2A" name="combineStrategies">
          <ownedComment xmi:id="_K2FniKbYEeefQ6YhjiYj2A">
            <body>This method combines two existing strategies and return a factory of combined strategy.
	 * @param selectedItem1 Selected strategy factory of the strategy type that ball uses
	 * @param selectedItem2 Selected strategy factory of the strategy type that ball uses.
	 * @return The factory of combined strategy.</body>
          </ownedComment>
          <ownedParameter xmi:id="_KyoD0abYEeefQ6YhjiYj2A" name="selectedItem1" type="_KylAgKbYEeefQ6YhjiYj2A"/>
          <ownedParameter xmi:id="_KyoD0qbYEeefQ6YhjiYj2A" name="selectedItem2" type="_KylAgKbYEeefQ6YhjiYj2A"/>
          <ownedParameter xmi:id="_Kyoq4KbYEeefQ6YhjiYj2A" type="_KylAgKbYEeefQ6YhjiYj2A" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_Kyp5AKbYEeefQ6YhjiYj2A" name="makeSwitcherBall">
          <ownedComment xmi:id="_K2FniqbYEeefQ6YhjiYj2A">
            <body>This method tells the model to create a SwitcherBall object.
	 * @param selectedPSItem Seleteted Paint Strategy Factory of the paint strategy type that ball uses.</body>
          </ownedComment>
          <ownedParameter xmi:id="_Kyp5AabYEeefQ6YhjiYj2A" name="selectedPSItem" type="_KylnkabYEeefQ6YhjiYj2A"/>
        </ownedOperation>
        <ownedOperation xmi:id="_KyqgEKbYEeefQ6YhjiYj2A" name="switchStrategy">
          <ownedComment xmi:id="_K2Fni6bYEeefQ6YhjiYj2A">
            <body>This method tells the model to change strategy that a switcherball is taking.
	 * @param selectedItem Selected strategy factory of the strategy type that ball uses</body>
          </ownedComment>
          <ownedParameter xmi:id="_KyqgEabYEeefQ6YhjiYj2A" name="selectedItem" type="_KylAgKbYEeefQ6YhjiYj2A"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_KmMxYKbYEeefQ6YhjiYj2A" name="IView2ModelPaintAdapter">
        <ownedComment xmi:id="_K2GOkabYEeefQ6YhjiYj2A">
          <body>The interface of the adapter from the view to the model that enables the view to talk to the model.
@author Yuhui Tong, Haoyuan Yue
@version 1.0</body>
        </ownedComment>
        <ownedAttribute xmi:id="_KmNYcKbYEeefQ6YhjiYj2A" name="NULL_OBJECT" isLeaf="true" isStatic="true" type="_KmMxYKbYEeefQ6YhjiYj2A" isReadOnly="true" association="_K2kvsKbYEeefQ6YhjiYj2A">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_KmN_gKbYEeefQ6YhjiYj2A" value="new IView2ModelPaintAdapter() {&#xA;&#xA;&#x9;&#x9;public void paint(Graphics g) {&#xA;&#xA;&#x9;&#x9;}&#xA;&#x9;}"/>
        </ownedAttribute>
        <ownedOperation xmi:id="_KyrHIKbYEeefQ6YhjiYj2A" name="paint">
          <ownedParameter xmi:id="_KyruMKbYEeefQ6YhjiYj2A" name="g" type="_Kr1fUabYEeefQ6YhjiYj2A"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_KylAgKbYEeefQ6YhjiYj2A" name="TDropListItem"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_KylnkabYEeefQ6YhjiYj2A" name="TPSDropListItem"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_K2kvsKbYEeefQ6YhjiYj2A" name="" memberEnd="_K2kvsabYEeefQ6YhjiYj2A _KmNYcKbYEeefQ6YhjiYj2A">
        <ownedEnd xmi:id="_K2kvsabYEeefQ6YhjiYj2A" name="" type="_KmMxYKbYEeefQ6YhjiYj2A" association="_K2kvsKbYEeefQ6YhjiYj2A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_K3IJUKbYEeefQ6YhjiYj2A" name="" memberEnd="_K3IJUabYEeefQ6YhjiYj2A _Kz9gkabYEeefQ6YhjiYj2A">
        <ownedEnd xmi:id="_K3IJUabYEeefQ6YhjiYj2A" name="" type="_KlwFcKbYEeefQ6YhjiYj2A" association="_K3IJUKbYEeefQ6YhjiYj2A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_K3IwYabYEeefQ6YhjiYj2A" name="" memberEnd="_K3IwYqbYEeefQ6YhjiYj2A _Kz-usKbYEeefQ6YhjiYj2A">
        <ownedEnd xmi:id="_K3IwYqbYEeefQ6YhjiYj2A" name="" type="_KlwFcKbYEeefQ6YhjiYj2A" association="_K3IwYabYEeefQ6YhjiYj2A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_K3JXcabYEeefQ6YhjiYj2A" name="" memberEnd="_K3JXcqbYEeefQ6YhjiYj2A _Kz_VwKbYEeefQ6YhjiYj2A">
        <ownedEnd xmi:id="_K3JXcqbYEeefQ6YhjiYj2A" name="" type="_KlwFcKbYEeefQ6YhjiYj2A" association="_K3JXcabYEeefQ6YhjiYj2A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_K3J-gabYEeefQ6YhjiYj2A" name="" memberEnd="_K3J-gqbYEeefQ6YhjiYj2A _Kz_VwqbYEeefQ6YhjiYj2A">
        <ownedEnd xmi:id="_K3J-gqbYEeefQ6YhjiYj2A" name="" type="_KlwFcKbYEeefQ6YhjiYj2A" association="_K3J-gabYEeefQ6YhjiYj2A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_K3KlkabYEeefQ6YhjiYj2A" name="" memberEnd="_K3KlkqbYEeefQ6YhjiYj2A _Kz_80abYEeefQ6YhjiYj2A">
        <ownedEnd xmi:id="_K3KlkqbYEeefQ6YhjiYj2A" name="" type="_KlwFcKbYEeefQ6YhjiYj2A" association="_K3KlkabYEeefQ6YhjiYj2A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_K3LMoabYEeefQ6YhjiYj2A" name="" memberEnd="_K3LMoqbYEeefQ6YhjiYj2A _K0Aj4abYEeefQ6YhjiYj2A">
        <ownedEnd xmi:id="_K3LMoqbYEeefQ6YhjiYj2A" name="" type="_KlwFcKbYEeefQ6YhjiYj2A" association="_K3LMoabYEeefQ6YhjiYj2A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_K3MawKbYEeefQ6YhjiYj2A" name="" memberEnd="_K3MawabYEeefQ6YhjiYj2A _K0Aj46bYEeefQ6YhjiYj2A">
        <ownedEnd xmi:id="_K3MawabYEeefQ6YhjiYj2A" name="" type="_KlwFcKbYEeefQ6YhjiYj2A" association="_K3MawKbYEeefQ6YhjiYj2A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_K3NB0KbYEeefQ6YhjiYj2A" name="" memberEnd="_K3NB0abYEeefQ6YhjiYj2A _K0BK8qbYEeefQ6YhjiYj2A">
        <ownedEnd xmi:id="_K3NB0abYEeefQ6YhjiYj2A" name="" type="_KlwFcKbYEeefQ6YhjiYj2A" association="_K3NB0KbYEeefQ6YhjiYj2A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_K3No4abYEeefQ6YhjiYj2A" name="" memberEnd="_K3No4qbYEeefQ6YhjiYj2A _K0CZEKbYEeefQ6YhjiYj2A">
        <ownedEnd xmi:id="_K3No4qbYEeefQ6YhjiYj2A" name="" type="_KlwFcKbYEeefQ6YhjiYj2A" association="_K3No4abYEeefQ6YhjiYj2A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_K3OP8abYEeefQ6YhjiYj2A" name="" memberEnd="_K3OP8qbYEeefQ6YhjiYj2A _K0CZEqbYEeefQ6YhjiYj2A">
        <ownedEnd xmi:id="_K3OP8qbYEeefQ6YhjiYj2A" name="" type="_KlwFcKbYEeefQ6YhjiYj2A" association="_K3OP8abYEeefQ6YhjiYj2A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_K3O3AabYEeefQ6YhjiYj2A" name="" memberEnd="_K3O3AqbYEeefQ6YhjiYj2A _K0DAIabYEeefQ6YhjiYj2A">
        <ownedEnd xmi:id="_K3O3AqbYEeefQ6YhjiYj2A" name="" type="_KlwFcKbYEeefQ6YhjiYj2A" association="_K3O3AabYEeefQ6YhjiYj2A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_K3QFIKbYEeefQ6YhjiYj2A" name="" memberEnd="_K3QFIabYEeefQ6YhjiYj2A _K0EOQabYEeefQ6YhjiYj2A">
        <ownedEnd xmi:id="_K3QFIabYEeefQ6YhjiYj2A" name="" type="_KlwFcKbYEeefQ6YhjiYj2A" association="_K3QFIKbYEeefQ6YhjiYj2A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_K3QsMabYEeefQ6YhjiYj2A" name="" memberEnd="_K3QsMqbYEeefQ6YhjiYj2A _K0FcYabYEeefQ6YhjiYj2A">
        <ownedEnd xmi:id="_K3QsMqbYEeefQ6YhjiYj2A" name="" type="_KlwFcKbYEeefQ6YhjiYj2A" association="_K3QsMabYEeefQ6YhjiYj2A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_K3RTQabYEeefQ6YhjiYj2A" name="" memberEnd="_K3RTQqbYEeefQ6YhjiYj2A _K0GDcKbYEeefQ6YhjiYj2A">
        <ownedEnd xmi:id="_K3RTQqbYEeefQ6YhjiYj2A" name="" type="_KlwFcKbYEeefQ6YhjiYj2A" association="_K3RTQabYEeefQ6YhjiYj2A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_K3R6UabYEeefQ6YhjiYj2A" name="" memberEnd="_K3R6UqbYEeefQ6YhjiYj2A _K0GqgKbYEeefQ6YhjiYj2A">
        <ownedEnd xmi:id="_K3R6UqbYEeefQ6YhjiYj2A" name="" type="_KlwFcKbYEeefQ6YhjiYj2A" association="_K3R6UabYEeefQ6YhjiYj2A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_K3TIcKbYEeefQ6YhjiYj2A" name="" memberEnd="_K3TIcabYEeefQ6YhjiYj2A _K0GqgqbYEeefQ6YhjiYj2A">
        <ownedEnd xmi:id="_K3TIcabYEeefQ6YhjiYj2A" name="" type="_KlwFcKbYEeefQ6YhjiYj2A" association="_K3TIcKbYEeefQ6YhjiYj2A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_K3TvgabYEeefQ6YhjiYj2A" name="" memberEnd="_K3TvgqbYEeefQ6YhjiYj2A _K0HRkabYEeefQ6YhjiYj2A">
        <ownedEnd xmi:id="_K3TvgqbYEeefQ6YhjiYj2A" name="" type="_KlwFcKbYEeefQ6YhjiYj2A" association="_K3TvgabYEeefQ6YhjiYj2A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_K3UWkabYEeefQ6YhjiYj2A" name="" memberEnd="_K3UWkqbYEeefQ6YhjiYj2A _K0IfsabYEeefQ6YhjiYj2A">
        <ownedEnd xmi:id="_K3UWkqbYEeefQ6YhjiYj2A" name="" type="_KlwFcKbYEeefQ6YhjiYj2A" association="_K3UWkabYEeefQ6YhjiYj2A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_K3U9oabYEeefQ6YhjiYj2A" name="" memberEnd="_K3U9oqbYEeefQ6YhjiYj2A _K0JGwabYEeefQ6YhjiYj2A">
        <ownedEnd xmi:id="_K3U9oqbYEeefQ6YhjiYj2A" name="" type="_KlwFcKbYEeefQ6YhjiYj2A" association="_K3U9oabYEeefQ6YhjiYj2A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_K3VksabYEeefQ6YhjiYj2A" name="" memberEnd="_K3WLwKbYEeefQ6YhjiYj2A _K0Jt0abYEeefQ6YhjiYj2A">
        <ownedEnd xmi:id="_K3WLwKbYEeefQ6YhjiYj2A" name="" type="_KlwFcKbYEeefQ6YhjiYj2A" association="_K3VksabYEeefQ6YhjiYj2A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_K3Wy0KbYEeefQ6YhjiYj2A" name="" memberEnd="_K3Wy0abYEeefQ6YhjiYj2A _K0KU4abYEeefQ6YhjiYj2A">
        <ownedEnd xmi:id="_K3Wy0abYEeefQ6YhjiYj2A" name="" type="_KlwFcKbYEeefQ6YhjiYj2A" association="_K3Wy0KbYEeefQ6YhjiYj2A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_K3XZ4abYEeefQ6YhjiYj2A" name="" memberEnd="_K3XZ4qbYEeefQ6YhjiYj2A _K0K78abYEeefQ6YhjiYj2A">
        <ownedEnd xmi:id="_K3XZ4qbYEeefQ6YhjiYj2A" name="" type="_KlwFcKbYEeefQ6YhjiYj2A" association="_K3XZ4abYEeefQ6YhjiYj2A"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_KYtvAKbYEeefQ6YhjiYj2A" name="controller">
      <packagedElement xmi:type="uml:Class" xmi:id="_KfXwoKbYEeefQ6YhjiYj2A" name="BallWorldController">
        <ownedComment xmi:id="_K16oYKbYEeefQ6YhjiYj2A">
          <body>The controller of BallWorldApp.
The &quot;Controller&quot; in a Model-View-Controller architecture Sets up the appropriate wiring between 
the model and the view. Uses adapters to respond to user input and notifies the model and the view to update accordingly. 
@author Yuhui Tong
@version 1.0</body>
        </ownedComment>
        <ownedAttribute xmi:id="_KyzqAKbYEeefQ6YhjiYj2A" name="model" visibility="private" type="_KfwLIKbYEeefQ6YhjiYj2A" association="_K2lWwKbYEeefQ6YhjiYj2A"/>
        <ownedAttribute xmi:id="_Ky04IKbYEeefQ6YhjiYj2A" name="view" visibility="private" type="_KlwFcKbYEeefQ6YhjiYj2A" association="_K2l90abYEeefQ6YhjiYj2A"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K0ed8KbYEeefQ6YhjiYj2A" name="BallWorldController" specification="_KfjW0KbYEeefQ6YhjiYj2A">
          <ownedParameter xmi:id="_K0ed8abYEeefQ6YhjiYj2A" type="_KfXwoKbYEeefQ6YhjiYj2A" direction="return">
            <name xsi:nil="true"/>
          </ownedParameter>
          <language>java</language>
          <body>model = new BallModel(new IModel2ViewAdapter() {
			// Implementation of Anonymous class of IModel2ViewAdapter Interface.
			/**
			 * Overridden method that tells view to repaint.
			 */
			@Override
			public void repaint() {
				view.repaint();
			}

			/**
			 * Overridden method that obtain the jpanel object
			 */
			@Override
			public Component getCanvas() {
				return view.getCanvas();
			};
		});

		view = new BallGUI&lt;IStrategyFac&lt;IBallCmd>, IPaintStrategyFac>(
				new IView2ModelControlAdapter&lt;IStrategyFac&lt;IBallCmd>, IPaintStrategyFac>() {
					// Implementation of Anonymous class of IView2ModelAdapter Interface.

					@Override
					/**
					 * Overridden method that tells model to load ball
					 * @param selectedItem A factory that makes the strategy for ball 
					 */
					public void loadBall(IStrategyFac&lt;IBallCmd> selectedItem, IPaintStrategyFac selectedPSItem) {
						if (selectedItem == null || selectedPSItem == null)
							return;
						model.makeBall(selectedItem.make(), selectedPSItem.make());
					}

					@Override
					/**
					 * Overridden method that tells model to create a Strategy factor that can instantiate strategy of classname
					 */
					public IStrategyFac&lt;IBallCmd> addStrategy(String classname) {
						return model.makeStrategyFac(classname);
					}

					@Override
					/**
					 * Overridden method that tells model to remove all balls
					 */
					public void clearBalls() {
						model.clearBalls();
					}

					@Override
					/**
					 * Overridden method that tells model to create a strategy factor that can combine
					 * two strategy factories.
					 * @param selectedItem1 Strategyfactor 1
					 * @param selectedItem2 Strategyfactory 2
					 */
					public IStrategyFac&lt;IBallCmd> combineStrategies(IStrategyFac&lt;IBallCmd> selectedItem1,
							IStrategyFac&lt;IBallCmd> selectedItem2) {
						return model.combineStrategyFacs(selectedItem1, selectedItem2);
					}

					@Override
					/**
					 * Overridden method that make a switcher ball
					 */
					public void makeSwitcherBall(IPaintStrategyFac selectedPSItem) {
						// TODO Auto-generated method stub
						model.makeBall(model.getSwitcherStrategy(), selectedPSItem.make());
					}

					@Override
					/**
					 * Overridden method that makes a switcher strategy object in the model.
					 */
					public void switchStrategy(IStrategyFac&lt;IBallCmd> selectedItem) {
						// TODO Auto-generated method stub
						model.switchSwitcherStrategy(selectedItem.make());
					}

					/**
					 * Overridden method that add a PaintStrategy factory corresponding to a type of PaintStrategy
					 * @param PaintStrategyName Shortened name for that paint strategy.
					 * @return Selected strategy factory of the strategy type that ball uses
					 */
					@Override
					public IPaintStrategyFac addPaintStrategy(String PaintStrategyName) {
						return model.makePaintStrategyFac(PaintStrategyName);
					}

				}, new IView2ModelPaintAdapter() {
					/**
					 * Overridden method that tells model to update (call all observers' update method)
					 */
					@Override
					public void paint(Graphics g) {
						model.update(g);
					}
				});
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K0ivYKbYEeefQ6YhjiYj2A" name="start" specification="_KfrSoKbYEeefQ6YhjiYj2A">
          <language>java</language>
          <body>model.start();
		view.start();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K0ivYabYEeefQ6YhjiYj2A" name="main" specification="_KfsgwKbYEeefQ6YhjiYj2A">
          <ownedParameter xmi:id="_K0ivYqbYEeefQ6YhjiYj2A" name="args">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_K0ivY6bYEeefQ6YhjiYj2A" value="*"/>
          </ownedParameter>
          <language>java</language>
          <body>EventQueue.invokeLater(new Runnable() {
			// java specs say that the system must be constructed on the GUI event thread
			public void run() {
				try {
					BallWorldController controller = new BallWorldController(); // instantiate the sytem
					controller.start();
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_KfjW0KbYEeefQ6YhjiYj2A" name="BallWorldController" method="_K0ed8KbYEeefQ6YhjiYj2A">
          <eAnnotations xmi:id="_KfoPUKbYEeefQ6YhjiYj2A" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_Kfo2YKbYEeefQ6YhjiYj2A" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_K17PcKbYEeefQ6YhjiYj2A">
            <body>Constructor of the controller</body>
          </ownedComment>
          <ownedParameter xmi:id="_Kfo2YabYEeefQ6YhjiYj2A" type="_KfXwoKbYEeefQ6YhjiYj2A" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_KfrSoKbYEeefQ6YhjiYj2A" name="start" method="_K0ivYKbYEeefQ6YhjiYj2A">
          <ownedComment xmi:id="_K17PcabYEeefQ6YhjiYj2A">
            <body>Start the system</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_KfsgwKbYEeefQ6YhjiYj2A" name="main" isStatic="true" method="_K0ivYabYEeefQ6YhjiYj2A">
          <ownedComment xmi:id="_K17PcqbYEeefQ6YhjiYj2A">
            <body>Instantiate BallWorld
	 * @param args Default string[] arguments.</body>
          </ownedComment>
          <ownedParameter xmi:id="_KfsgwabYEeefQ6YhjiYj2A" name="args">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_KftH0KbYEeefQ6YhjiYj2A" value="*"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_K2lWwKbYEeefQ6YhjiYj2A" name="" memberEnd="_K2lWwabYEeefQ6YhjiYj2A _KyzqAKbYEeefQ6YhjiYj2A">
        <ownedEnd xmi:id="_K2lWwabYEeefQ6YhjiYj2A" name="" type="_KfXwoKbYEeefQ6YhjiYj2A" association="_K2lWwKbYEeefQ6YhjiYj2A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_K2l90abYEeefQ6YhjiYj2A" name="" memberEnd="_K2l90qbYEeefQ6YhjiYj2A _Ky04IKbYEeefQ6YhjiYj2A">
        <ownedEnd xmi:id="_K2l90qbYEeefQ6YhjiYj2A" name="" type="_KfXwoKbYEeefQ6YhjiYj2A" association="_K2l90abYEeefQ6YhjiYj2A"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_KYxZYKbYEeefQ6YhjiYj2A" name="javax">
      <packagedElement xmi:type="uml:Package" xmi:id="_KYxZYabYEeefQ6YhjiYj2A" name="swing">
        <packagedElement xmi:type="uml:Package" xmi:id="_KdIU8KbYEeefQ6YhjiYj2A" name="border">
          <packagedElement xmi:type="uml:Class" xmi:id="_KwmqkabYEeefQ6YhjiYj2A" name="EmptyBorder"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_KwsKIKbYEeefQ6YhjiYj2A" name="TitledBorder"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_KwsxMabYEeefQ6YhjiYj2A" name="EtchedBorder"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_Kr3UgKbYEeefQ6YhjiYj2A" name="Timer"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_Kwk1YabYEeefQ6YhjiYj2A" name="JFrame"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_KwlccabYEeefQ6YhjiYj2A" name="JPanel"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_KwpG0KbYEeefQ6YhjiYj2A" name="JTextField"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_Kwpt4abYEeefQ6YhjiYj2A" name="JButton"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_KwrjEKbYEeefQ6YhjiYj2A" name="JComboBox"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_KYyAcabYEeefQ6YhjiYj2A" name="util">
      <packagedElement xmi:type="uml:Class" xmi:id="_Kks8kKbYEeefQ6YhjiYj2A" name="ACollectionDispatcher" isAbstract="true">
        <ownedComment xmi:id="_K2DLRKbYEeefQ6YhjiYj2A">
          <body>An abstract Collection-based IDispatcher.
 *
@author Stephen Wong
@author Derek Peirce
 *
@param &lt;TDispMsg> The type of message sent to the registered IObservers</body>
        </ownedComment>
        <ownedAttribute xmi:id="_Kz2y4KbYEeefQ6YhjiYj2A" name="observers" visibility="private" isLeaf="true" type="_KlC60KbYEeefQ6YhjiYj2A" isReadOnly="true" association="_K3FtEabYEeefQ6YhjiYj2A">
          <eAnnotations xmi:id="_Kz3Z8KbYEeefQ6YhjiYj2A" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_Kz3Z8abYEeefQ6YhjiYj2A" key="generic_container"/>
          </eAnnotations>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Kz2y4abYEeefQ6YhjiYj2A" value="*"/>
        </ownedAttribute>
        <interfaceRealization xmi:id="_KwOQEabYEeefQ6YhjiYj2A" client="_Kks8kKbYEeefQ6YhjiYj2A" supplier="_Kk8NIKbYEeefQ6YhjiYj2A" contract="_Kk8NIKbYEeefQ6YhjiYj2A"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K1t0EKbYEeefQ6YhjiYj2A" name="ACollectionDispatcher" specification="_KyJisKbYEeefQ6YhjiYj2A">
          <ownedParameter xmi:id="_K1t0EabYEeefQ6YhjiYj2A" name="observers" type="_KwNpAKbYEeefQ6YhjiYj2A"/>
          <ownedParameter xmi:id="_K1t0EqbYEeefQ6YhjiYj2A" type="_Kks8kKbYEeefQ6YhjiYj2A" direction="return">
            <name xsi:nil="true"/>
          </ownedParameter>
          <language>java</language>
          <body>this.observers = observers;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K1t0E6bYEeefQ6YhjiYj2A" name="getCollection" specification="_Kkv_4KbYEeefQ6YhjiYj2A">
          <ownedParameter xmi:id="_K1t0FKbYEeefQ6YhjiYj2A" type="_KlC60KbYEeefQ6YhjiYj2A" direction="return">
            <name xsi:nil="true"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_K1t0FabYEeefQ6YhjiYj2A" value="*"/>
          </ownedParameter>
          <language>java</language>
          <body>return observers;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K1t0FqbYEeefQ6YhjiYj2A" name="addObserver" specification="_KwQFQKbYEeefQ6YhjiYj2A">
          <ownedParameter xmi:id="_K1t0F6bYEeefQ6YhjiYj2A" name="obs" type="_KlC60KbYEeefQ6YhjiYj2A"/>
          <language>java</language>
          <body>observers.add(obs);

	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K1t0GKbYEeefQ6YhjiYj2A" name="deleteObserver" specification="_KwR6cKbYEeefQ6YhjiYj2A">
          <ownedParameter xmi:id="_K1t0GabYEeefQ6YhjiYj2A" name="obs" type="_KlC60KbYEeefQ6YhjiYj2A"/>
          <language>java</language>
          <body>observers.remove(obs);

	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K1ubIKbYEeefQ6YhjiYj2A" name="deleleObservers" specification="_Kk0RUKbYEeefQ6YhjiYj2A">
          <language>java</language>
          <body>observers.clear();
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_Kkv_4KbYEeefQ6YhjiYj2A" name="getCollection" visibility="protected" method="_K1t0E6bYEeefQ6YhjiYj2A">
          <eAnnotations xmi:id="_KkxOAKbYEeefQ6YhjiYj2A" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_KkxOAabYEeefQ6YhjiYj2A" key="generic_container"/>
          </eAnnotations>
          <ownedComment xmi:id="_K2DLRqbYEeefQ6YhjiYj2A">
            <body>Accessor method for the internal Collection for use by implementing subclasses.
	 * @return return The internal Collection of IObservers&lt;TDispMsg></body>
          </ownedComment>
          <ownedParameter xmi:id="_Kkwm8KbYEeefQ6YhjiYj2A" type="_KlC60KbYEeefQ6YhjiYj2A" direction="return">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Kkwm8abYEeefQ6YhjiYj2A" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_Kk0RUKbYEeefQ6YhjiYj2A" name="deleleObservers" method="_K1ubIKbYEeefQ6YhjiYj2A"/>
        <ownedOperation xmi:id="_KwQFQKbYEeefQ6YhjiYj2A" name="addObserver" method="_K1t0FqbYEeefQ6YhjiYj2A">
          <ownedParameter xmi:id="_KwQFQabYEeefQ6YhjiYj2A" name="obs" type="_KlC60KbYEeefQ6YhjiYj2A"/>
        </ownedOperation>
        <ownedOperation xmi:id="_KwR6cKbYEeefQ6YhjiYj2A" name="deleteObserver" method="_K1t0GKbYEeefQ6YhjiYj2A">
          <ownedParameter xmi:id="_KwR6cabYEeefQ6YhjiYj2A" name="obs" type="_KlC60KbYEeefQ6YhjiYj2A"/>
        </ownedOperation>
        <ownedOperation xmi:id="_KyJisKbYEeefQ6YhjiYj2A" name="ACollectionDispatcher" method="_K1t0EKbYEeefQ6YhjiYj2A">
          <eAnnotations xmi:id="_KyJisqbYEeefQ6YhjiYj2A" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_KyJis6bYEeefQ6YhjiYj2A" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_K2DLRabYEeefQ6YhjiYj2A">
            <body>Constructor for the class.   The Collection that is used needs to be supplied,
	 * generally by the implementing subclass.   This allows for different types of
	 * Collections to be used for different purposes.  It is highly recommended that the
	 * supplied Collection be completely thread-safe to enable the use of
	 * multiple dispatching threads.
	 * @param observers  The Collection of IObserver&lt;TDispMsg> to use.</body>
          </ownedComment>
          <ownedParameter xmi:id="_KyJisabYEeefQ6YhjiYj2A" name="observers" type="_KwNpAKbYEeefQ6YhjiYj2A"/>
          <ownedParameter xmi:id="_KyKJwKbYEeefQ6YhjiYj2A" type="_Kks8kKbYEeefQ6YhjiYj2A" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_Kk4iwKbYEeefQ6YhjiYj2A" name="ASetDispatcher" isAbstract="true">
        <ownedComment xmi:id="_K2DLR6bYEeefQ6YhjiYj2A">
          <body>A Collection-based Dispatcher that uses a CopyOnWriteArraySet.
 *
@author Stephen Wong
@author Derek Peirce
 *
@param &lt;TDispMsg> The type of message sent to the registered IObservers</body>
        </ownedComment>
        <generalization xmi:id="_KwU9wabYEeefQ6YhjiYj2A" general="_Kks8kKbYEeefQ6YhjiYj2A"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K1ubIabYEeefQ6YhjiYj2A" name="ASetDispatcher" specification="_Kk6_AKbYEeefQ6YhjiYj2A">
          <ownedParameter xmi:id="_K1ubIqbYEeefQ6YhjiYj2A" type="_Kk4iwKbYEeefQ6YhjiYj2A" direction="return">
            <name xsi:nil="true"/>
          </ownedParameter>
          <language>java</language>
          <body>super(new CopyOnWriteArraySet&lt;>()); // Type of CopyOnWriteArraySet is inferred by compiler
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_Kk6_AKbYEeefQ6YhjiYj2A" name="ASetDispatcher" method="_K1ubIabYEeefQ6YhjiYj2A">
          <eAnnotations xmi:id="_Kk6_AabYEeefQ6YhjiYj2A" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_Kk6_AqbYEeefQ6YhjiYj2A" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_Kk6_A6bYEeefQ6YhjiYj2A" type="_Kk4iwKbYEeefQ6YhjiYj2A" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_Kk8NIKbYEeefQ6YhjiYj2A" name="IDispatcher">
        <ownedComment xmi:id="_K2DLSKbYEeefQ6YhjiYj2A">
          <body>An dispatcher of messages of type TDispMsg to its registered IObserver&lt;TDispMsg> objects. 
The dispatcher is an Observable in the Observer-Observable design pattern
though with the difference of always immediately dispatching to the
observers when a message is received.
 *
@author Stephen Wong
@author Derek Peirce
 *
@param &lt;TDispMsg> The type of messages being dispatched</body>
        </ownedComment>
        <ownedOperation xmi:id="_Kk_3gKbYEeefQ6YhjiYj2A" name="deleleObservers">
          <ownedComment xmi:id="_K2DyU6bYEeefQ6YhjiYj2A">
            <body>Deregister all observers from this dispatcher.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_KwWy8KbYEeefQ6YhjiYj2A" name="addObserver">
          <ownedComment xmi:id="_K2DyUabYEeefQ6YhjiYj2A">
            <body>register the given observer in the dispatcher
	 * @param obs The observer to register</body>
          </ownedComment>
          <ownedParameter xmi:id="_KwWy8abYEeefQ6YhjiYj2A" name="obs" type="_KlC60KbYEeefQ6YhjiYj2A"/>
        </ownedOperation>
        <ownedOperation xmi:id="_KwYBEabYEeefQ6YhjiYj2A" name="deleteObserver">
          <ownedComment xmi:id="_K2DyUqbYEeefQ6YhjiYj2A">
            <body>Deregister the given observer from this dispatcher.
	 * @param obs The observer to deregister</body>
          </ownedComment>
          <ownedParameter xmi:id="_KwYBEqbYEeefQ6YhjiYj2A" name="obs" type="_KlC60KbYEeefQ6YhjiYj2A"/>
        </ownedOperation>
        <ownedOperation xmi:id="_KyMmAabYEeefQ6YhjiYj2A" name="dispatch">
          <ownedComment xmi:id="_K2DyUKbYEeefQ6YhjiYj2A">
            <body>Dispatch the given message to all the registered observers
	 * @param msg The message to pass to all the observers</body>
          </ownedComment>
          <ownedParameter xmi:id="_KyMmAqbYEeefQ6YhjiYj2A" name="msg" type="_KyL-8KbYEeefQ6YhjiYj2A"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_KlBFoKbYEeefQ6YhjiYj2A" name="ILambda">
        <ownedComment xmi:id="_K2DyVKbYEeefQ6YhjiYj2A">
          <body>Represents the abstract lambda expression whose sole urpose in life is to evaluate itself on an input and return the result of the evaluation.
@author SWong
 *</body>
        </ownedComment>
        <ownedOperation xmi:id="_KyObMKbYEeefQ6YhjiYj2A" name="apply">
          <ownedParameter xmi:id="_KyObMabYEeefQ6YhjiYj2A" name="arg" type="_KyNNEabYEeefQ6YhjiYj2A"/>
          <ownedParameter xmi:id="_KyObMqbYEeefQ6YhjiYj2A" type="_KyNNEabYEeefQ6YhjiYj2A" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_KlC60KbYEeefQ6YhjiYj2A" name="IObserver">
        <ownedComment xmi:id="_K2DyVabYEeefQ6YhjiYj2A">
          <body>An observer for IDispatcher&lt;TDispMsg>.  When registered with a dispatcher,
an observer will receive the TDispMsg-type message that the dispatcher is sends
to its registered observers.
 *
@author Stephen Wong
@author Derek Peirce
 *
@param &lt;TDispMsg> The type of message that this observer can process</body>
        </ownedComment>
        <ownedOperation xmi:id="_KyPCQKbYEeefQ6YhjiYj2A" name="update">
          <ownedParameter xmi:id="_KyPCQabYEeefQ6YhjiYj2A" name="dispatcher" type="_Kk8NIKbYEeefQ6YhjiYj2A"/>
          <ownedParameter xmi:id="_KyPCQqbYEeefQ6YhjiYj2A" name="msg" type="_KyL-8KbYEeefQ6YhjiYj2A"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_KlFXEKbYEeefQ6YhjiYj2A" name="IRandomizer">
        <ownedComment xmi:id="_K2DyVqbYEeefQ6YhjiYj2A">
          <body>Interface of randomizer, provided by COMP504
@author COMP504</body>
        </ownedComment>
        <ownedOperation xmi:id="_KlGlMKbYEeefQ6YhjiYj2A" name="randomInt">
          <ownedComment xmi:id="_K2DyWabYEeefQ6YhjiYj2A">
            <body>Returns a random integer greater than or equal to min and less than or equal to max.
	 * @param min The minimum allowed value
	 * @param max The maximum allowed value
	 * @return an int subject to the given bounds</body>
          </ownedComment>
          <ownedParameter xmi:id="_KlGlMabYEeefQ6YhjiYj2A" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_KlHMQKbYEeefQ6YhjiYj2A" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_KlHMQabYEeefQ6YhjiYj2A" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_KlJBcKbYEeefQ6YhjiYj2A" name="randomDouble">
          <ownedComment xmi:id="_K2DyWqbYEeefQ6YhjiYj2A">
            <body>Returns a random double greater than or equal to min and less than max.
	 * @param min The minimum allowed value
	 * @param max The maximum allowed value
	 * @return a double subject to the given bounds</body>
          </ownedComment>
          <ownedParameter xmi:id="_KlJBcabYEeefQ6YhjiYj2A" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_KlJogKbYEeefQ6YhjiYj2A" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_KlJogabYEeefQ6YhjiYj2A" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_KlK2oKbYEeefQ6YhjiYj2A" name="randomColor">
          <ownedComment xmi:id="_K2EZYabYEeefQ6YhjiYj2A">
            <body>Generates a random color
	 * @return a random Color object</body>
          </ownedComment>
          <ownedParameter xmi:id="_KyVI4KbYEeefQ6YhjiYj2A" type="_Kr6-4abYEeefQ6YhjiYj2A" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_KyQQYKbYEeefQ6YhjiYj2A" name="randomLoc">
          <ownedComment xmi:id="_K2DyV6bYEeefQ6YhjiYj2A">
            <body>Generates a random location point subject to the constraint that 0&amp;lt;=X&amp;lt;=rect.width and 0&amp;lt;=Y&amp;lt;=rect.height.
	 * @param rect The bounds for the x and y values of the created Point
	 * @return A Point object whose x and y are subject to the given bounds</body>
          </ownedComment>
          <ownedParameter xmi:id="_KyQQYabYEeefQ6YhjiYj2A" name="rect" type="_Kr5JsabYEeefQ6YhjiYj2A"/>
          <ownedParameter xmi:id="_KyQQYqbYEeefQ6YhjiYj2A" type="_Kr6X0abYEeefQ6YhjiYj2A" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_KySFkKbYEeefQ6YhjiYj2A" name="randomLoc">
          <ownedComment xmi:id="_K2DyWKbYEeefQ6YhjiYj2A">
            <body>Generates a random location point subject to the constraint that 0&amp;lt;=X&amp;lt;=dim.width and 0&amp;lt;=Y&amp;lt;=dim.height.
	 * @param dim The bounds for the x and y values of the created Point
	 * @return A Point object whose x and y are subject to the given bounds</body>
          </ownedComment>
          <ownedParameter xmi:id="_KySFkabYEeefQ6YhjiYj2A" name="dim" type="_KyQ3cKbYEeefQ6YhjiYj2A"/>
          <ownedParameter xmi:id="_KySFkqbYEeefQ6YhjiYj2A" type="_Kr6X0abYEeefQ6YhjiYj2A" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_KySsoKbYEeefQ6YhjiYj2A" name="randomVel">
          <ownedComment xmi:id="_K2DyW6bYEeefQ6YhjiYj2A">
            <body>Returns a random velocity (as a Point) subject to the constraint that the absolute value of the velocity (speed) 
	 * within the bound (inclusive) defined by rect.   Thus the resultant velocity may be negative.   The given Rectangle
	 * should use all positive values.
	 * @param rect The bounds for the absolute value of the velocity in the x and y directions.  
	 * @return a Point object with x and y subject to the given bounds.</body>
          </ownedComment>
          <ownedParameter xmi:id="_KySsoabYEeefQ6YhjiYj2A" name="rect" type="_Kr5JsabYEeefQ6YhjiYj2A"/>
          <ownedParameter xmi:id="_KySsoqbYEeefQ6YhjiYj2A" type="_Kr6X0abYEeefQ6YhjiYj2A" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_KyTTsKbYEeefQ6YhjiYj2A" name="randomDim">
          <ownedComment xmi:id="_K2DyXKbYEeefQ6YhjiYj2A">
            <body>Returns a random square Dimension, whose width is maxDim.width/2&amp;lt;=width&amp;lt;=maxDim.width
	 * @param maxDim  The bounds on the side of the created Dimension.
	 * @return A random square Dimension subject to the given bound</body>
          </ownedComment>
          <ownedParameter xmi:id="_KyTTsabYEeefQ6YhjiYj2A" name="maxDim" type="_KyQ3cKbYEeefQ6YhjiYj2A"/>
          <ownedParameter xmi:id="_KyT6wKbYEeefQ6YhjiYj2A" type="_KyQ3cKbYEeefQ6YhjiYj2A" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_KyUh0KbYEeefQ6YhjiYj2A" name="randomBounds">
          <ownedComment xmi:id="_K2EZYKbYEeefQ6YhjiYj2A">
            <body>Generates a randomly located and sized rectangle
	 * @param rect  The bounds for the location of the created rectangle
	 * @param maxDim  The bounds for the dimensions of the create rectangle
	 * @return A Rectangle with location and dimensions subject to the given bounds.</body>
          </ownedComment>
          <ownedParameter xmi:id="_KyUh0abYEeefQ6YhjiYj2A" name="rect" type="_Kr5JsabYEeefQ6YhjiYj2A"/>
          <ownedParameter xmi:id="_KyUh0qbYEeefQ6YhjiYj2A" name="maxDim" type="_KyQ3cKbYEeefQ6YhjiYj2A"/>
          <ownedParameter xmi:id="_KyUh06bYEeefQ6YhjiYj2A" type="_Kr5JsabYEeefQ6YhjiYj2A" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_KyVI4abYEeefQ6YhjiYj2A" name="randomChoice">
          <ownedComment xmi:id="_K2EZYqbYEeefQ6YhjiYj2A">
            <body>Returns a random choice of one of two objects, x and y, where probX is the probability 
	 * that x will be picked (0&amp;lt;=x&amp;lt;=1).
	 * @param x The first of two choices
	 * @param y The second of two choices
	 * @param probX  The probability of the first choice
	 * @return Either x or y as per the probability of choosing them.</body>
          </ownedComment>
          <ownedParameter xmi:id="_KyVI4qbYEeefQ6YhjiYj2A" name="x" type="_KyNNEabYEeefQ6YhjiYj2A"/>
          <ownedParameter xmi:id="_KyVv8KbYEeefQ6YhjiYj2A" name="y" type="_KyNNEabYEeefQ6YhjiYj2A"/>
          <ownedParameter xmi:id="_KyVv8abYEeefQ6YhjiYj2A" name="probX">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_KyVv8qbYEeefQ6YhjiYj2A" type="_KyNNEabYEeefQ6YhjiYj2A" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_KlQ9QKbYEeefQ6YhjiYj2A" name="NoOpLambda">
        <ownedComment xmi:id="_K2EZY6bYEeefQ6YhjiYj2A">
          <body>Represents the identity map. Null-object pattern for ILambda.
@author yuhui
 *</body>
        </ownedComment>
        <ownedAttribute xmi:id="_Kz4oEKbYEeefQ6YhjiYj2A" name="Singleton" isStatic="true" type="_KlQ9QKbYEeefQ6YhjiYj2A" association="_K3GUIabYEeefQ6YhjiYj2A">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_Kz4oEabYEeefQ6YhjiYj2A" value="new NoOpLambda()"/>
        </ownedAttribute>
        <interfaceRealization xmi:id="_KwbEYKbYEeefQ6YhjiYj2A" client="_KlQ9QKbYEeefQ6YhjiYj2A" supplier="_KlBFoKbYEeefQ6YhjiYj2A" contract="_KlBFoKbYEeefQ6YhjiYj2A"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K1vCMKbYEeefQ6YhjiYj2A" name="apply" specification="_KyW-EKbYEeefQ6YhjiYj2A">
          <ownedParameter xmi:id="_K1vCMabYEeefQ6YhjiYj2A" name="arg" type="_KyNNEabYEeefQ6YhjiYj2A"/>
          <ownedParameter xmi:id="_K1vCMqbYEeefQ6YhjiYj2A" type="_KyNNEabYEeefQ6YhjiYj2A" direction="return"/>
          <language>java</language>
          <body>return null;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_KlSycKbYEeefQ6YhjiYj2A" name="NoOpLambda" visibility="private">
          <eAnnotations xmi:id="_KlTZgKbYEeefQ6YhjiYj2A" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_KlTZgabYEeefQ6YhjiYj2A" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_KlTZg6bYEeefQ6YhjiYj2A" type="_KlQ9QKbYEeefQ6YhjiYj2A" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_KyW-EKbYEeefQ6YhjiYj2A" name="apply" method="_K1vCMKbYEeefQ6YhjiYj2A">
          <ownedParameter xmi:id="_KyW-EabYEeefQ6YhjiYj2A" name="arg" type="_KyNNEabYEeefQ6YhjiYj2A"/>
          <ownedParameter xmi:id="_KyXlIKbYEeefQ6YhjiYj2A" type="_KyNNEabYEeefQ6YhjiYj2A" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_KlV1wKbYEeefQ6YhjiYj2A" name="Randomizer">
        <ownedComment xmi:id="_K2EZZKbYEeefQ6YhjiYj2A">
          <body>Utility class that supplies  class routines for generating various random values</body>
        </ownedComment>
        <ownedAttribute xmi:id="_Kz5PIabYEeefQ6YhjiYj2A" name="Singleton" isStatic="true" type="_KlV1wKbYEeefQ6YhjiYj2A" association="_K3HiQKbYEeefQ6YhjiYj2A">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_Kz52MKbYEeefQ6YhjiYj2A" value="new Randomizer()"/>
        </ownedAttribute>
        <interfaceRealization xmi:id="_Kwc5kKbYEeefQ6YhjiYj2A" client="_KlV1wKbYEeefQ6YhjiYj2A" supplier="_KlFXEKbYEeefQ6YhjiYj2A" contract="_KlFXEKbYEeefQ6YhjiYj2A"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K1vCM6bYEeefQ6YhjiYj2A" name="randomLoc" specification="_KyYzQKbYEeefQ6YhjiYj2A">
          <ownedParameter xmi:id="_K1vCNKbYEeefQ6YhjiYj2A" name="rect" type="_Kr5JsabYEeefQ6YhjiYj2A"/>
          <ownedParameter xmi:id="_K1vCNabYEeefQ6YhjiYj2A" type="_Kr6X0abYEeefQ6YhjiYj2A" direction="return"/>
          <language>java</language>
          <body>return (new Point(randomInt(0, rect.width), randomInt(0, rect.height)));
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K1vpQKbYEeefQ6YhjiYj2A" name="randomLoc" specification="_KyZaUKbYEeefQ6YhjiYj2A">
          <ownedParameter xmi:id="_K1vpQabYEeefQ6YhjiYj2A" name="dim" type="_KyQ3cKbYEeefQ6YhjiYj2A"/>
          <ownedParameter xmi:id="_K1vpQqbYEeefQ6YhjiYj2A" type="_Kr6X0abYEeefQ6YhjiYj2A" direction="return"/>
          <language>java</language>
          <body>return (new Point(randomInt(0, dim.width), randomInt(0, dim.height)));
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K1wQUKbYEeefQ6YhjiYj2A" name="randomInt" specification="_KlauQKbYEeefQ6YhjiYj2A">
          <ownedParameter xmi:id="_K1wQUabYEeefQ6YhjiYj2A" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_K1wQUqbYEeefQ6YhjiYj2A" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_K1wQU6bYEeefQ6YhjiYj2A" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return (int) Math.floor((Math.random() * (1 + max - min)) + min);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K1w3YKbYEeefQ6YhjiYj2A" name="randomDouble" specification="_Klb8YKbYEeefQ6YhjiYj2A">
          <ownedParameter xmi:id="_K1w3YabYEeefQ6YhjiYj2A" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_K1w3YqbYEeefQ6YhjiYj2A" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_K1w3Y6bYEeefQ6YhjiYj2A" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <language>java</language>
          <body>return (Math.random() * (max - min)) + min;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K1w3ZKbYEeefQ6YhjiYj2A" name="randomVel" specification="_KyaocKbYEeefQ6YhjiYj2A">
          <ownedParameter xmi:id="_K1w3ZabYEeefQ6YhjiYj2A" name="rect" type="_Kr5JsabYEeefQ6YhjiYj2A"/>
          <ownedParameter xmi:id="_K1w3ZqbYEeefQ6YhjiYj2A" type="_Kr6X0abYEeefQ6YhjiYj2A" direction="return"/>
          <language>java</language>
          <body>return (new Point(randomInt(-rect.width, rect.width), randomInt(-rect.height, rect.height)));
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K1w3Z6bYEeefQ6YhjiYj2A" name="randomDim" specification="_KybPgKbYEeefQ6YhjiYj2A">
          <ownedParameter xmi:id="_K1w3aKbYEeefQ6YhjiYj2A" name="maxDim" type="_KyQ3cKbYEeefQ6YhjiYj2A"/>
          <ownedParameter xmi:id="_K1w3aabYEeefQ6YhjiYj2A" type="_KyQ3cKbYEeefQ6YhjiYj2A" direction="return"/>
          <language>java</language>
          <body>int x = randomInt(maxDim.width / 2, maxDim.width);
		return new Dimension(x, x);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K1xecKbYEeefQ6YhjiYj2A" name="randomBounds" specification="_Kyb2kKbYEeefQ6YhjiYj2A">
          <ownedParameter xmi:id="_K1xecabYEeefQ6YhjiYj2A" name="rect" type="_Kr5JsabYEeefQ6YhjiYj2A"/>
          <ownedParameter xmi:id="_K1xecqbYEeefQ6YhjiYj2A" name="maxDim" type="_KyQ3cKbYEeefQ6YhjiYj2A"/>
          <ownedParameter xmi:id="_K1xec6bYEeefQ6YhjiYj2A" type="_Kr5JsabYEeefQ6YhjiYj2A" direction="return"/>
          <language>java</language>
          <body>return new Rectangle(randomLoc(rect), randomDim(maxDim));
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K1xedKbYEeefQ6YhjiYj2A" name="randomColor" specification="_KldxkKbYEeefQ6YhjiYj2A">
          <ownedParameter xmi:id="_K1xedabYEeefQ6YhjiYj2A" type="_Kr6-4abYEeefQ6YhjiYj2A" direction="return"/>
          <language>java</language>
          <body>return new Color(randomInt(0, 255), randomInt(0, 255), randomInt(0, 255));
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K1yFgKbYEeefQ6YhjiYj2A" name="randomChoice" specification="_KydrwKbYEeefQ6YhjiYj2A">
          <ownedParameter xmi:id="_K1yFgabYEeefQ6YhjiYj2A" name="x" type="_KyNNEabYEeefQ6YhjiYj2A"/>
          <ownedParameter xmi:id="_K1yFgqbYEeefQ6YhjiYj2A" name="y" type="_KyNNEabYEeefQ6YhjiYj2A"/>
          <ownedParameter xmi:id="_K1yFg6bYEeefQ6YhjiYj2A" name="probX">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_K1yFhKbYEeefQ6YhjiYj2A" type="_KyNNEabYEeefQ6YhjiYj2A" direction="return"/>
          <language>java</language>
          <body>return (Math.random() &lt; probX) ? x : y;

	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_KlXq8KbYEeefQ6YhjiYj2A" name="Randomizer" visibility="private">
          <eAnnotations xmi:id="_KlXq8abYEeefQ6YhjiYj2A" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_KlXq8qbYEeefQ6YhjiYj2A" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_KlYSAabYEeefQ6YhjiYj2A" type="_KlV1wKbYEeefQ6YhjiYj2A" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_KlauQKbYEeefQ6YhjiYj2A" name="randomInt" method="_K1wQUKbYEeefQ6YhjiYj2A">
          <ownedParameter xmi:id="_KlauQabYEeefQ6YhjiYj2A" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_KlauQqbYEeefQ6YhjiYj2A" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_KlbVUKbYEeefQ6YhjiYj2A" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_Klb8YKbYEeefQ6YhjiYj2A" name="randomDouble" method="_K1w3YKbYEeefQ6YhjiYj2A">
          <ownedParameter xmi:id="_Klb8YabYEeefQ6YhjiYj2A" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_Klb8YqbYEeefQ6YhjiYj2A" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_KlcjcKbYEeefQ6YhjiYj2A" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_KldxkKbYEeefQ6YhjiYj2A" name="randomColor" method="_K1xedKbYEeefQ6YhjiYj2A">
          <ownedParameter xmi:id="_KydEsKbYEeefQ6YhjiYj2A" type="_Kr6-4abYEeefQ6YhjiYj2A" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_KyYzQKbYEeefQ6YhjiYj2A" name="randomLoc" method="_K1vCM6bYEeefQ6YhjiYj2A">
          <ownedParameter xmi:id="_KyYzQabYEeefQ6YhjiYj2A" name="rect" type="_Kr5JsabYEeefQ6YhjiYj2A"/>
          <ownedParameter xmi:id="_KyYzQqbYEeefQ6YhjiYj2A" type="_Kr6X0abYEeefQ6YhjiYj2A" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_KyZaUKbYEeefQ6YhjiYj2A" name="randomLoc" method="_K1vpQKbYEeefQ6YhjiYj2A">
          <ownedParameter xmi:id="_KyaBYKbYEeefQ6YhjiYj2A" name="dim" type="_KyQ3cKbYEeefQ6YhjiYj2A"/>
          <ownedParameter xmi:id="_KyaBYabYEeefQ6YhjiYj2A" type="_Kr6X0abYEeefQ6YhjiYj2A" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_KyaocKbYEeefQ6YhjiYj2A" name="randomVel" method="_K1w3ZKbYEeefQ6YhjiYj2A">
          <ownedParameter xmi:id="_KyaocabYEeefQ6YhjiYj2A" name="rect" type="_Kr5JsabYEeefQ6YhjiYj2A"/>
          <ownedParameter xmi:id="_KyaocqbYEeefQ6YhjiYj2A" type="_Kr6X0abYEeefQ6YhjiYj2A" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_KybPgKbYEeefQ6YhjiYj2A" name="randomDim" method="_K1w3Z6bYEeefQ6YhjiYj2A">
          <ownedParameter xmi:id="_KybPgabYEeefQ6YhjiYj2A" name="maxDim" type="_KyQ3cKbYEeefQ6YhjiYj2A"/>
          <ownedParameter xmi:id="_KybPgqbYEeefQ6YhjiYj2A" type="_KyQ3cKbYEeefQ6YhjiYj2A" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_Kyb2kKbYEeefQ6YhjiYj2A" name="randomBounds" method="_K1xecKbYEeefQ6YhjiYj2A">
          <ownedParameter xmi:id="_KycdoKbYEeefQ6YhjiYj2A" name="rect" type="_Kr5JsabYEeefQ6YhjiYj2A"/>
          <ownedParameter xmi:id="_KycdoabYEeefQ6YhjiYj2A" name="maxDim" type="_KyQ3cKbYEeefQ6YhjiYj2A"/>
          <ownedParameter xmi:id="_KycdoqbYEeefQ6YhjiYj2A" type="_Kr5JsabYEeefQ6YhjiYj2A" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_KydrwKbYEeefQ6YhjiYj2A" name="randomChoice" method="_K1yFgKbYEeefQ6YhjiYj2A">
          <ownedParameter xmi:id="_KydrwabYEeefQ6YhjiYj2A" name="x" type="_KyNNEabYEeefQ6YhjiYj2A"/>
          <ownedParameter xmi:id="_KydrwqbYEeefQ6YhjiYj2A" name="y" type="_KyNNEabYEeefQ6YhjiYj2A"/>
          <ownedParameter xmi:id="_Kydrw6bYEeefQ6YhjiYj2A" name="probX">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_KydrxKbYEeefQ6YhjiYj2A" type="_KyNNEabYEeefQ6YhjiYj2A" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_Klj4MKbYEeefQ6YhjiYj2A" name="SetDispatcherParallel">
        <ownedComment xmi:id="_K2EZZabYEeefQ6YhjiYj2A">
          <body>A CopyOnWriteArraySet-based IDispatcher that dispatches to its IObservers in parallel.
 *
@author Stephen Wong
@author Derek Peirce
 *
@param &lt;TDispMsg> The type of message sent to the registered IObservers</body>
        </ownedComment>
        <generalization xmi:id="_KwhLAKbYEeefQ6YhjiYj2A" general="_Kk4iwKbYEeefQ6YhjiYj2A"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K1yFhabYEeefQ6YhjiYj2A" name="dispatch" specification="_KyeS0KbYEeefQ6YhjiYj2A">
          <ownedParameter xmi:id="_K1yFhqbYEeefQ6YhjiYj2A" name="msg" type="_KyL-8KbYEeefQ6YhjiYj2A"/>
          <language>java</language>
          <body>getCollection().parallelStream().forEach(o -> {
			o.update(this, msg);
		});
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_KyeS0KbYEeefQ6YhjiYj2A" name="dispatch" method="_K1yFhabYEeefQ6YhjiYj2A">
          <ownedParameter xmi:id="_KyeS0abYEeefQ6YhjiYj2A" name="msg" type="_KyL-8KbYEeefQ6YhjiYj2A"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_KlnikKbYEeefQ6YhjiYj2A" name="SetDispatcherSequential">
        <ownedComment xmi:id="_K2FAcKbYEeefQ6YhjiYj2A">
          <body>A CopyOnWriteArraySet-based IDispatcher that dispatches to its IObservers sequentially.
 *
@author Stephen Wong
@author Derek Peirce
 *
@param &lt;TDispMsg> The type of message sent to the registered IObservers</body>
        </ownedComment>
        <generalization xmi:id="_KwiZIKbYEeefQ6YhjiYj2A" general="_Kk4iwKbYEeefQ6YhjiYj2A"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K1yskKbYEeefQ6YhjiYj2A" name="dispatch" specification="_Kyfg8KbYEeefQ6YhjiYj2A">
          <ownedParameter xmi:id="_K1yskabYEeefQ6YhjiYj2A" name="msg" type="_KyL-8KbYEeefQ6YhjiYj2A"/>
          <language>java</language>
          <body>getCollection().forEach(o -> {
			o.update(this, msg);
		});
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_Kyfg8KbYEeefQ6YhjiYj2A" name="dispatch" method="_K1yskKbYEeefQ6YhjiYj2A">
          <ownedParameter xmi:id="_Kyfg8abYEeefQ6YhjiYj2A" name="msg" type="_KyL-8KbYEeefQ6YhjiYj2A"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_Klp-0KbYEeefQ6YhjiYj2A" name="SineMaker">
        <ownedComment xmi:id="_K2FAcabYEeefQ6YhjiYj2A">
          <body>A utility class that can be used to create smoothly varying sinusoidal
numerical data.
Note that this is not a singleton class nor does it have static methods as
its behavior depends on the minimum, maximum and delta values given to 
its constructor.
@author SWong</body>
        </ownedComment>
        <ownedAttribute xmi:id="_Kz6dQKbYEeefQ6YhjiYj2A" name="_mid" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Kz7EUabYEeefQ6YhjiYj2A" name="_ampl" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Kz7rYabYEeefQ6YhjiYj2A" name="_delta" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Kz8ScabYEeefQ6YhjiYj2A" name="_theta" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_Kz8ScqbYEeefQ6YhjiYj2A" value="-Math.PI / 2.0"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K1yskqbYEeefQ6YhjiYj2A" name="SineMaker" specification="_Klr0AKbYEeefQ6YhjiYj2A">
          <ownedParameter xmi:id="_K1zToKbYEeefQ6YhjiYj2A" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_K1zToabYEeefQ6YhjiYj2A" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_K1zToqbYEeefQ6YhjiYj2A" name="delta">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_K1zTo6bYEeefQ6YhjiYj2A" type="_Klp-0KbYEeefQ6YhjiYj2A" direction="return"/>
          <language>java</language>
          <body>_mid = (max + min) / 2.0;
		_ampl = (max - min) / 2.0;
		_delta = delta;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K1zTpKbYEeefQ6YhjiYj2A" name="getDblVal" specification="_KltCIKbYEeefQ6YhjiYj2A">
          <ownedParameter xmi:id="_K1zTpabYEeefQ6YhjiYj2A" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <language>java</language>
          <body>double result = _mid + _ampl * Math.sin(_theta);
		_theta += _delta; // shorthand for _theta = _theta + _delta
		return result;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K1zTpqbYEeefQ6YhjiYj2A" name="getIntVal" specification="_KluQQKbYEeefQ6YhjiYj2A">
          <ownedParameter xmi:id="_K1zTp6bYEeefQ6YhjiYj2A" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return (int) Math.round(getDblVal());
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_Klr0AKbYEeefQ6YhjiYj2A" name="SineMaker" method="_K1yskqbYEeefQ6YhjiYj2A">
          <eAnnotations xmi:id="_KlsbEqbYEeefQ6YhjiYj2A" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_KlsbE6bYEeefQ6YhjiYj2A" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_K2FAcqbYEeefQ6YhjiYj2A">
            <body>The constructor takes several values to control the object's behavior.
	 * @param min The minimum and initial value to produce.
	 * @param max The maximum value to produce.
	 * @param delta The amount in radians that the generating angle is incremented each time
	 *</body>
          </ownedComment>
          <ownedParameter xmi:id="_Klr0AabYEeefQ6YhjiYj2A" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_KlsbEKbYEeefQ6YhjiYj2A" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_KlsbEabYEeefQ6YhjiYj2A" name="delta">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_KlsbFKbYEeefQ6YhjiYj2A" type="_Klp-0KbYEeefQ6YhjiYj2A" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_KltCIKbYEeefQ6YhjiYj2A" name="getDblVal" method="_K1zTpKbYEeefQ6YhjiYj2A">
          <ownedComment xmi:id="_K2FAc6bYEeefQ6YhjiYj2A">
            <body>Returns a different value each time it is called.  The value varies smoothly in a 
	 * sinusoidal fashion, incrementing each time as per the above specified delta 
	 * angle increase.
	 * @return the next value as a double</body>
          </ownedComment>
          <ownedParameter xmi:id="_KltpMKbYEeefQ6YhjiYj2A" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_KluQQKbYEeefQ6YhjiYj2A" name="getIntVal" method="_K1zTpqbYEeefQ6YhjiYj2A">
          <ownedComment xmi:id="_K2FAdKbYEeefQ6YhjiYj2A">
            <body>Same as getDblVal, but returns the result rounded to the nearest integer.
	 * Note that getDblVal and getIntVal are not independent as getIntVal merely calls
	 * getDblVal.
	 * @return the next value as an int</body>
          </ownedComment>
          <ownedParameter xmi:id="_KluQQabYEeefQ6YhjiYj2A" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_KyL-8KbYEeefQ6YhjiYj2A" name="TDispMsg"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_K3FtEabYEeefQ6YhjiYj2A" name="" memberEnd="_K3FtEqbYEeefQ6YhjiYj2A _Kz2y4KbYEeefQ6YhjiYj2A">
        <ownedEnd xmi:id="_K3FtEqbYEeefQ6YhjiYj2A" name="" type="_Kks8kKbYEeefQ6YhjiYj2A" association="_K3FtEabYEeefQ6YhjiYj2A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_K3GUIabYEeefQ6YhjiYj2A" name="" memberEnd="_K3GUIqbYEeefQ6YhjiYj2A _Kz4oEKbYEeefQ6YhjiYj2A">
        <ownedEnd xmi:id="_K3GUIqbYEeefQ6YhjiYj2A" name="" type="_KlQ9QKbYEeefQ6YhjiYj2A" association="_K3GUIabYEeefQ6YhjiYj2A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_K3HiQKbYEeefQ6YhjiYj2A" name="" memberEnd="_K3HiQabYEeefQ6YhjiYj2A _Kz5PIabYEeefQ6YhjiYj2A">
        <ownedEnd xmi:id="_K3HiQabYEeefQ6YhjiYj2A" name="" type="_KlV1wKbYEeefQ6YhjiYj2A" association="_K3HiQKbYEeefQ6YhjiYj2A"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_KbCqQKbYEeefQ6YhjiYj2A" name="Ellipse2D">
      <packagedElement xmi:type="uml:Class" xmi:id="_KuACgKbYEeefQ6YhjiYj2A" name="Double"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_KbzfQKbYEeefQ6YhjiYj2A" name="Point2D">
      <packagedElement xmi:type="uml:Class" xmi:id="_Kut0MKbYEeefQ6YhjiYj2A" name="Double"/>
    </packagedElement>
    <profileApplication xmi:id="_IhfusKbYEeefQ6YhjiYj2A">
      <eAnnotations xmi:id="_Ih9BsKbYEeefQ6YhjiYj2A" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile"/>
    </profileApplication>
  </uml:Model>
  <UMLLabProfile:TargetLanguage xmi:id="_IiLEIKbYEeefQ6YhjiYj2A" base_Package="_H-6mEKbYEeefQ6YhjiYj2A">
    <languageName>java</languageName>
  </UMLLabProfile:TargetLanguage>
  <UMLLabProfile:Generics xmi:id="_Kf240KbYEeefQ6YhjiYj2A" genericsValue="IBallCmd" base_Element="_Kf1DoKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Generics xmi:id="_Kf9mgKbYEeefQ6YhjiYj2A" genericsValue="IBallCmd" base_Element="_Kf8YYKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Generics xmi:id="_KgFiUKbYEeefQ6YhjiYj2A" genericsValue="IBallCmd" base_Element="_KgDtIKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_KggZEKbYEeefQ6YhjiYj2A" base_Element="_KgfK8KbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Generics xmi:id="_KgrYMKbYEeefQ6YhjiYj2A" genericsValue="TDispMsg" base_Element="_KgpjAKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Generics xmi:id="_KgsmUKbYEeefQ6YhjiYj2A" genericsValue="TDispMsg" base_Element="_KgrYMabYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Generics xmi:id="_KgvCkKbYEeefQ6YhjiYj2A" genericsValue="TDispMsg" base_Element="_Kgt0cKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Generics xmi:id="_Kg3lcKbYEeefQ6YhjiYj2A" genericsValue="TDispMsg" base_Element="_Kg1wQKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Generics xmi:id="_KhIEIKbYEeefQ6YhjiYj2A" genericsValue="IBallCmd" base_Element="_KhG2AKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_KiJ-4KbYEeefQ6YhjiYj2A" base_Element="_KiIwwKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_KiMbIabYEeefQ6YhjiYj2A" base_Element="_KiKl8KbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Annotations xmi:id="_KiOQUKbYEeefQ6YhjiYj2A" base_Element="_KiKl8KbYEeefQ6YhjiYj2A">
    <annotations xmi:id="_KiOQUabYEeefQ6YhjiYj2A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_KiZ2gKbYEeefQ6YhjiYj2A" base_Element="_KiWMIKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Annotations xmi:id="_KibEoKbYEeefQ6YhjiYj2A" base_Element="_KiWMIKbYEeefQ6YhjiYj2A">
    <annotations xmi:id="_KibEoabYEeefQ6YhjiYj2A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_KifWEqbYEeefQ6YhjiYj2A" base_Element="_KievAKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_KihyUKbYEeefQ6YhjiYj2A" base_Element="_Kif9IKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Annotations xmi:id="_KiiZYKbYEeefQ6YhjiYj2A" base_Element="_Kif9IKbYEeefQ6YhjiYj2A">
    <annotations xmi:id="_KiiZYabYEeefQ6YhjiYj2A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Ki_sYKbYEeefQ6YhjiYj2A" base_Element="_Ki-eQKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Generics xmi:id="_KjHBIKbYEeefQ6YhjiYj2A" genericsValue="TDispMsg" base_Element="_KjFL8KbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Generics xmi:id="_KjLSkKbYEeefQ6YhjiYj2A" genericsValue="TDispMsg" base_Element="_KjKEcKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Generics xmi:id="_KjPkAKbYEeefQ6YhjiYj2A" genericsValue="TDispMsg" base_Element="_KjNu0KbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Generics xmi:id="_KjUcgKbYEeefQ6YhjiYj2A" genericsValue="TDispMsg" base_Element="_KjSAQKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Generics xmi:id="_KjbxQKbYEeefQ6YhjiYj2A" genericsValue="TDispMsg" base_Element="_KjZ8EKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Generics xmi:id="_KjjtEKbYEeefQ6YhjiYj2A" genericsValue="TDispMsg" base_Element="_Kjie8KbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Generics xmi:id="_Kjn-gKbYEeefQ6YhjiYj2A" genericsValue="TDispMsg" base_Element="_KjmwYKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Generics xmi:id="_KjsP8KbYEeefQ6YhjiYj2A" genericsValue="TDispMsg" base_Element="_KjrB0KbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Generics xmi:id="_KjxvgKbYEeefQ6YhjiYj2A" genericsValue="TDispMsg" base_Element="_KjwhYKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Generics xmi:id="_Kj2oAKbYEeefQ6YhjiYj2A" genericsValue="TDispMsg" base_Element="_Kj0y0KbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Generics xmi:id="_Kj7ggKbYEeefQ6YhjiYj2A" genericsValue="TDispMsg" base_Element="_Kj6SYKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Generics xmi:id="_Kj_x8KbYEeefQ6YhjiYj2A" genericsValue="TDispMsg" base_Element="_Kj-j0KbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Generics xmi:id="_KkFRgKbYEeefQ6YhjiYj2A" genericsValue="TDispMsg" base_Element="_KkEDYKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Generics xmi:id="_KkJi8KbYEeefQ6YhjiYj2A" genericsValue="TDispMsg" base_Element="_KkIU0KbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Generics xmi:id="_KkSF0KbYEeefQ6YhjiYj2A" genericsValue="TDispCmd" base_Element="_KkQQoKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Generics xmi:id="_KkWXQKbYEeefQ6YhjiYj2A" genericsValue="TDispMsg" base_Element="_KkUiEKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Generics xmi:id="_KkZakKbYEeefQ6YhjiYj2A" genericsValue="TDispMsg" base_Element="_KkYMcKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Generics xmi:id="_Kke6IKbYEeefQ6YhjiYj2A" genericsValue="TDispMsg" base_Element="_KkdsAKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Generics xmi:id="_Kkln0KbYEeefQ6YhjiYj2A" genericsValue="TDispMsg" base_Element="_KkjLkKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_KkoEEabYEeefQ6YhjiYj2A" base_Element="_KkndAKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Generics xmi:id="_KkuxwKbYEeefQ6YhjiYj2A" genericsValue="TDispMsg" base_Element="_Kks8kKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Generics xmi:id="_Kkx1EKbYEeefQ6YhjiYj2A" genericsValue="TDispMsg" base_Element="_Kkv_4KbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Kk1fcKbYEeefQ6YhjiYj2A" base_Element="_Kk0RUKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Annotations xmi:id="_Kk2GgKbYEeefQ6YhjiYj2A" base_Element="_Kk0RUKbYEeefQ6YhjiYj2A">
    <annotations xmi:id="_Kk2GgabYEeefQ6YhjiYj2A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_Kk6X8KbYEeefQ6YhjiYj2A" genericsValue="TDispMsg" base_Element="_Kk4iwKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Generics xmi:id="_Kk9bQKbYEeefQ6YhjiYj2A" genericsValue="TDispMsg" base_Element="_Kk8NIKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Generics xmi:id="_KlEI8KbYEeefQ6YhjiYj2A" genericsValue="TDispMsg" base_Element="_KlC60KbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_KlTZgqbYEeefQ6YhjiYj2A" base_Element="_KlSycKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_KlYSAKbYEeefQ6YhjiYj2A" base_Element="_KlXq8KbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Generics xmi:id="_KlltYKbYEeefQ6YhjiYj2A" genericsValue="TDispMsg" base_Element="_Klj4MKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Generics xmi:id="_KlowsKbYEeefQ6YhjiYj2A" genericsValue="TDispMsg" base_Element="_KlnikKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Generics xmi:id="_KlxTkKbYEeefQ6YhjiYj2A" genericsValue="TDropListItem, TPSDropListItem" base_Element="_KlwFcKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Generics xmi:id="_KmGqwKbYEeefQ6YhjiYj2A" genericsValue="TDropListItem, TPSDropListItem" base_Element="_KmE1kKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Reference xmi:id="_KrzqIKbYEeefQ6YhjiYj2A" base_Element="_Krv_wKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Reference xmi:id="_Kr1fUKbYEeefQ6YhjiYj2A" base_Element="_Kr0RMKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Reference xmi:id="_Kr2GYKbYEeefQ6YhjiYj2A" base_Element="_Kr1fUabYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Reference xmi:id="_Kr37kKbYEeefQ6YhjiYj2A" base_Element="_Kr3UgKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Reference xmi:id="_Kr4ioKbYEeefQ6YhjiYj2A" base_Element="_Kr37kabYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Reference xmi:id="_Kr5JsKbYEeefQ6YhjiYj2A" base_Element="_Kr4ioabYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Reference xmi:id="_Kr6X0KbYEeefQ6YhjiYj2A" base_Element="_Kr5JsabYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Reference xmi:id="_Kr6-4KbYEeefQ6YhjiYj2A" base_Element="_Kr6X0abYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Reference xmi:id="_KsBFgKbYEeefQ6YhjiYj2A" base_Element="_Kr6-4abYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Generics xmi:id="_KsIaQKbYEeefQ6YhjiYj2A" genericsValue="IBallCmd" base_Element="_KsGlEKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Generics xmi:id="_KsK2gKbYEeefQ6YhjiYj2A" genericsValue="IBallCmd" base_Element="_KsKPcabYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Generics xmi:id="_KsMEoKbYEeefQ6YhjiYj2A" genericsValue="IBallCmd" base_Element="_KsKPcqbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Generics xmi:id="_KsMrsqbYEeefQ6YhjiYj2A" genericsValue="IBallCmd" base_Element="_KsKPc6bYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Generics xmi:id="_KsPvAKbYEeefQ6YhjiYj2A" genericsValue="IBallCmd" base_Element="_KsOg4qbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Generics xmi:id="_KsUngKbYEeefQ6YhjiYj2A" genericsValue="IBallCmd" base_Element="_KsUAcqbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Generics xmi:id="_KsXq0KbYEeefQ6YhjiYj2A" genericsValue="IBallCmd" base_Element="_KsWcs6bYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Reference xmi:id="_KsbVMKbYEeefQ6YhjiYj2A" base_Element="_KsauIKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Generics xmi:id="_Kse_kKbYEeefQ6YhjiYj2A" genericsValue="TDispMsg" base_Element="_KsdxcqbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_KswsYqbYEeefQ6YhjiYj2A" base_Element="_KswFUKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Generics xmi:id="_Ksx6gKbYEeefQ6YhjiYj2A" genericsValue="IBallCmd" base_Element="_KswsYabYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Annotations xmi:id="_KsyhkKbYEeefQ6YhjiYj2A" base_Element="_KswFUKbYEeefQ6YhjiYj2A">
    <annotations xmi:id="_KsyhkabYEeefQ6YhjiYj2A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_Ks1k4KbYEeefQ6YhjiYj2A" genericsValue="TDispMsg" base_Element="_Ks0WwKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Generics xmi:id="_Ks3aEKbYEeefQ6YhjiYj2A" genericsValue="TDispMsg" base_Element="_Ks2L8abYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Generics xmi:id="_Ks4BIKbYEeefQ6YhjiYj2A" genericsValue="TDispMsg" base_Element="_Ks2L8qbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Ks52UKbYEeefQ6YhjiYj2A" base_Element="_Ks5PQKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Generics xmi:id="_Ks7EcKbYEeefQ6YhjiYj2A" genericsValue="TDispMsg" base_Element="_Ks5PQqbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Annotations xmi:id="_Ks7rgKbYEeefQ6YhjiYj2A" base_Element="_Ks5PQKbYEeefQ6YhjiYj2A">
    <annotations xmi:id="_Ks7rgabYEeefQ6YhjiYj2A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Ks8SkKbYEeefQ6YhjiYj2A" base_Element="_Ks7rgqbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Annotations xmi:id="_Ks85oKbYEeefQ6YhjiYj2A" base_Element="_Ks7rgqbYEeefQ6YhjiYj2A">
    <annotations xmi:id="_Ks85oabYEeefQ6YhjiYj2A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_Ks_V4KbYEeefQ6YhjiYj2A" genericsValue="IBallCmd" base_Element="_Ks-u0KbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Generics xmi:id="_KtDAQKbYEeefQ6YhjiYj2A" genericsValue="IBallCmd" base_Element="_KtBLEqbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Generics xmi:id="_KtEOYKbYEeefQ6YhjiYj2A" genericsValue="IBallCmd" base_Element="_KtDnUKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Generics xmi:id="_KtFcgKbYEeefQ6YhjiYj2A" genericsValue="IBallCmd" base_Element="_KtE1cabYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Generics xmi:id="_KtH4wKbYEeefQ6YhjiYj2A" genericsValue="IBallCmd" base_Element="_KtGqoabYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Reference xmi:id="_KtQboKbYEeefQ6YhjiYj2A" base_Element="_KtP0kKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_KtazsKbYEeefQ6YhjiYj2A" base_Element="_KtaMoKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Array xmi:id="_KtbawKbYEeefQ6YhjiYj2A" base_Element="_KtaMoabYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Reference xmi:id="_Ktd3AKbYEeefQ6YhjiYj2A" base_Element="_KtdP8KbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Reference xmi:id="_KtfFIKbYEeefQ6YhjiYj2A" base_Element="_Ktd3AabYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Reference xmi:id="_KtgTQKbYEeefQ6YhjiYj2A" base_Element="_KtfFIabYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Reference xmi:id="_Ktg6UKbYEeefQ6YhjiYj2A" base_Element="_KtgTQabYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Reference xmi:id="_KtiIcKbYEeefQ6YhjiYj2A" base_Element="_KthhYKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_KtkksKbYEeefQ6YhjiYj2A" base_Element="_KtivgKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Annotations xmi:id="_KtlLwKbYEeefQ6YhjiYj2A" base_Element="_KtivgKbYEeefQ6YhjiYj2A">
    <annotations xmi:id="_KtlLwabYEeefQ6YhjiYj2A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_KtqrUKbYEeefQ6YhjiYj2A" base_Element="_KtpdMKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Array xmi:id="_KtrSYKbYEeefQ6YhjiYj2A" base_Element="_KtpdMabYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Reference xmi:id="_Kt0cUKbYEeefQ6YhjiYj2A" base_Element="_Ktz1QKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Reference xmi:id="_Kt6i8KbYEeefQ6YhjiYj2A" base_Element="_Kt5U0abYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Reference xmi:id="_Kt9mQKbYEeefQ6YhjiYj2A" base_Element="_Kt8_MKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Reference xmi:id="_KuApkKbYEeefQ6YhjiYj2A" base_Element="_KuACgKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_KuCewKbYEeefQ6YhjiYj2A" base_Element="_KuB3sKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Annotations xmi:id="_KuCewabYEeefQ6YhjiYj2A" base_Element="_KuB3sKbYEeefQ6YhjiYj2A">
    <annotations xmi:id="_KuCewqbYEeefQ6YhjiYj2A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_KuNd4KbYEeefQ6YhjiYj2A" base_Element="_KuM20KbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Annotations xmi:id="_KuOsAKbYEeefQ6YhjiYj2A" base_Element="_KuM20KbYEeefQ6YhjiYj2A">
    <annotations xmi:id="_KuOsAabYEeefQ6YhjiYj2A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_KuRIQKbYEeefQ6YhjiYj2A" genericsValue="TDispMsg" base_Element="_KuQhMKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_KuS9cKbYEeefQ6YhjiYj2A" base_Element="_KuSWYKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Generics xmi:id="_KuULkKbYEeefQ6YhjiYj2A" genericsValue="TDispMsg" base_Element="_KuSWYqbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Annotations xmi:id="_KuULkabYEeefQ6YhjiYj2A" base_Element="_KuSWYKbYEeefQ6YhjiYj2A">
    <annotations xmi:id="_KuUyoKbYEeefQ6YhjiYj2A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_KuWn0KbYEeefQ6YhjiYj2A" genericsValue="TDispMsg" base_Element="_KuVZsKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_KuZEEKbYEeefQ6YhjiYj2A" base_Element="_KuYdAKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Generics xmi:id="_KuaSMKbYEeefQ6YhjiYj2A" genericsValue="TDispMsg" base_Element="_KuYdAqbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Annotations xmi:id="_Kua5QKbYEeefQ6YhjiYj2A" base_Element="_KuYdAKbYEeefQ6YhjiYj2A">
    <annotations xmi:id="_Kua5QabYEeefQ6YhjiYj2A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_KucHYKbYEeefQ6YhjiYj2A" genericsValue="TDispMsg" base_Element="_KubgUKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Kud8kKbYEeefQ6YhjiYj2A" base_Element="_KudVgKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Generics xmi:id="_KufKsKbYEeefQ6YhjiYj2A" genericsValue="TDispMsg" base_Element="_KudVgqbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Annotations xmi:id="_KufKsabYEeefQ6YhjiYj2A" base_Element="_KudVgKbYEeefQ6YhjiYj2A">
    <annotations xmi:id="_KufKsqbYEeefQ6YhjiYj2A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Kug_4KbYEeefQ6YhjiYj2A" base_Element="_KufxwKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Annotations xmi:id="_Kuhm8KbYEeefQ6YhjiYj2A" base_Element="_KufxwKbYEeefQ6YhjiYj2A">
    <annotations xmi:id="_Kuhm8abYEeefQ6YhjiYj2A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_KujcIKbYEeefQ6YhjiYj2A" base_Element="_Kui1EKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Generics xmi:id="_KukqQKbYEeefQ6YhjiYj2A" genericsValue="TDispMsg" base_Element="_KujcIabYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_KumfcabYEeefQ6YhjiYj2A" base_Element="_Kul4YKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Annotations xmi:id="_KunGgKbYEeefQ6YhjiYj2A" base_Element="_Kul4YKbYEeefQ6YhjiYj2A">
    <annotations xmi:id="_KunGgabYEeefQ6YhjiYj2A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Kuqw4KbYEeefQ6YhjiYj2A" base_Element="_Kuo7sKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Generics xmi:id="_Kur_AKbYEeefQ6YhjiYj2A" genericsValue="TDispMsg" base_Element="_KupiwKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Annotations xmi:id="_KutNIKbYEeefQ6YhjiYj2A" base_Element="_Kuo7sKbYEeefQ6YhjiYj2A">
    <annotations xmi:id="_KutNIabYEeefQ6YhjiYj2A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_KuubQKbYEeefQ6YhjiYj2A" base_Element="_Kut0MKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Generics xmi:id="_KuxekKbYEeefQ6YhjiYj2A" genericsValue="IBallCmd" base_Element="_KuwQc6bYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Generics xmi:id="_Ku0h4KbYEeefQ6YhjiYj2A" genericsValue="IBallCmd" base_Element="_KuzTwKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Ku1wAabYEeefQ6YhjiYj2A" base_Element="_Ku1I8KbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Generics xmi:id="_Ku2-IKbYEeefQ6YhjiYj2A" genericsValue="IBallCmd" base_Element="_Ku1wAKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Annotations xmi:id="_Ku3lMKbYEeefQ6YhjiYj2A" base_Element="_Ku1I8KbYEeefQ6YhjiYj2A">
    <annotations xmi:id="_Ku3lMabYEeefQ6YhjiYj2A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_Ku7PkKbYEeefQ6YhjiYj2A" genericsValue="IBallCmd" base_Element="_Ku6BcqbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Ku8dsKbYEeefQ6YhjiYj2A" base_Element="_Ku72oKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Annotations xmi:id="_Ku8dsabYEeefQ6YhjiYj2A" base_Element="_Ku72oKbYEeefQ6YhjiYj2A">
    <annotations xmi:id="_Ku8dsqbYEeefQ6YhjiYj2A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_Ku_hAKbYEeefQ6YhjiYj2A" genericsValue="TDispMsg" base_Element="_Ku-58KbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_KvAvIabYEeefQ6YhjiYj2A" base_Element="_KvAIEKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Generics xmi:id="_KvB9QKbYEeefQ6YhjiYj2A" genericsValue="TDispMsg" base_Element="_KvAvIKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Annotations xmi:id="_KvCkUKbYEeefQ6YhjiYj2A" base_Element="_KvAIEKbYEeefQ6YhjiYj2A">
    <annotations xmi:id="_KvCkUabYEeefQ6YhjiYj2A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_KvDLYKbYEeefQ6YhjiYj2A" base_Element="_KvCkUqbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Annotations xmi:id="_KvDycKbYEeefQ6YhjiYj2A" base_Element="_KvCkUqbYEeefQ6YhjiYj2A">
    <annotations xmi:id="_KvDycabYEeefQ6YhjiYj2A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_KvFnoKbYEeefQ6YhjiYj2A" genericsValue="TDispMsg" base_Element="_KvEZgKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_KvHc0KbYEeefQ6YhjiYj2A" base_Element="_KvG1wKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Generics xmi:id="_KvID4KbYEeefQ6YhjiYj2A" genericsValue="TDispMsg" base_Element="_KvG1wqbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Annotations xmi:id="_KvIq8KbYEeefQ6YhjiYj2A" base_Element="_KvG1wKbYEeefQ6YhjiYj2A">
    <annotations xmi:id="_KvIq8abYEeefQ6YhjiYj2A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_KvJSAabYEeefQ6YhjiYj2A" base_Element="_KvIq8qbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Annotations xmi:id="_KvJ5EKbYEeefQ6YhjiYj2A" base_Element="_KvIq8qbYEeefQ6YhjiYj2A">
    <annotations xmi:id="_KvJ5EabYEeefQ6YhjiYj2A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_KvLHMKbYEeefQ6YhjiYj2A" genericsValue="TDispMsg" base_Element="_KvKgIKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_KvNjcKbYEeefQ6YhjiYj2A" base_Element="_KvLuQKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Generics xmi:id="_KvOKgKbYEeefQ6YhjiYj2A" genericsValue="TDispMsg" base_Element="_KvMVUKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Annotations xmi:id="_KvOxkKbYEeefQ6YhjiYj2A" base_Element="_KvLuQKbYEeefQ6YhjiYj2A">
    <annotations xmi:id="_KvOxkabYEeefQ6YhjiYj2A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_KvPYoKbYEeefQ6YhjiYj2A" base_Element="_KvOxkqbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Annotations xmi:id="_KvPYoabYEeefQ6YhjiYj2A" base_Element="_KvOxkqbYEeefQ6YhjiYj2A">
    <annotations xmi:id="_KvP_sKbYEeefQ6YhjiYj2A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_KvRN0KbYEeefQ6YhjiYj2A" genericsValue="TDispMsg" base_Element="_KvQmwKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_KvTqEKbYEeefQ6YhjiYj2A" base_Element="_KvSb8KbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Generics xmi:id="_KvURIKbYEeefQ6YhjiYj2A" genericsValue="TDispMsg" base_Element="_KvSb8qbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Annotations xmi:id="_KvU4MKbYEeefQ6YhjiYj2A" base_Element="_KvSb8KbYEeefQ6YhjiYj2A">
    <annotations xmi:id="_KvU4MabYEeefQ6YhjiYj2A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_KvWtYKbYEeefQ6YhjiYj2A" genericsValue="TDispMsg" base_Element="_KvVfQKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_KvXUcqbYEeefQ6YhjiYj2A" base_Element="_KvWtYabYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Generics xmi:id="_KvX7gKbYEeefQ6YhjiYj2A" genericsValue="TDispMsg" base_Element="_KvXUcabYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Annotations xmi:id="_KvYikKbYEeefQ6YhjiYj2A" base_Element="_KvWtYabYEeefQ6YhjiYj2A">
    <annotations xmi:id="_KvYikabYEeefQ6YhjiYj2A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_KvZwsKbYEeefQ6YhjiYj2A" base_Element="_KvZJoKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Annotations xmi:id="_KvaXwKbYEeefQ6YhjiYj2A" base_Element="_KvZJoKbYEeefQ6YhjiYj2A">
    <annotations xmi:id="_KvaXwabYEeefQ6YhjiYj2A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_Kvc0AKbYEeefQ6YhjiYj2A" genericsValue="TDispMsg" base_Element="_Kvbl4KbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_KvepMKbYEeefQ6YhjiYj2A" base_Element="_KveCIKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Generics xmi:id="_Kvf3UKbYEeefQ6YhjiYj2A" genericsValue="TDispMsg" base_Element="_KveCIqbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Annotations xmi:id="_KvgeYKbYEeefQ6YhjiYj2A" base_Element="_KveCIKbYEeefQ6YhjiYj2A">
    <annotations xmi:id="_KvgeYabYEeefQ6YhjiYj2A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_KviTkKbYEeefQ6YhjiYj2A" genericsValue="IBallCmd" base_Element="_KvhsgKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_KvjhsabYEeefQ6YhjiYj2A" base_Element="_Kvi6oKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Generics xmi:id="_Kvkv0KbYEeefQ6YhjiYj2A" genericsValue="IBallCmd" base_Element="_KvjhsKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Annotations xmi:id="_KvlW4KbYEeefQ6YhjiYj2A" base_Element="_Kvi6oKbYEeefQ6YhjiYj2A">
    <annotations xmi:id="_KvlW4abYEeefQ6YhjiYj2A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Kvl98abYEeefQ6YhjiYj2A" base_Element="_KvlW4qbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Annotations xmi:id="_KvmlAKbYEeefQ6YhjiYj2A" base_Element="_KvlW4qbYEeefQ6YhjiYj2A">
    <annotations xmi:id="_KvmlAabYEeefQ6YhjiYj2A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_KvoaMKbYEeefQ6YhjiYj2A" genericsValue="TDispMsg" base_Element="_KvnzIKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Generics xmi:id="_KvqPYKbYEeefQ6YhjiYj2A" genericsValue="TDispMsg" base_Element="_KvpoUabYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Generics xmi:id="_Kvq2cKbYEeefQ6YhjiYj2A" genericsValue="TDispMsg" base_Element="_KvqPYabYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_KvsEkKbYEeefQ6YhjiYj2A" base_Element="_KvrdgKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Generics xmi:id="_KvsroKbYEeefQ6YhjiYj2A" genericsValue="TDispMsg" base_Element="_KvrdgqbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Annotations xmi:id="_KvtSsKbYEeefQ6YhjiYj2A" base_Element="_KvrdgKbYEeefQ6YhjiYj2A">
    <annotations xmi:id="_KvtSsabYEeefQ6YhjiYj2A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Kvt5wKbYEeefQ6YhjiYj2A" base_Element="_KvtSsqbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Annotations xmi:id="_Kvug0KbYEeefQ6YhjiYj2A" base_Element="_KvtSsqbYEeefQ6YhjiYj2A">
    <annotations xmi:id="_Kvug0abYEeefQ6YhjiYj2A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_Kvw9EKbYEeefQ6YhjiYj2A" genericsValue="IBallCmd" base_Element="_Kvvu8KbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_KvyyQKbYEeefQ6YhjiYj2A" base_Element="_KvxkIKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Annotations xmi:id="_KvyyQabYEeefQ6YhjiYj2A" base_Element="_KvxkIKbYEeefQ6YhjiYj2A">
    <annotations xmi:id="_KvyyQqbYEeefQ6YhjiYj2A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Kv0AYKbYEeefQ6YhjiYj2A" base_Element="_KvzZUKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Generics xmi:id="_Kv0ncKbYEeefQ6YhjiYj2A" genericsValue="IBallCmd" base_Element="_KvzZUqbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Annotations xmi:id="_Kv0ncabYEeefQ6YhjiYj2A" base_Element="_KvzZUKbYEeefQ6YhjiYj2A">
    <annotations xmi:id="_Kv1OgKbYEeefQ6YhjiYj2A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_Kv2coKbYEeefQ6YhjiYj2A" genericsValue="IBallCmd" base_Element="_Kv11kKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Kv3DsabYEeefQ6YhjiYj2A" base_Element="_Kv2coabYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Annotations xmi:id="_Kv3qwKbYEeefQ6YhjiYj2A" base_Element="_Kv2coabYEeefQ6YhjiYj2A">
    <annotations xmi:id="_Kv3qwabYEeefQ6YhjiYj2A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Kv4R0KbYEeefQ6YhjiYj2A" base_Element="_Kv3qwqbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Generics xmi:id="_Kv444KbYEeefQ6YhjiYj2A" genericsValue="IBallCmd" base_Element="_Kv3qxKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Annotations xmi:id="_Kv444abYEeefQ6YhjiYj2A" base_Element="_Kv3qwqbYEeefQ6YhjiYj2A">
    <annotations xmi:id="_Kv5f8KbYEeefQ6YhjiYj2A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_Kv6uEKbYEeefQ6YhjiYj2A" genericsValue="IBallCmd" base_Element="_Kv6HAKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Kv8jQKbYEeefQ6YhjiYj2A" base_Element="_Kv7VIKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Generics xmi:id="_Kv9KUKbYEeefQ6YhjiYj2A" genericsValue="IBallCmd" base_Element="_Kv78MabYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Annotations xmi:id="_Kv9xYKbYEeefQ6YhjiYj2A" base_Element="_Kv7VIKbYEeefQ6YhjiYj2A">
    <annotations xmi:id="_Kv9xYabYEeefQ6YhjiYj2A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Kv-YcKbYEeefQ6YhjiYj2A" base_Element="_Kv9xYqbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Annotations xmi:id="_Kv-_gKbYEeefQ6YhjiYj2A" base_Element="_Kv9xYqbYEeefQ6YhjiYj2A">
    <annotations xmi:id="_Kv-_gabYEeefQ6YhjiYj2A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_KwANoKbYEeefQ6YhjiYj2A" genericsValue="TDispMsg" base_Element="_Kv_mkKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_KwA0sqbYEeefQ6YhjiYj2A" base_Element="_KwANoabYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Generics xmi:id="_KwCC0KbYEeefQ6YhjiYj2A" genericsValue="TDispMsg" base_Element="_KwA0sabYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Annotations xmi:id="_KwCp4KbYEeefQ6YhjiYj2A" base_Element="_KwANoabYEeefQ6YhjiYj2A">
    <annotations xmi:id="_KwCp4abYEeefQ6YhjiYj2A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_KwEfEKbYEeefQ6YhjiYj2A" base_Element="_KwCp4qbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Annotations xmi:id="_KwFGIKbYEeefQ6YhjiYj2A" base_Element="_KwCp4qbYEeefQ6YhjiYj2A">
    <annotations xmi:id="_KwFGIabYEeefQ6YhjiYj2A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_KwIJcKbYEeefQ6YhjiYj2A" genericsValue="TDispMsg" base_Element="_KwGUQKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_KwJXkKbYEeefQ6YhjiYj2A" base_Element="_KwIwgKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Generics xmi:id="_KwJ-oKbYEeefQ6YhjiYj2A" genericsValue="TDispMsg" base_Element="_KwIwgqbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Annotations xmi:id="_KwKlsKbYEeefQ6YhjiYj2A" base_Element="_KwIwgKbYEeefQ6YhjiYj2A">
    <annotations xmi:id="_KwKlsabYEeefQ6YhjiYj2A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_KwLz0KbYEeefQ6YhjiYj2A" genericsValue="TDispMsg" base_Element="_KwKls6bYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_KwMa4KbYEeefQ6YhjiYj2A" base_Element="_KwLz0abYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Annotations xmi:id="_KwMa4abYEeefQ6YhjiYj2A" base_Element="_KwLz0abYEeefQ6YhjiYj2A">
    <annotations xmi:id="_KwMa4qbYEeefQ6YhjiYj2A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_KwOQEKbYEeefQ6YhjiYj2A" base_Element="_KwNpAKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Generics xmi:id="_KwO3IKbYEeefQ6YhjiYj2A" genericsValue="TDispMsg" base_Element="_KwOQEabYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_KwQFQqbYEeefQ6YhjiYj2A" base_Element="_KwQFQKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Generics xmi:id="_KwRTYKbYEeefQ6YhjiYj2A" genericsValue="TDispMsg" base_Element="_KwQFQabYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Annotations xmi:id="_KwRTYabYEeefQ6YhjiYj2A" base_Element="_KwQFQKbYEeefQ6YhjiYj2A">
    <annotations xmi:id="_KwRTYqbYEeefQ6YhjiYj2A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_KwR6cqbYEeefQ6YhjiYj2A" base_Element="_KwR6cKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Generics xmi:id="_KwShgKbYEeefQ6YhjiYj2A" genericsValue="TDispMsg" base_Element="_KwR6cabYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Annotations xmi:id="_KwTIkKbYEeefQ6YhjiYj2A" base_Element="_KwR6cKbYEeefQ6YhjiYj2A">
    <annotations xmi:id="_KwTIkabYEeefQ6YhjiYj2A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_KwU9wKbYEeefQ6YhjiYj2A" base_Element="_KwUWsKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Generics xmi:id="_KwWL4KbYEeefQ6YhjiYj2A" genericsValue="TDispMsg" base_Element="_KwU9wabYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Generics xmi:id="_KwYBEKbYEeefQ6YhjiYj2A" genericsValue="TDispMsg" base_Element="_KwWy8abYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Generics xmi:id="_KwZPMKbYEeefQ6YhjiYj2A" genericsValue="TDispMsg" base_Element="_KwYBEqbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Generics xmi:id="_KwhyEKbYEeefQ6YhjiYj2A" genericsValue="TDispMsg" base_Element="_KwhLAKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Generics xmi:id="_KwjAMKbYEeefQ6YhjiYj2A" genericsValue="TDispMsg" base_Element="_KwiZIKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Reference xmi:id="_Kwk1YKbYEeefQ6YhjiYj2A" base_Element="_KwkOUKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Reference xmi:id="_KwlccKbYEeefQ6YhjiYj2A" base_Element="_Kwk1YabYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Reference xmi:id="_KwmqkKbYEeefQ6YhjiYj2A" base_Element="_KwlccabYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Reference xmi:id="_Kwn4sKbYEeefQ6YhjiYj2A" base_Element="_KwmqkabYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Reference xmi:id="_KwofwKbYEeefQ6YhjiYj2A" base_Element="_Kwn4sabYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Reference xmi:id="_Kwpt4KbYEeefQ6YhjiYj2A" base_Element="_KwpG0KbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Reference xmi:id="_KwqU8KbYEeefQ6YhjiYj2A" base_Element="_Kwpt4abYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Reference xmi:id="_Kwq8AKbYEeefQ6YhjiYj2A" base_Element="_KwqU8abYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Reference xmi:id="_KwrjEabYEeefQ6YhjiYj2A" base_Element="_KwrjEKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Reference xmi:id="_KwsxMKbYEeefQ6YhjiYj2A" base_Element="_KwsKIKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Reference xmi:id="_KwtYQKbYEeefQ6YhjiYj2A" base_Element="_KwsxMabYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Generics xmi:id="_KwxCoKbYEeefQ6YhjiYj2A" genericsValue="TDropListItem, TPSDropListItem" base_Element="_Kwv0gabYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Generics xmi:id="_KxRY8KbYEeefQ6YhjiYj2A" genericsValue="IBallCmd" base_Element="_KxQK0qbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_KxZUwKbYEeefQ6YhjiYj2A" base_Element="_KxYtsKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Annotations xmi:id="_KxZUwabYEeefQ6YhjiYj2A" base_Element="_KxYtsKbYEeefQ6YhjiYj2A">
    <annotations xmi:id="_KxZUwqbYEeefQ6YhjiYj2A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Kxc_IKbYEeefQ6YhjiYj2A" base_Element="_KxcYEKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_KxfbYqbYEeefQ6YhjiYj2A" base_Element="_Kxe0UKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Array xmi:id="_KxgCcqbYEeefQ6YhjiYj2A" base_Element="_Kxe0UqbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Kxh3oKbYEeefQ6YhjiYj2A" base_Element="_KxgpgKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Annotations xmi:id="_KxiesKbYEeefQ6YhjiYj2A" base_Element="_KxgpgKbYEeefQ6YhjiYj2A">
    <annotations xmi:id="_KxiesabYEeefQ6YhjiYj2A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_KxmJEKbYEeefQ6YhjiYj2A" base_Element="_KxliAKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Array xmi:id="_KxmwIKbYEeefQ6YhjiYj2A" base_Element="_KxliAqbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_KxnXM6bYEeefQ6YhjiYj2A" base_Element="_KxmwIabYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Annotations xmi:id="_Kxn-QKbYEeefQ6YhjiYj2A" base_Element="_KxmwIabYEeefQ6YhjiYj2A">
    <annotations xmi:id="_Kxn-QabYEeefQ6YhjiYj2A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_KxrBkqbYEeefQ6YhjiYj2A" base_Element="_KxqagKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Annotations xmi:id="_KxrooKbYEeefQ6YhjiYj2A" base_Element="_KxqagKbYEeefQ6YhjiYj2A">
    <annotations xmi:id="_KxrooabYEeefQ6YhjiYj2A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_KxvTAKbYEeefQ6YhjiYj2A" base_Element="_Kxur8KbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Array xmi:id="_KxvTA6bYEeefQ6YhjiYj2A" base_Element="_Kxur86bYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Kx1ZoabYEeefQ6YhjiYj2A" base_Element="_KxyWUKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Annotations xmi:id="_Kx2AsKbYEeefQ6YhjiYj2A" base_Element="_KxyWUKbYEeefQ6YhjiYj2A">
    <annotations xmi:id="_Kx2nwKbYEeefQ6YhjiYj2A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Kx9VcKbYEeefQ6YhjiYj2A" base_Element="_Kx8uYKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Annotations xmi:id="_Kx98gKbYEeefQ6YhjiYj2A" base_Element="_Kx8uYKbYEeefQ6YhjiYj2A">
    <annotations xmi:id="_Kx98gabYEeefQ6YhjiYj2A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Kx-jkqbYEeefQ6YhjiYj2A" base_Element="_Kx98gqbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Annotations xmi:id="_Kx_KoKbYEeefQ6YhjiYj2A" base_Element="_Kx98gqbYEeefQ6YhjiYj2A">
    <annotations xmi:id="_Kx_xsKbYEeefQ6YhjiYj2A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_KyLX4KbYEeefQ6YhjiYj2A" genericsValue="IObserver&lt;TDispMsg>" base_Element="_KyJisabYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Reference xmi:id="_KyMmAKbYEeefQ6YhjiYj2A" base_Element="_KyL-8KbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Reference xmi:id="_KyN0IKbYEeefQ6YhjiYj2A" base_Element="_KyNNEabYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Generics xmi:id="_KyPpUKbYEeefQ6YhjiYj2A" genericsValue="TDispMsg" base_Element="_KyPCQabYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Reference xmi:id="_KyRegKbYEeefQ6YhjiYj2A" base_Element="_KyQ3cKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_KyXlIabYEeefQ6YhjiYj2A" base_Element="_KyW-EKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Annotations xmi:id="_KyYMMKbYEeefQ6YhjiYj2A" base_Element="_KyW-EKbYEeefQ6YhjiYj2A">
    <annotations xmi:id="_KyYMMabYEeefQ6YhjiYj2A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Kye54KbYEeefQ6YhjiYj2A" base_Element="_KyeS0KbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Annotations xmi:id="_Kye54abYEeefQ6YhjiYj2A" base_Element="_KyeS0KbYEeefQ6YhjiYj2A">
    <annotations xmi:id="_Kye54qbYEeefQ6YhjiYj2A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_KylnkKbYEeefQ6YhjiYj2A" base_Element="_KylAgKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Reference xmi:id="_KymOoKbYEeefQ6YhjiYj2A" base_Element="_KylnkabYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Ky0REKbYEeefQ6YhjiYj2A" base_Element="_KyzqAKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Generics xmi:id="_Ky04IabYEeefQ6YhjiYj2A" genericsValue="IStrategyFac&lt;IBallCmd>, IPaintStrategyFac" base_Element="_Ky04IKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Ky1fMKbYEeefQ6YhjiYj2A" base_Element="_Ky04IKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Ky2tUKbYEeefQ6YhjiYj2A" base_Element="_Ky2GQKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Ky3UYabYEeefQ6YhjiYj2A" base_Element="_Ky2tUabYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Ky4igKbYEeefQ6YhjiYj2A" base_Element="_Ky37cKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Ky4ig6bYEeefQ6YhjiYj2A" base_Element="_Ky4igabYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Ky5JkqbYEeefQ6YhjiYj2A" base_Element="_Ky5JkKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Generics xmi:id="_Ky6XsKbYEeefQ6YhjiYj2A" genericsValue="IBallCmd" base_Element="_Ky5woKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Ky8M4KbYEeefQ6YhjiYj2A" base_Element="_Ky5woKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Generics xmi:id="_Ky9bAKbYEeefQ6YhjiYj2A" genericsValue="IBallCmd" base_Element="_Ky8M4abYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Ky-CEKbYEeefQ6YhjiYj2A" base_Element="_Ky8M4abYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Ky-pIabYEeefQ6YhjiYj2A" base_Element="_Ky-CEabYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Generics xmi:id="_Ky_3QKbYEeefQ6YhjiYj2A" genericsValue="IBallCmd" base_Element="_Ky_QMKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Ky_3QqbYEeefQ6YhjiYj2A" base_Element="_Ky_QMKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_KzBscKbYEeefQ6YhjiYj2A" base_Element="_KzBFYKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_KzBscqbYEeefQ6YhjiYj2A" base_Element="_KzBscabYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Generics xmi:id="_KzC6kKbYEeefQ6YhjiYj2A" genericsValue="TDispMsg" base_Element="_KzCTgKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_KzC6kabYEeefQ6YhjiYj2A" base_Element="_KzCTgKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Generics xmi:id="_KzDhoabYEeefQ6YhjiYj2A" genericsValue="TDispMsg" base_Element="_KzDhoKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_KzEIsKbYEeefQ6YhjiYj2A" base_Element="_KzDhoKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_KzEvwabYEeefQ6YhjiYj2A" base_Element="_KzEvwKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_KzF94KbYEeefQ6YhjiYj2A" base_Element="_KzFW0KbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_KzGk8KbYEeefQ6YhjiYj2A" base_Element="_KzF94abYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_KzHzEKbYEeefQ6YhjiYj2A" base_Element="_KzHMAKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_KzJBMKbYEeefQ6YhjiYj2A" base_Element="_KzIaIKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Generics xmi:id="_KzLdcKbYEeefQ6YhjiYj2A" genericsValue="IBallCmd" base_Element="_KzJoQKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_KzMEgKbYEeefQ6YhjiYj2A" base_Element="_KzJoQKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_KzMrkKbYEeefQ6YhjiYj2A" base_Element="_KzMEgabYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_KzNSoKbYEeefQ6YhjiYj2A" base_Element="_KzMrkabYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_KzOgwKbYEeefQ6YhjiYj2A" base_Element="_KzN5sKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_KzPH0qbYEeefQ6YhjiYj2A" base_Element="_KzPH0KbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_KzQV8KbYEeefQ6YhjiYj2A" base_Element="_KzPu4KbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Array xmi:id="_KzQ9AKbYEeefQ6YhjiYj2A" dimensions="1" base_Element="_KzQV8abYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_KzRkEKbYEeefQ6YhjiYj2A" base_Element="_KzQV8abYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_KzSyMabYEeefQ6YhjiYj2A" base_Element="_KzSLIKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_KzTZQKbYEeefQ6YhjiYj2A" base_Element="_KzSyMqbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_KzUAUKbYEeefQ6YhjiYj2A" base_Element="_KzTZQabYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_KzUnYKbYEeefQ6YhjiYj2A" base_Element="_KzUAUabYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_KzVOcKbYEeefQ6YhjiYj2A" base_Element="_KzUnYabYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_KzV1gKbYEeefQ6YhjiYj2A" base_Element="_KzVOcabYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Array xmi:id="_KzWckabYEeefQ6YhjiYj2A" base_Element="_KzV1gabYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_KzWckqbYEeefQ6YhjiYj2A" base_Element="_KzV1gabYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_KzXqsKbYEeefQ6YhjiYj2A" base_Element="_KzXDoKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_KzYRwabYEeefQ6YhjiYj2A" base_Element="_KzXqsabYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_KzZf4KbYEeefQ6YhjiYj2A" base_Element="_KzY40KbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_KzaG8KbYEeefQ6YhjiYj2A" base_Element="_KzZf4abYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_KzaG8qbYEeefQ6YhjiYj2A" base_Element="_KzaG8abYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_KzbVEKbYEeefQ6YhjiYj2A" base_Element="_KzauAKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Kzb8IKbYEeefQ6YhjiYj2A" base_Element="_KzbVEabYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_KzcjMKbYEeefQ6YhjiYj2A" base_Element="_Kzb8IabYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_KzdKQKbYEeefQ6YhjiYj2A" base_Element="_KzcjMabYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_KzeYYKbYEeefQ6YhjiYj2A" base_Element="_KzdxUKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Kze_cabYEeefQ6YhjiYj2A" base_Element="_KzeYYabYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_KzgNkKbYEeefQ6YhjiYj2A" base_Element="_KzfmgKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_KzhbsKbYEeefQ6YhjiYj2A" base_Element="_Kzg0oKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Kzip0KbYEeefQ6YhjiYj2A" base_Element="_KziCwKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Kzj38abYEeefQ6YhjiYj2A" base_Element="_KzjQ4KbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_KzlGEKbYEeefQ6YhjiYj2A" base_Element="_KzkfAKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_KzmUMKbYEeefQ6YhjiYj2A" base_Element="_KzltIKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Kzm7QabYEeefQ6YhjiYj2A" base_Element="_KzmUMabYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_KzoJYKbYEeefQ6YhjiYj2A" base_Element="_KzniUKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_KzowcKbYEeefQ6YhjiYj2A" base_Element="_KzoJYabYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_KzpXgKbYEeefQ6YhjiYj2A" base_Element="_KzowcabYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Kzp-kabYEeefQ6YhjiYj2A" base_Element="_KzpXgabYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_KzrMsKbYEeefQ6YhjiYj2A" base_Element="_KzqloKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_KzrzwabYEeefQ6YhjiYj2A" base_Element="_KzrMsabYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Kzsa0qbYEeefQ6YhjiYj2A" base_Element="_Kzsa0KbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_KztB4qbYEeefQ6YhjiYj2A" base_Element="_KztB4KbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_KzuQAKbYEeefQ6YhjiYj2A" base_Element="_Kzto8KbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Kzu3EabYEeefQ6YhjiYj2A" base_Element="_KzuQAabYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_KzwFMKbYEeefQ6YhjiYj2A" base_Element="_KzveIKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_KzwsQKbYEeefQ6YhjiYj2A" base_Element="_KzwFMabYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Kzx6YKbYEeefQ6YhjiYj2A" base_Element="_KzwsQabYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_KzyhcabYEeefQ6YhjiYj2A" base_Element="_Kzx6YabYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_KzzvkabYEeefQ6YhjiYj2A" base_Element="_KzzIgKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Kz09sKbYEeefQ6YhjiYj2A" base_Element="_Kz0WoKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Kz09s6bYEeefQ6YhjiYj2A" base_Element="_Kz09sabYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Generics xmi:id="_Kz2L0KbYEeefQ6YhjiYj2A" genericsValue="TDispMsg" base_Element="_Kz1kwKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Kz2L0abYEeefQ6YhjiYj2A" base_Element="_Kz1kwKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Generics xmi:id="_Kz4BAKbYEeefQ6YhjiYj2A" genericsValue="TDispMsg" base_Element="_Kz2y4KbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Kz4BAabYEeefQ6YhjiYj2A" base_Element="_Kz2y4KbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Kz5PIKbYEeefQ6YhjiYj2A" base_Element="_Kz4oEKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Kz52MabYEeefQ6YhjiYj2A" base_Element="_Kz5PIabYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Kz7EUKbYEeefQ6YhjiYj2A" base_Element="_Kz6dQKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Kz7rYKbYEeefQ6YhjiYj2A" base_Element="_Kz7EUabYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Kz8ScKbYEeefQ6YhjiYj2A" base_Element="_Kz7rYabYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Kz85gKbYEeefQ6YhjiYj2A" base_Element="_Kz8ScabYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Generics xmi:id="_Kz-HoKbYEeefQ6YhjiYj2A" genericsValue="TDropListItem, TPSDropListItem" base_Element="_Kz9gkabYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Kz-HoabYEeefQ6YhjiYj2A" base_Element="_Kz9gkabYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Kz-usqbYEeefQ6YhjiYj2A" base_Element="_Kz-usKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Kz_VwabYEeefQ6YhjiYj2A" base_Element="_Kz_VwKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Kz_80KbYEeefQ6YhjiYj2A" base_Element="_Kz_VwqbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_K0Aj4KbYEeefQ6YhjiYj2A" base_Element="_Kz_80abYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_K0Aj4qbYEeefQ6YhjiYj2A" base_Element="_K0Aj4abYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_K0BK8abYEeefQ6YhjiYj2A" base_Element="_K0Aj46bYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_K0ByAKbYEeefQ6YhjiYj2A" base_Element="_K0BK8qbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_K0CZEabYEeefQ6YhjiYj2A" base_Element="_K0CZEKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_K0DAIKbYEeefQ6YhjiYj2A" base_Element="_K0CZEqbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Generics xmi:id="_K0DnMKbYEeefQ6YhjiYj2A" genericsValue="TDropListItem" base_Element="_K0DAIabYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_K0EOQKbYEeefQ6YhjiYj2A" base_Element="_K0DAIabYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Generics xmi:id="_K0E1UKbYEeefQ6YhjiYj2A" genericsValue="TDropListItem" base_Element="_K0EOQabYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_K0FcYKbYEeefQ6YhjiYj2A" base_Element="_K0EOQabYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_K0FcYqbYEeefQ6YhjiYj2A" base_Element="_K0FcYabYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_K0GDcabYEeefQ6YhjiYj2A" base_Element="_K0GDcKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_K0GqgabYEeefQ6YhjiYj2A" base_Element="_K0GqgKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_K0HRkKbYEeefQ6YhjiYj2A" base_Element="_K0GqgqbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_K0IfsKbYEeefQ6YhjiYj2A" base_Element="_K0HRkabYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_K0JGwKbYEeefQ6YhjiYj2A" base_Element="_K0IfsabYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_K0Jt0KbYEeefQ6YhjiYj2A" base_Element="_K0JGwabYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_K0KU4KbYEeefQ6YhjiYj2A" base_Element="_K0Jt0abYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_K0K78KbYEeefQ6YhjiYj2A" base_Element="_K0KU4abYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Generics xmi:id="_K0LjAKbYEeefQ6YhjiYj2A" genericsValue="TPSDropListItem" base_Element="_K0K78abYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_K0MKEKbYEeefQ6YhjiYj2A" base_Element="_K0K78abYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Reference xmi:id="_K2iTcKbYEeefQ6YhjiYj2A" base_Element="_K2hsYKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Reference xmi:id="_K2i6gKbYEeefQ6YhjiYj2A" base_Element="_K2iTcabYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Reference xmi:id="_K2jhkKbYEeefQ6YhjiYj2A" base_Element="_K2i6gabYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Reference xmi:id="_K2kIoKbYEeefQ6YhjiYj2A" base_Element="_K2jhkabYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Reference xmi:id="_K2kvsqbYEeefQ6YhjiYj2A" base_Element="_K2kvsKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Reference xmi:id="_K2l90KbYEeefQ6YhjiYj2A" base_Element="_K2lWwKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Reference xmi:id="_K2mk4KbYEeefQ6YhjiYj2A" base_Element="_K2l90abYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Reference xmi:id="_K2nzAKbYEeefQ6YhjiYj2A" base_Element="_K2mk4abYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Reference xmi:id="_K2poMKbYEeefQ6YhjiYj2A" base_Element="_K2nzAabYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Reference xmi:id="_K2q2UKbYEeefQ6YhjiYj2A" base_Element="_K2poMabYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Reference xmi:id="_K2rdYKbYEeefQ6YhjiYj2A" base_Element="_K2q2UabYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Reference xmi:id="_K2sEcKbYEeefQ6YhjiYj2A" base_Element="_K2rdYabYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Reference xmi:id="_K2srgKbYEeefQ6YhjiYj2A" base_Element="_K2sEcabYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Reference xmi:id="_K2tSkKbYEeefQ6YhjiYj2A" base_Element="_K2srgabYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Reference xmi:id="_K2t5oKbYEeefQ6YhjiYj2A" base_Element="_K2tSkabYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Reference xmi:id="_K2ugsqbYEeefQ6YhjiYj2A" base_Element="_K2ugsKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Reference xmi:id="_K2vu0KbYEeefQ6YhjiYj2A" base_Element="_K2vHwKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Reference xmi:id="_K2wV4KbYEeefQ6YhjiYj2A" base_Element="_K2vu0abYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Reference xmi:id="_K2w88KbYEeefQ6YhjiYj2A" base_Element="_K2wV4abYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Reference xmi:id="_K2xkAKbYEeefQ6YhjiYj2A" base_Element="_K2w88abYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Reference xmi:id="_K2yyIKbYEeefQ6YhjiYj2A" base_Element="_K2xkAabYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Reference xmi:id="_K2zZMKbYEeefQ6YhjiYj2A" base_Element="_K2yyIabYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Reference xmi:id="_K20AQKbYEeefQ6YhjiYj2A" base_Element="_K2zZMabYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Reference xmi:id="_K20nUKbYEeefQ6YhjiYj2A" base_Element="_K20AQabYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Reference xmi:id="_K21OYKbYEeefQ6YhjiYj2A" base_Element="_K20nUabYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Reference xmi:id="_K211cKbYEeefQ6YhjiYj2A" base_Element="_K21OYabYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Reference xmi:id="_K23DkKbYEeefQ6YhjiYj2A" base_Element="_K22cgKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Reference xmi:id="_K23qoKbYEeefQ6YhjiYj2A" base_Element="_K23DkabYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Reference xmi:id="_K24RsKbYEeefQ6YhjiYj2A" base_Element="_K23qoabYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Reference xmi:id="_K244wKbYEeefQ6YhjiYj2A" base_Element="_K24RsabYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Reference xmi:id="_K25f0KbYEeefQ6YhjiYj2A" base_Element="_K244wabYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Reference xmi:id="_K26G4KbYEeefQ6YhjiYj2A" base_Element="_K25f0abYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Reference xmi:id="_K26t8KbYEeefQ6YhjiYj2A" base_Element="_K26G4abYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Reference xmi:id="_K27VAKbYEeefQ6YhjiYj2A" base_Element="_K26t8abYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Reference xmi:id="_K28jIKbYEeefQ6YhjiYj2A" base_Element="_K27VAabYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Reference xmi:id="_K29KMKbYEeefQ6YhjiYj2A" base_Element="_K28jIabYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Reference xmi:id="_K29xQKbYEeefQ6YhjiYj2A" base_Element="_K29KMabYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Reference xmi:id="_K2-YUKbYEeefQ6YhjiYj2A" base_Element="_K29xQabYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Reference xmi:id="_K2-_YKbYEeefQ6YhjiYj2A" base_Element="_K2-YUabYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Reference xmi:id="_K2_mcKbYEeefQ6YhjiYj2A" base_Element="_K2-_YabYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Reference xmi:id="_K3ANgKbYEeefQ6YhjiYj2A" base_Element="_K2_mcabYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Reference xmi:id="_K3ANg6bYEeefQ6YhjiYj2A" base_Element="_K3ANgabYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Reference xmi:id="_K3A0kqbYEeefQ6YhjiYj2A" base_Element="_K3A0kKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Reference xmi:id="_K3BboKbYEeefQ6YhjiYj2A" base_Element="_K3A0k6bYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Reference xmi:id="_K3FGAKbYEeefQ6YhjiYj2A" base_Element="_K3BboabYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Reference xmi:id="_K3FtEKbYEeefQ6YhjiYj2A" base_Element="_K3FGAabYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Reference xmi:id="_K3GUIKbYEeefQ6YhjiYj2A" base_Element="_K3FtEabYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Reference xmi:id="_K3G7MKbYEeefQ6YhjiYj2A" base_Element="_K3GUIabYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Reference xmi:id="_K3HiQqbYEeefQ6YhjiYj2A" base_Element="_K3HiQKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Reference xmi:id="_K3IwYKbYEeefQ6YhjiYj2A" base_Element="_K3IJUKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Reference xmi:id="_K3JXcKbYEeefQ6YhjiYj2A" base_Element="_K3IwYabYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Reference xmi:id="_K3J-gKbYEeefQ6YhjiYj2A" base_Element="_K3JXcabYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Reference xmi:id="_K3KlkKbYEeefQ6YhjiYj2A" base_Element="_K3J-gabYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Reference xmi:id="_K3LMoKbYEeefQ6YhjiYj2A" base_Element="_K3KlkabYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Reference xmi:id="_K3LzsKbYEeefQ6YhjiYj2A" base_Element="_K3LMoabYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Reference xmi:id="_K3MawqbYEeefQ6YhjiYj2A" base_Element="_K3MawKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Reference xmi:id="_K3No4KbYEeefQ6YhjiYj2A" base_Element="_K3NB0KbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Reference xmi:id="_K3OP8KbYEeefQ6YhjiYj2A" base_Element="_K3No4abYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Reference xmi:id="_K3O3AKbYEeefQ6YhjiYj2A" base_Element="_K3OP8abYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Reference xmi:id="_K3PeEKbYEeefQ6YhjiYj2A" base_Element="_K3O3AabYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Reference xmi:id="_K3QsMKbYEeefQ6YhjiYj2A" base_Element="_K3QFIKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Reference xmi:id="_K3RTQKbYEeefQ6YhjiYj2A" base_Element="_K3QsMabYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Reference xmi:id="_K3R6UKbYEeefQ6YhjiYj2A" base_Element="_K3RTQabYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Reference xmi:id="_K3ShYKbYEeefQ6YhjiYj2A" base_Element="_K3R6UabYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Reference xmi:id="_K3TvgKbYEeefQ6YhjiYj2A" base_Element="_K3TIcKbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Reference xmi:id="_K3UWkKbYEeefQ6YhjiYj2A" base_Element="_K3TvgabYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Reference xmi:id="_K3U9oKbYEeefQ6YhjiYj2A" base_Element="_K3UWkabYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Reference xmi:id="_K3VksKbYEeefQ6YhjiYj2A" base_Element="_K3U9oabYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Reference xmi:id="_K3WLwabYEeefQ6YhjiYj2A" base_Element="_K3VksabYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Reference xmi:id="_K3XZ4KbYEeefQ6YhjiYj2A" base_Element="_K3Wy0KbYEeefQ6YhjiYj2A"/>
  <UMLLabProfile:Reference xmi:id="_K3YA8KbYEeefQ6YhjiYj2A" base_Element="_K3XZ4abYEeefQ6YhjiYj2A"/>
</xmi:XMI>
