<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- NewPage -->
<html lang="en">
<head>
<!-- Generated by javadoc (1.8.0_121) on Mon Oct 23 00:19:46 CDT 2017 -->
<title>ClientModel</title>
<meta name="date" content="2017-10-23">
<link rel="stylesheet" type="text/css" href="../../stylesheet.css" title="Style">
<script type="text/javascript" src="../../script.js"></script>
</head>
<body>
<script type="text/javascript"><!--
    try {
        if (location.href.indexOf('is-external=true') == -1) {
            parent.document.title="ClientModel";
        }
    }
    catch(err) {
    }
//-->
var methods = {"i0":10,"i1":10,"i2":10,"i3":10,"i4":10,"i5":10,"i6":10,"i7":10,"i8":10};
var tabs = {65535:["t0","All Methods"],2:["t2","Instance Methods"],8:["t4","Concrete Methods"]};
var altColor = "altColor";
var rowColor = "rowColor";
var tableTab = "tableTab";
var activeTableTab = "activeTableTab";
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a name="navbar.top">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
<a name="navbar.top.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/ClientModel.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../index-files/index-1.html">Index</a></li>
<li><a href="../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li>Prev&nbsp;Class</li>
<li><a href="../../client/model/IViewAdapter.html" title="interface in client.model"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../../index.html?client/model/ClientModel.html" target="_top">Frames</a></li>
<li><a href="ClientModel.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_top">
<li><a href="../../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a name="skip.navbar.top">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
<!-- ======== START OF CLASS DATA ======== -->
<div class="header">
<div class="subTitle">client.model</div>
<h2 title="Class ClientModel" class="title">Class ClientModel</h2>
</div>
<div class="contentContainer">
<ul class="inheritance">
<li>java.lang.Object</li>
<li>
<ul class="inheritance">
<li>client.model.ClientModel</li>
</ul>
</li>
</ul>
<div class="description">
<ul class="blockList">
<li class="blockList">
<dl>
<dt>All Implemented Interfaces:</dt>
<dd><a href="../../provided/client/model/IClientModel.html" title="interface in provided.client.model">IClientModel</a></dd>
</dl>
<hr>
<br>
<pre>public class <span class="typeNameLabel">ClientModel</span>
extends java.lang.Object
implements <a href="../../provided/client/model/IClientModel.html" title="interface in provided.client.model">IClientModel</a></pre>
<div class="block">The model for client</div>
<dl>
<dt><span class="simpleTagLabel">Author:</span></dt>
<dd>yt30, zx17</dd>
</dl>
</li>
</ul>
</div>
<div class="summary">
<ul class="blockList">
<li class="blockList">
<!-- ======== CONSTRUCTOR SUMMARY ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor.summary">
<!--   -->
</a>
<h3>Constructor Summary</h3>
<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colOne" scope="col">Constructor and Description</th>
</tr>
<tr class="altColor">
<td class="colOne"><code><span class="memberNameLink"><a href="../../client/model/ClientModel.html#ClientModel-client.model.IViewAdapter-">ClientModel</a></span>(<a href="../../client/model/IViewAdapter.html" title="interface in client.model">IViewAdapter</a>&nbsp;_clientView)</code>
<div class="block">Constructor of client model;</div>
</td>
</tr>
</table>
</li>
</ul>
<!-- ========== METHOD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="method.summary">
<!--   -->
</a>
<h3>Method Summary</h3>
<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Method and Description</th>
</tr>
<tr id="i0" class="altColor">
<td class="colFirst"><code><a href="../../provided/client/model/taskUtils/ITaskFactory.html" title="interface in provided.client.model.taskUtils">ITaskFactory</a>&lt;? extends java.lang.Object&gt;</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../client/model/ClientModel.html#combineTaskFactory-provided.client.model.taskUtils.ITaskFactory-provided.client.model.taskUtils.ITaskFactory-java.lang.String-">combineTaskFactory</a></span>(<a href="../../provided/client/model/taskUtils/ITaskFactory.html" title="interface in provided.client.model.taskUtils">ITaskFactory</a>&lt;?&gt;&nbsp;tf1,
                  <a href="../../provided/client/model/taskUtils/ITaskFactory.html" title="interface in provided.client.model.taskUtils">ITaskFactory</a>&lt;?&gt;&nbsp;tf2,
                  java.lang.String&nbsp;param)</code>
<div class="block">This method combines two task factory into one.</div>
</td>
</tr>
<tr id="i1" class="rowColor">
<td class="colFirst"><code>java.lang.String</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../client/model/ClientModel.html#connectTo-java.lang.String-">connectTo</a></span>(java.lang.String&nbsp;remoteHost)</code>
<div class="block">Connects to the given remote host's Registry and retrieves the stub to the 
 ICompute object bound to the ICompute.BOUND_NAME name in the remote Registry 
 on port IRMI_Defs.REGISTRY_PORT.</div>
</td>
</tr>
<tr id="i2" class="altColor">
<td class="colFirst"><code>java.lang.String</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../client/model/ClientModel.html#getDefaultRemoteHost--">getDefaultRemoteHost</a></span>()</code>
<div class="block">Getter for default remote host</div>
</td>
</tr>
<tr id="i3" class="rowColor">
<td class="colFirst"><code>&lt;T&gt;&nbsp;<a href="../../provided/compute/ITask.html" title="interface in provided.compute">ITask</a>&lt;T&gt;</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../client/model/ClientModel.html#loadTask-provided.client.model.taskUtils.ITaskFactory-java.lang.String-">loadTask</a></span>(<a href="../../provided/client/model/taskUtils/ITaskFactory.html" title="interface in provided.client.model.taskUtils">ITaskFactory</a>&lt;?&gt;&nbsp;taskFactory,
        java.lang.String&nbsp;param)</code>
<div class="block">Load task with task factory and param.</div>
</td>
</tr>
<tr id="i4" class="altColor">
<td class="colFirst"><code><a href="../../provided/client/model/taskUtils/ITaskFactory.html" title="interface in provided.client.model.taskUtils">ITaskFactory</a>&lt;?&gt;</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../client/model/ClientModel.html#makeTaskFactory-java.lang.String-">makeTaskFactory</a></span>(java.lang.String&nbsp;classname)</code>
<div class="block">Make a task factory for a task.</div>
</td>
</tr>
<tr id="i5" class="rowColor">
<td class="colFirst"><code>&lt;T&gt;&nbsp;java.lang.String</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../client/model/ClientModel.html#runTask-provided.compute.ITask-">runTask</a></span>(<a href="../../provided/compute/ITask.html" title="interface in provided.compute">ITask</a>&lt;T&gt;&nbsp;task)</code>
<div class="block">Runs the given ITask on the remote engine server, returning the String formatted result, 
 which is produced using the given ITask's ITaskResultFormatter object.</div>
</td>
</tr>
<tr id="i6" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../client/model/ClientModel.html#sendMsgToComputeEngine-java.lang.String-">sendMsgToComputeEngine</a></span>(java.lang.String&nbsp;msg)</code>
<div class="block">Sends a string message to the connected compute engine using the IRemoteTaskViewAdapter STUB received from the engine server.</div>
</td>
</tr>
<tr id="i7" class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../client/model/ClientModel.html#start--">start</a></span>()</code>
<div class="block">Starts the client model by initializing the RMI system and creating a remote view adapter stub for use by an engine server.</div>
</td>
</tr>
<tr id="i8" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../client/model/ClientModel.html#stop--">stop</a></span>()</code>
<div class="block">Stops the client model by using the IRMIUtils to stop the RMI system.</div>
</td>
</tr>
</table>
<ul class="blockList">
<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
<code>equals, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
<div class="details">
<ul class="blockList">
<li class="blockList">
<!-- ========= CONSTRUCTOR DETAIL ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor.detail">
<!--   -->
</a>
<h3>Constructor Detail</h3>
<a name="ClientModel-client.model.IViewAdapter-">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>ClientModel</h4>
<pre>public&nbsp;ClientModel(<a href="../../client/model/IViewAdapter.html" title="interface in client.model">IViewAdapter</a>&nbsp;_clientView)</pre>
<div class="block">Constructor of client model;</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>_clientView</code> - The model to view adapter</dd>
</dl>
</li>
</ul>
</li>
</ul>
<!-- ============ METHOD DETAIL ========== -->
<ul class="blockList">
<li class="blockList"><a name="method.detail">
<!--   -->
</a>
<h3>Method Detail</h3>
<a name="start--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>start</h4>
<pre>public&nbsp;void&nbsp;start()</pre>
<div class="block">Starts the client model by initializing the RMI system and creating a remote view adapter stub for use by an engine server. Procedure:</div>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code><a href="../../provided/client/model/IClientModel.html#start--">start</a></code>&nbsp;in interface&nbsp;<code><a href="../../provided/client/model/IClientModel.html" title="interface in provided.client.model">IClientModel</a></code></dd>
</dl>
</li>
</ul>
<a name="stop--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>stop</h4>
<pre>public&nbsp;void&nbsp;stop()</pre>
<div class="block">Stops the client model by using the IRMIUtils to stop the RMI system. This automatically stops class file server. 
 This MUST be called before exiting the system!</div>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code><a href="../../provided/client/model/IClientModel.html#stop--">stop</a></code>&nbsp;in interface&nbsp;<code><a href="../../provided/client/model/IClientModel.html" title="interface in provided.client.model">IClientModel</a></code></dd>
</dl>
</li>
</ul>
<a name="connectTo-java.lang.String-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>connectTo</h4>
<pre>public&nbsp;java.lang.String&nbsp;connectTo(java.lang.String&nbsp;remoteHost)</pre>
<div class="block">Connects to the given remote host's Registry and retrieves the stub to the 
 ICompute object bound to the ICompute.BOUND_NAME name in the remote Registry 
 on port IRMI_Defs.REGISTRY_PORT. Procedure:</div>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code><a href="../../provided/client/model/IClientModel.html#connectTo-java.lang.String-">connectTo</a></code>&nbsp;in interface&nbsp;<code><a href="../../provided/client/model/IClientModel.html" title="interface in provided.client.model">IClientModel</a></code></dd>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>remoteHost</code> - The IP address or host name of the remote server.</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>A status string on the connection.</dd>
</dl>
</li>
</ul>
<a name="sendMsgToComputeEngine-java.lang.String-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>sendMsgToComputeEngine</h4>
<pre>public&nbsp;void&nbsp;sendMsgToComputeEngine(java.lang.String&nbsp;msg)</pre>
<div class="block">Sends a string message to the connected compute engine using the IRemoteTaskViewAdapter STUB received from the engine server. 
 This message should also be echoed to the local user interface.</div>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code><a href="../../provided/client/model/IClientModel.html#sendMsgToComputeEngine-java.lang.String-">sendMsgToComputeEngine</a></code>&nbsp;in interface&nbsp;<code><a href="../../provided/client/model/IClientModel.html" title="interface in provided.client.model">IClientModel</a></code></dd>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>msg</code> - The message to be sent</dd>
</dl>
</li>
</ul>
<a name="runTask-provided.compute.ITask-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>runTask</h4>
<pre>public&nbsp;&lt;T&gt;&nbsp;java.lang.String&nbsp;runTask(<a href="../../provided/compute/ITask.html" title="interface in provided.compute">ITask</a>&lt;T&gt;&nbsp;task)</pre>
<div class="block">Runs the given ITask on the remote engine server, returning the String formatted result, 
 which is produced using the given ITask's ITaskResultFormatter object.</div>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code><a href="../../provided/client/model/IClientModel.html#runTask-provided.compute.ITask-">runTask</a></code>&nbsp;in interface&nbsp;<code><a href="../../provided/client/model/IClientModel.html" title="interface in provided.client.model">IClientModel</a></code></dd>
<dt><span class="paramLabel">Type Parameters:</span></dt>
<dd><code>T</code> - The return type of the give ITask</dd>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>task</code> - The task to run on the remote engine server.</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>A string representation of the task results, using the task's formatter object.</dd>
</dl>
</li>
</ul>
<a name="loadTask-provided.client.model.taskUtils.ITaskFactory-java.lang.String-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>loadTask</h4>
<pre>public&nbsp;&lt;T&gt;&nbsp;<a href="../../provided/compute/ITask.html" title="interface in provided.compute">ITask</a>&lt;T&gt;&nbsp;loadTask(<a href="../../provided/client/model/taskUtils/ITaskFactory.html" title="interface in provided.client.model.taskUtils">ITaskFactory</a>&lt;?&gt;&nbsp;taskFactory,
                             java.lang.String&nbsp;param)</pre>
<div class="block">Load task with task factory and param.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>taskFactory</code> - The task factory used to make a task.</dd>
<dd><code>param</code> - The parameter used initialize a task.</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The task object.</dd>
</dl>
</li>
</ul>
<a name="makeTaskFactory-java.lang.String-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>makeTaskFactory</h4>
<pre>public&nbsp;<a href="../../provided/client/model/taskUtils/ITaskFactory.html" title="interface in provided.client.model.taskUtils">ITaskFactory</a>&lt;?&gt;&nbsp;makeTaskFactory(java.lang.String&nbsp;classname)</pre>
<div class="block">Make a task factory for a task.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>classname</code> - The class name of desired task.</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The task factory for the desired task.</dd>
</dl>
</li>
</ul>
<a name="combineTaskFactory-provided.client.model.taskUtils.ITaskFactory-provided.client.model.taskUtils.ITaskFactory-java.lang.String-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>combineTaskFactory</h4>
<pre>public&nbsp;<a href="../../provided/client/model/taskUtils/ITaskFactory.html" title="interface in provided.client.model.taskUtils">ITaskFactory</a>&lt;? extends java.lang.Object&gt;&nbsp;combineTaskFactory(<a href="../../provided/client/model/taskUtils/ITaskFactory.html" title="interface in provided.client.model.taskUtils">ITaskFactory</a>&lt;?&gt;&nbsp;tf1,
                                                                   <a href="../../provided/client/model/taskUtils/ITaskFactory.html" title="interface in provided.client.model.taskUtils">ITaskFactory</a>&lt;?&gt;&nbsp;tf2,
                                                                   java.lang.String&nbsp;param)</pre>
<div class="block">This method combines two task factory into one.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>tf1</code> - task factory 1</dd>
<dd><code>tf2</code> - task factory 2</dd>
<dd><code>param</code> - Parameters used to initialize the task.</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>Task factory for the combined tasks.</dd>
</dl>
</li>
</ul>
<a name="getDefaultRemoteHost--">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>getDefaultRemoteHost</h4>
<pre>public&nbsp;java.lang.String&nbsp;getDefaultRemoteHost()</pre>
<div class="block">Getter for default remote host</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The IP adress of the remote host</dd>
</dl>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
</div>
<!-- ========= END OF CLASS DATA ========= -->
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a name="navbar.bottom">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
<a name="navbar.bottom.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/ClientModel.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../index-files/index-1.html">Index</a></li>
<li><a href="../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li>Prev&nbsp;Class</li>
<li><a href="../../client/model/IViewAdapter.html" title="interface in client.model"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../../index.html?client/model/ClientModel.html" target="_top">Frames</a></li>
<li><a href="ClientModel.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_bottom">
<li><a href="../../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a name="skip.navbar.bottom">
<!--   -->
</a></div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
</body>
</html>
