package engine.controller;

import java.awt.EventQueue;

import engine.model.EngineModel;
import engine.model.IViewAdapter;
import engine.view.EngineView;
import engine.view.IModelAdapter;

class EngineController {
	private EngineModel _model;
	private EngineView _view;
	
	public EngineController() {
		_model = new EngineModel(new IViewAdapter() {

			@Override
			public void append(String t) {	
				_view.append(t);
			}
			
		});
		
		_view = new EngineView(new IModelAdapter() {
			@Override
			public void quit() {
				_model.stop();
			}

			@Override
			public void sendMsgToClient(String msg) {
				_model.sendMsgToClient(msg);
				
			}
			
		});
		
	}
	
	public void start() {
		_model.start();
		_view.start();
	}
	
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			// java specs say that the system must be constructed on the GUI event thread
			@Override
			public void run() {
				try {
					EngineController controller = new EngineController();
					controller.start();
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}
}
